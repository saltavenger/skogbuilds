{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.esm.js"],"names":["id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","pathString","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","String","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","checkValid_","Object","defineProperty","enumerable","configurable","child","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","FORGE_DOMAIN_RE","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","protocol","query","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","_c","next","done","segment","kv","e_1_1","return","call","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","PUSH_CHARS","nextPushId","now","duplicateTime","timeStampChars","random","successor","keyAsInt","i_1","source","sourcePlusOne","predecessor","repeat","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","isEmpty","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","changeValue","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","__referenceConstructor","IndexedFilter","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","loadsAllData","isDefault","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit_","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","queryObject","viewFrom","queryParamsGetQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","has","remember","clear","forget","self_1","tree","delete","forEachTree","prefixPath","func","newOperationSourceServerTaggedQuery","queryId","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ImmutableTree","fromObject","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","serverChildren","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","registrations","eventCache","filteredChanges","filter","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","__referenceConstructor$1","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteNode","getCompleteServerCache","cache","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","SyncPoint","views","optCompleteServerCache","view","getView","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","removeWrite","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","layerTree_","write","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","getServerValue","serverCacheNode","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","map","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WebSocketImpl","MozWebSocket","WebSocket","TransactionStatus","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","request","p","q","outstandingGet","sendGet_","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","parent","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","cached","Promise","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","startTransaction","transactionUpdate","applyLocally","watchRef","Reference","transaction","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","parentPath","getRoot","databaseProp","database","promiseComplete","setPriority","thennablePushRef","pushRef","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","applyEmulatorSettings","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","createRepo","deleteRepo","appRepos","forceRestClient","repoInternal_","instanceStarted_","INTERNAL","checkDeleted_","rootInternal_","useEmulator","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","_forceRestClient","registerComponent","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"mappings":";+FAAA,4BAsNMA,EAtNN,4DAiCIC,EAEJ,WAIE,SAASA,EAAkBC,GACzBC,KAAKD,YAAcA,EAEnBC,KAAKC,QAAU,YA0CjB,OAlCAH,EAAkBI,UAAUC,IAAM,SAAUC,EAAKC,GAClC,MAATA,EACFL,KAAKD,YAAYO,WAAWN,KAAKO,cAAcH,IAE/CJ,KAAKD,YAAYS,QAAQR,KAAKO,cAAcH,GAAM,YAAUC,KAQhEP,EAAkBI,UAAUO,IAAM,SAAUL,GAC1C,IAAIM,EAAYV,KAAKD,YAAYY,QAAQX,KAAKO,cAAcH,IAE5D,OAAiB,MAAbM,EACK,KAEA,YAASA,IAIpBZ,EAAkBI,UAAUU,OAAS,SAAUR,GAC7CJ,KAAKD,YAAYO,WAAWN,KAAKO,cAAcH,KAGjDN,EAAkBI,UAAUK,cAAgB,SAAUM,GACpD,OAAOb,KAAKC,QAAUY,GAGxBf,EAAkBI,UAAUY,SAAW,WACrC,OAAOd,KAAKD,YAAYe,YAGnBhB,EAjDT,GA0EIiB,EAEJ,WACE,SAASA,IACPf,KAAKgB,OAAS,GACdhB,KAAKiB,mBAAoB,EAuB3B,OApBAF,EAAcb,UAAUC,IAAM,SAAUC,EAAKC,GAC9B,MAATA,SACKL,KAAKgB,OAAOZ,GAEnBJ,KAAKgB,OAAOZ,GAAOC,GAIvBU,EAAcb,UAAUO,IAAM,SAAUL,GACtC,OAAI,YAASJ,KAAKgB,OAAQZ,GACjBJ,KAAKgB,OAAOZ,GAGd,MAGTW,EAAcb,UAAUU,OAAS,SAAUR,UAClCJ,KAAKgB,OAAOZ,IAGdW,EA1BT,GAwDIG,EAAmB,SAA0BC,GAC/C,IAGE,GAAsB,oBAAXC,aAA4D,IAA3BA,OAAOD,GAAiC,CAElF,IAAIE,EAAaD,OAAOD,GAGxB,OAFAE,EAAWb,QAAQ,oBAAqB,SACxCa,EAAWf,WAAW,qBACf,IAAIR,EAAkBuB,IAE/B,MAAOC,IAIT,OAAO,IAAIP,GAKTQ,EAAoBL,EAAiB,gBAGrCM,EAAiBN,EAAiB,kBAkBlCO,EAAY,IAAI,IAAO,sBAKvBC,GACE7B,EAAK,EACF,WACL,OAAOA,MAUP8B,EAAO,SAAcC,GACvB,IAAIC,EAAY,YAAkBD,GAC9BD,EAAO,IAAI,IACfA,EAAKG,OAAOD,GACZ,IAAIE,EAAYJ,EAAKK,SACrB,OAAO,IAAOC,gBAAgBF,IAG5BG,EAAmB,SAASA,IAG9B,IAFA,IAAIC,EAAU,GAELC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCD,EAAQC,GAAMC,UAAUD,GAK1B,IAFA,IAAIG,EAAU,GAELC,EAAI,EAAGA,EAAIL,EAAQG,OAAQE,IAAK,CACvC,IAAIC,EAAMN,EAAQK,GAEdE,MAAMC,QAAQF,IAAQA,GAAsB,iBAARA,GAClB,iBAAfA,EAAIH,OACTC,GAAWL,EAAiBU,MAAM,KAAMH,GAExCF,GADwB,iBAARE,EACL,YAAUA,GAEVA,EAGbF,GAAW,IAGb,OAAOA,GAOLM,EAAS,KAKTC,GAAY,EAOZC,EAAgB,SAAuBC,EAASC,GAClD,aAAQA,IAA0B,IAAZD,IAAgC,IAAZA,EAAmB,+CAE7C,IAAZA,GACFvB,EAAUyB,SAAW,IAASC,QAC9BN,EAASpB,EAAU2B,IAAIC,KAAK5B,GAExBwB,GACFzB,EAAerB,IAAI,mBAAmB,IAEZ,mBAAZ6C,EAChBH,EAASG,GAETH,EAAS,KACTrB,EAAeZ,OAAO,qBAItBwC,EAAM,WAGR,IAFA,IAAIjB,EAAU,GAELC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCD,EAAQC,GAAMC,UAAUD,GAW1B,IARkB,IAAdU,IACFA,GAAY,EAEG,OAAXD,IAA6D,IAA1CrB,EAAef,IAAI,oBACxCsC,GAAc,IAIdF,EAAQ,CACV,IAAIN,EAAUL,EAAiBU,MAAM,KAAMT,GAC3CU,EAAON,KAIPe,EAAa,SAAoBC,GACnC,OAAO,WAGL,IAFA,IAAIpB,EAAU,GAELC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCD,EAAQC,GAAMC,UAAUD,GAG1BgB,EAAIR,WAAM,EAAQ,YAAS,CAACW,GAASpB,MAIrCqB,EAAQ,WAGV,IAFA,IAAIrB,EAAU,GAELC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCD,EAAQC,GAAMC,UAAUD,GAG1B,IAAIG,EAAU,4BAA8BL,EAAiBU,WAAM,EAAQ,YAAST,IACpFV,EAAU+B,MAAMjB,IAGdkB,EAAQ,WAGV,IAFA,IAAItB,EAAU,GAELC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCD,EAAQC,GAAMC,UAAUD,GAG1B,IAAIG,EAAU,yBAA2BL,EAAiBU,WAAM,EAAQ,YAAST,IAEjF,MADAV,EAAU+B,MAAMjB,GACV,IAAImB,MAAMnB,IAGdoB,EAAO,WAGT,IAFA,IAAIxB,EAAU,GAELC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCD,EAAQC,GAAMC,UAAUD,GAG1B,IAAIG,EAAU,qBAAuBL,EAAiBU,WAAM,EAAQ,YAAST,IAC7EV,EAAUkC,KAAKpB,IAmBbqB,EAAsB,SAA6BC,GACrD,MAAuB,iBAATA,IAAsBA,GAASA,GAC7CA,IAASC,OAAOC,mBAAqBF,IAASC,OAAOE,oBAgDnDC,EAAW,aAKXC,EAAW,aAKXC,EAAc,SAAqBC,EAAGC,GACxC,GAAID,IAAMC,EACR,OAAO,EACF,GAAID,IAAMH,GAAYI,IAAMH,EACjC,OAAQ,EACH,GAAIG,IAAMJ,GAAYG,IAAMF,EACjC,OAAO,EAEP,IAAII,EAASC,EAAYH,GACrBI,EAASD,EAAYF,GAEzB,OAAe,OAAXC,EACa,OAAXE,EACKF,EAASE,GAAW,EAAIJ,EAAE9B,OAAS+B,EAAE/B,OAASgC,EAASE,GAEtD,EAEU,OAAXA,EACF,EAEAJ,EAAIC,GAAK,EAAI,GAStBI,EAAgB,SAAuBL,EAAGC,GAC5C,OAAID,IAAMC,EACD,EACED,EAAIC,GACL,EAED,GAIPK,EAAa,SAAoBtE,EAAKuE,GACxC,GAAIA,GAAOvE,KAAOuE,EAChB,OAAOA,EAAIvE,GAEX,MAAM,IAAIsD,MAAM,yBAA2BtD,EAAM,gBAAkB,YAAUuE,KAI7EC,EAAoB,SAASA,EAAkBD,GACjD,GAAmB,iBAARA,GAA4B,OAARA,EAC7B,OAAO,YAAUA,GAGnB,IAAIE,EAAO,GAEX,IAAK,IAAIC,KAAKH,EACZE,EAAKE,KAAKD,GAIZD,EAAKG,OAGL,IAFA,IAAI5E,EAAM,IAEDoC,EAAI,EAAGA,EAAIqC,EAAKvC,OAAQE,IACrB,IAANA,IACFpC,GAAO,KAGTA,GAAO,YAAUyE,EAAKrC,IACtBpC,GAAO,IACPA,GAAOwE,EAAkBD,EAAIE,EAAKrC,KAIpC,OADApC,GAAO,KAWL6E,EAAoB,SAA2BrD,EAAKsD,GACtD,IAAIC,EAAMvD,EAAIU,OAEd,GAAI6C,GAAOD,EACT,MAAO,CAACtD,GAKV,IAFA,IAAIwD,EAAW,GAENC,EAAI,EAAGA,EAAIF,EAAKE,GAAKH,EACxBG,EAAIH,EAAUC,EAChBC,EAASL,KAAKnD,EAAI0D,UAAUD,EAAGF,IAE/BC,EAASL,KAAKnD,EAAI0D,UAAUD,EAAGA,EAAIH,IAIvC,OAAOE,GAUT,SAASG,EAAKZ,EAAKa,GACjB,IAAK,IAAIpF,KAAOuE,EACVA,EAAIc,eAAerF,IACrBoF,EAAGpF,EAAKuE,EAAIvE,IAalB,IAAIsF,EAAwB,SAA+BC,GACzD,aAAQ/B,EAAoB+B,GAAI,uBAEhC,IAGIC,EAAGtE,EAAGuE,EAAGC,EAAItD,EAGP,IAANmD,GACFrE,EAAI,EACJuE,EAAI,EACJD,EAAI,EAAID,IAAOI,IAAW,EAAI,IAE9BH,EAAID,EAAI,GACRA,EAAIK,KAAKC,IAAIN,KAEJK,KAAKE,IAAI,GAAG,OAGnB5E,GADAwE,EAAKE,KAAKG,IAAIH,KAAKI,MAAMJ,KAAK5C,IAAIuC,GAAKK,KAAKK,KAdrC,YAgBPR,EAAIG,KAAKM,MAAMX,EAAIK,KAAKE,IAAI,EAjBpB,GAiB+BJ,GAAME,KAAKE,IAAI,EAjB9C,OAoBR5E,EAAI,EACJuE,EAAIG,KAAKM,MAAMX,EAAIK,KAAKE,IAAI,GAAG,SAKnC,IAAIK,EAAO,GAEX,IAAK/D,EA5BO,GA4BIA,EAAGA,GAAK,EACtB+D,EAAKxB,KAAKc,EAAI,EAAI,EAAI,GACtBA,EAAIG,KAAKI,MAAMP,EAAI,GAGrB,IAAKrD,EAlCO,GAkCIA,EAAGA,GAAK,EACtB+D,EAAKxB,KAAKzD,EAAI,EAAI,EAAI,GACtBA,EAAI0E,KAAKI,MAAM9E,EAAI,GAGrBiF,EAAKxB,KAAKa,EAAI,EAAI,GAClBW,EAAKC,UACL,IAAI5E,EAAM2E,EAAKE,KAAK,IAEhBC,EAAgB,GAEpB,IAAKlE,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC1B,IAAImE,EAAUC,SAAShF,EAAIiF,OAAOrE,EAAG,GAAI,GAAG1B,SAAS,IAE9B,IAAnB6F,EAAQrE,SACVqE,EAAU,IAAMA,GAGlBD,GAAgCC,EAGlC,OAAOD,EAAcI,eA8CnBC,EAAkB,IAAIC,OAAO,qBAe7BzC,EAAc,SAAqB3C,GACrC,GAAImF,EAAgBE,KAAKrF,GAAM,CAC7B,IAAIsF,EAASpD,OAAOlC,GAEpB,GAAIsF,IAda,YAceA,GATf,WAUf,OAAOA,EAIX,OAAO,MAqBLC,EAAiB,SAAwB3B,GAC3C,IACEA,IACA,MAAOlE,GAEP8F,YAAW,WAKT,IAAIC,EAAQ/F,EAAE+F,OAAS,GAEvB,MADA1D,EAAK,yCAA0C0D,GACzC/F,IACL0E,KAAKI,MAAM,MA2BdkB,EAAwB,SAA+B9B,EAAI+B,GAC7D,IAAIC,EAAUJ,WAAW5B,EAAI+B,GAO7B,MALuB,iBAAZC,GAAwBA,EAAe,OAEhDA,EAAe,QAGVA,GA0BLC,EAEJ,WAKE,SAASA,EAAKC,EAAcC,GAC1B,QAAiB,IAAbA,EAAqB,CACvB3H,KAAK4H,QAAUF,EAAaG,MAAM,KAIlC,IAFA,IAAIC,EAAS,EAEJtF,EAAI,EAAGA,EAAIxC,KAAK4H,QAAQtF,OAAQE,IACnCxC,KAAK4H,QAAQpF,GAAGF,OAAS,IAC3BtC,KAAK4H,QAAQE,GAAU9H,KAAK4H,QAAQpF,GACpCsF,KAIJ9H,KAAK4H,QAAQtF,OAASwF,EACtB9H,KAAK+H,UAAY,OAEjB/H,KAAK4H,QAAUF,EACf1H,KAAK+H,UAAYJ,EAgBrB,OAZAF,EAAKvH,UAAUY,SAAW,WAGxB,IAFA,IAAIkH,EAAa,GAERxF,EAAIxC,KAAK+H,UAAWvF,EAAIxC,KAAK4H,QAAQtF,OAAQE,IAC5B,KAApBxC,KAAK4H,QAAQpF,KACfwF,GAAc,IAAMhI,KAAK4H,QAAQpF,IAIrC,OAAOwF,GAAc,KAGhBP,EAtCT,GAyCA,SAASQ,IACP,OAAO,IAAIR,EAAK,IAGlB,SAASS,EAAaC,GACpB,OAAIA,EAAKJ,WAAaI,EAAKP,QAAQtF,OAC1B,KAGF6F,EAAKP,QAAQO,EAAKJ,WAO3B,SAASK,EAAcD,GACrB,OAAOA,EAAKP,QAAQtF,OAAS6F,EAAKJ,UAGpC,SAASM,EAAaF,GACpB,IAAIR,EAAWQ,EAAKJ,UAMpB,OAJIJ,EAAWQ,EAAKP,QAAQtF,QAC1BqF,IAGK,IAAIF,EAAKU,EAAKP,QAASD,GAGhC,SAASW,EAAYH,GACnB,OAAIA,EAAKJ,UAAYI,EAAKP,QAAQtF,OACzB6F,EAAKP,QAAQO,EAAKP,QAAQtF,OAAS,GAGrC,KAGT,SAASiG,EAAuBJ,GAG9B,IAFA,IAAIH,EAAa,GAERxF,EAAI2F,EAAKJ,UAAWvF,EAAI2F,EAAKP,QAAQtF,OAAQE,IAC5B,KAApB2F,EAAKP,QAAQpF,KACfwF,GAAc,IAAMQ,mBAAmBC,OAAON,EAAKP,QAAQpF,MAI/D,OAAOwF,GAAc,IAQvB,SAASU,EAAUP,EAAMQ,GAKvB,YAJc,IAAVA,IACFA,EAAQ,GAGHR,EAAKP,QAAQgB,MAAMT,EAAKJ,UAAYY,GAG7C,SAASE,EAAWV,GAClB,GAAIA,EAAKJ,WAAaI,EAAKP,QAAQtF,OACjC,OAAO,KAKT,IAFA,IAAIwG,EAAS,GAEJtG,EAAI2F,EAAKJ,UAAWvF,EAAI2F,EAAKP,QAAQtF,OAAS,EAAGE,IACxDsG,EAAO/D,KAAKoD,EAAKP,QAAQpF,IAG3B,OAAO,IAAIiF,EAAKqB,EAAQ,GAG1B,SAASC,EAAUZ,EAAMa,GAGvB,IAFA,IAAIF,EAAS,GAEJtG,EAAI2F,EAAKJ,UAAWvF,EAAI2F,EAAKP,QAAQtF,OAAQE,IACpDsG,EAAO/D,KAAKoD,EAAKP,QAAQpF,IAG3B,GAAIwG,aAAwBvB,EAC1B,IAASjF,EAAIwG,EAAajB,UAAWvF,EAAIwG,EAAapB,QAAQtF,OAAQE,IACpEsG,EAAO/D,KAAKiE,EAAapB,QAAQpF,QAGnC,KAAIyG,EAAcD,EAAanB,MAAM,KAErC,IAASrF,EAAI,EAAGA,EAAIyG,EAAY3G,OAAQE,IAClCyG,EAAYzG,GAAGF,OAAS,GAC1BwG,EAAO/D,KAAKkE,EAAYzG,IAK9B,OAAO,IAAIiF,EAAKqB,EAAQ,GAO1B,SAASI,EAAYf,GACnB,OAAOA,EAAKJ,WAAaI,EAAKP,QAAQtF,OAOxC,SAAS6G,EAAgBC,EAAWC,GAClC,IAAIC,EAAQpB,EAAakB,GACrBG,EAAQrB,EAAamB,GAEzB,GAAc,OAAVC,EACF,OAAOD,EACF,GAAIC,IAAUC,EACnB,OAAOJ,EAAgBd,EAAae,GAAYf,EAAagB,IAE7D,MAAM,IAAI3F,MAAM,8BAAgC2F,EAAhC,8BAAiFD,EAAY,KAQjH,SAASI,EAAYC,EAAMC,GAIzB,IAHA,IAAIC,EAAWjB,EAAUe,EAAM,GAC3BG,EAAYlB,EAAUgB,EAAO,GAExBlH,EAAI,EAAGA,EAAImH,EAASrH,QAAUE,EAAIoH,EAAUtH,OAAQE,IAAK,CAChE,IAAIqH,EAAM1F,EAAYwF,EAASnH,GAAIoH,EAAUpH,IAE7C,GAAY,IAARqH,EACF,OAAOA,EAIX,OAAIF,EAASrH,SAAWsH,EAAUtH,OACzB,EAGFqH,EAASrH,OAASsH,EAAUtH,QAAU,EAAI,EAOnD,SAASwH,EAAW3B,EAAM4B,GACxB,GAAI3B,EAAcD,KAAUC,EAAc2B,GACxC,OAAO,EAGT,IAAK,IAAIvH,EAAI2F,EAAKJ,UAAWiC,EAAID,EAAMhC,UAAWvF,GAAK2F,EAAKP,QAAQtF,OAAQE,IAAKwH,IAC/E,GAAI7B,EAAKP,QAAQpF,KAAOuH,EAAMnC,QAAQoC,GACpC,OAAO,EAIX,OAAO,EAOT,SAASC,GAAa9B,EAAM4B,GAC1B,IAAIvH,EAAI2F,EAAKJ,UACTiC,EAAID,EAAMhC,UAEd,GAAIK,EAAcD,GAAQC,EAAc2B,GACtC,OAAO,EAGT,KAAOvH,EAAI2F,EAAKP,QAAQtF,QAAQ,CAC9B,GAAI6F,EAAKP,QAAQpF,KAAOuH,EAAMnC,QAAQoC,GACpC,OAAO,IAGPxH,IACAwH,EAGJ,OAAO,EAcT,IAAIE,GAEJ,WAKE,SAASA,EAAe/B,EAAMgC,GAC5BnK,KAAKmK,aAAeA,EACpBnK,KAAKoK,OAAS1B,EAAUP,EAAM,GAG9BnI,KAAKqK,YAAcrE,KAAKsE,IAAI,EAAGtK,KAAKoK,OAAO9H,QAE3C,IAAK,IAAIE,EAAI,EAAGA,EAAIxC,KAAKoK,OAAO9H,OAAQE,IACtCxC,KAAKqK,aAAe,YAAarK,KAAKoK,OAAO5H,IAG/CxC,KAAKuK,cA+DP,OA5DAC,OAAOC,eAAeP,EAAgB,iBAAkB,CAEtDzJ,IAAK,WACH,OAAO,IAETiK,YAAY,EACZC,cAAc,IAEhBH,OAAOC,eAAeP,EAAgB,wBAAyB,CAE7DzJ,IAAK,WACH,OAAO,KAETiK,YAAY,EACZC,cAAc,IAIhBT,EAAehK,UAAU6E,KAAO,SAAU6F,GAEpC5K,KAAKoK,OAAO9H,OAAS,IACvBtC,KAAKqK,aAAe,GAGtBrK,KAAKoK,OAAOrF,KAAK6F,GACjB5K,KAAKqK,aAAe,YAAaO,GACjC5K,KAAKuK,eAGPL,EAAehK,UAAU2K,IAAM,WAC7B,IAAIC,EAAO9K,KAAKoK,OAAOS,MACvB7K,KAAKqK,aAAe,YAAaS,GAE7B9K,KAAKoK,OAAO9H,OAAS,IACvBtC,KAAKqK,aAAe,IAIxBH,EAAehK,UAAUqK,YAAc,WACrC,GAAIvK,KAAKqK,YAAcH,EAAea,sBACpC,MAAM,IAAIrH,MAAM1D,KAAKmK,aAAe,8BAAgCD,EAAea,sBAAwB,WAAa/K,KAAKqK,YAAc,MAG7I,GAAIrK,KAAKoK,OAAO9H,OAAS4H,EAAec,eACtC,MAAM,IAAItH,MAAM1D,KAAKmK,aAAe,iEAAmED,EAAec,eAAiB,gCAAkChL,KAAKiL,kBAQlLf,EAAehK,UAAU+K,cAAgB,WACvC,OAA2B,IAAvBjL,KAAKoK,OAAO9H,OACP,GAGF,gBAAkBtC,KAAKoK,OAAO3D,KAAK,KAAO,KAG5CyD,EA/ET,GA0GIgB,GAAkB,6EA0BlBC,GAEJ,WASE,SAASA,EAASC,EAAMC,EAAQC,EAAWC,EAAeC,EAAWC,EAAgBC,QACjE,IAAdF,IACFA,GAAY,QAGS,IAAnBC,IACFA,EAAiB,SAGmB,IAAlCC,IACFA,GAAgC,GAGlC1L,KAAKqL,OAASA,EACdrL,KAAKsL,UAAYA,EACjBtL,KAAKuL,cAAgBA,EACrBvL,KAAKwL,UAAYA,EACjBxL,KAAKyL,eAAiBA,EACtBzL,KAAK0L,8BAAgCA,EACrC1L,KAAKoL,KAAOA,EAAKtE,cACjB9G,KAAK2L,OAAS3L,KAAKoL,KAAKvE,OAAO7G,KAAKoL,KAAKQ,QAAQ,KAAO,GACxD5L,KAAK6L,aAAetK,EAAkBd,IAAI,QAAU2K,IAASpL,KAAKoL,KAgFpE,OA7EAD,EAASjL,UAAU4L,gBAAkB,WACnC,OAAO9L,KAAKoL,OAASpL,KAAK6L,cAAgB7L,KAAK+L,gBAAkB/L,KAAK0L,+BAGxEP,EAASjL,UAAU8L,gBAAkB,WACnC,MAA0C,OAAnChM,KAAK6L,aAAahF,OAAO,EAAG,IAGrCsE,EAASjL,UAAU+L,WAAa,WAC9B,MAAuB,wBAAhBjM,KAAK2L,QAGdR,EAASjL,UAAU6L,aAAe,WAChC,MAAuB,mBAAhB/L,KAAK2L,QAA+C,wBAAhB3L,KAAK2L,QAGlDR,EAASjL,UAAUgM,WAAa,SAAUC,GACpCA,IAAYnM,KAAK6L,eACnB7L,KAAK6L,aAAeM,EAEhBnM,KAAKgM,mBACPzK,EAAkBpB,IAAI,QAAUH,KAAKoL,KAAMpL,KAAK6L,gBAYtDV,EAASjL,UAAUkM,cAAgB,SAAUC,EAAMC,GAGjD,IAAIC,EAEJ,GAJA,YAAuB,iBAATF,EAAmB,8BACjC,YAAyB,iBAAXC,EAAqB,gCA7FvB,cAgGRD,EACFE,GAAWvM,KAAKqL,OAAS,SAAW,SAAWrL,KAAK6L,aAAe,YAC9D,IAjGQ,iBAiGJQ,EAGT,MAAM,IAAI3I,MAAM,4BAA8B2I,GAF9CE,GAAWvM,KAAKqL,OAAS,WAAa,WAAarL,KAAK6L,aAAe,QAKrE7L,KAAK8L,oBACPQ,EAAW,GAAItM,KAAKsL,WAGtB,IAAIkB,EAAQ,GAIZ,OAHAjH,EAAK+G,GAAQ,SAAUlM,EAAKC,GAC1BmM,EAAMzH,KAAK3E,EAAM,IAAMC,MAElBkM,EAAUC,EAAM/F,KAAK,MAK9B0E,EAASjL,UAAUY,SAAW,WAC5B,IAAIc,EAAM5B,KAAKyM,cAMf,OAJIzM,KAAKyL,iBACP7J,GAAO,IAAM5B,KAAKyL,eAAiB,KAG9B7J,GAKTuJ,EAASjL,UAAUuM,YAAc,WAC/B,IAAIC,EAAW1M,KAAKqL,OAAS,WAAa,UACtCsB,EAAQ3M,KAAK0L,8BAAgC,OAAS1L,KAAKsL,UAAY,GAC3E,MAAO,GAAKoB,EAAW1M,KAAKoL,KAAO,IAAMuB,GAGpCxB,EA9GT,GAiMA,IA2iBMyB,GAKAC,GA0OFC,GAqGAC,GA/3BAC,GAAgB,SAAuBC,EAASzB,GAClD,IAAI0B,EAAYC,GAAiBF,GAC7B3B,EAAY4B,EAAU5B,UAED,iBAArB4B,EAAUvB,QACZlI,EAAMyJ,EAAU9B,KAAV8B,8EAIF5B,GAA2B,cAAdA,GAAmD,cAArB4B,EAAUvB,QACzDlI,EAAM,gFAGHyJ,EAAU7B,QA7+BO,oBAAXjK,QAA0BA,OAAOgM,UAAYhM,OAAOgM,SAASV,WAA4D,IAAhDtL,OAAOgM,SAASV,SAASd,QAAQ,WACnHjI,EAAK,6FAg/BP,IAAI4H,EAAqC,OAArB2B,EAAUG,QAAwC,QAArBH,EAAUG,OAC3D,MAAO,CACLC,SAAU,IAAInC,GAAS+B,EAAU9B,KAAM8B,EAAU7B,OAAQC,EAAWE,EAAWD,EAE/E,GAEAD,IAAc4B,EAAUK,WACxBpF,KAAM,IAAIV,EAAKyF,EAAUlF,cAIzBmF,GAAmB,SAA0BF,GAE/C,IAAI7B,EAAO,GACPO,EAAS,GACT4B,EAAY,GACZvF,EAAa,GACbsD,EAAY,GAEZD,GAAS,EACTgC,EAAS,QACTG,EAAO,IAEX,GAAuB,iBAAZP,EAAsB,CAE/B,IAAIQ,EAAWR,EAAQrB,QAAQ,MAE3B6B,GAAY,IACdJ,EAASJ,EAAQ3H,UAAU,EAAGmI,EAAW,GACzCR,EAAUA,EAAQ3H,UAAUmI,EAAW,IAIzC,IAAIC,EAAWT,EAAQrB,QAAQ,MAEb,IAAd8B,IACFA,EAAWT,EAAQ3K,QAGrB,IAAIqL,EAAkBV,EAAQrB,QAAQ,MAEb,IAArB+B,IACFA,EAAkBV,EAAQ3K,QAG5B8I,EAAO6B,EAAQ3H,UAAU,EAAGU,KAAKG,IAAIuH,EAAUC,IAE3CD,EAAWC,IAEb3F,EAjIN,SAAoBA,GAIlB,IAHA,IAAI4F,EAAoB,GACpB9E,EAASd,EAAWH,MAAM,KAErBrF,EAAI,EAAGA,EAAIsG,EAAOxG,OAAQE,IACjC,GAAIsG,EAAOtG,GAAGF,OAAS,EAAG,CACxB,IAAIuL,EAAQ/E,EAAOtG,GAEnB,IACEqL,EAAQC,mBAAmBD,EAAME,QAAQ,MAAO,MAChD,MAAOzM,IAETsM,GAAqB,IAAMC,EAI/B,OAAOD,EAiHUI,CAAWf,EAAQ3H,UAAUoI,EAAUC,KAGtD,IAAIM,EA7GR,SAAqBC,GACnB,IAAIC,EAAKC,EAELC,EAAU,GAEgB,MAA1BH,EAAYI,OAAO,KACrBJ,EAAcA,EAAY5I,UAAU,IAGtC,IACE,IAAK,IAAIiJ,EAAK,YAASL,EAAYrG,MAAM,MAAO2G,EAAKD,EAAGE,QAASD,EAAGE,KAAMF,EAAKD,EAAGE,OAAQ,CACxF,IAAIE,EAAUH,EAAGnO,MAEjB,GAAuB,IAAnBsO,EAAQrM,OAAZ,CAIA,IAAIsM,EAAKD,EAAQ9G,MAAM,KAEL,IAAd+G,EAAGtM,OACL+L,EAAQP,mBAAmBc,EAAG,KAAOd,mBAAmBc,EAAG,IAE3DjL,EAAK,0BAA4BgL,EAAU,eAAiBT,EAAc,OAG9E,MAAOW,GACPV,EAAM,CACJ3K,MAAOqL,GAET,QACA,IACML,IAAOA,EAAGE,OAASN,EAAKG,EAAGO,SAASV,EAAGW,KAAKR,GAChD,QACA,GAAIJ,EAAK,MAAMA,EAAI3K,OAIvB,OAAO6K,EAwEaW,CAAY/B,EAAQ3H,UAAUU,KAAKG,IAAI8G,EAAQ3K,OAAQqL,MAEzEF,EAAWrC,EAAKQ,QAAQ,OAER,GACdP,EAAoB,UAAXgC,GAAiC,QAAXA,EAC/BG,EAAO5G,SAASwE,EAAK9F,UAAUmI,EAAW,GAAI,KAE9CA,EAAWrC,EAAK9I,OAGlB,IAAI2M,EAAkB7D,EAAKxC,MAAM,EAAG6E,GAEpC,GAAsC,cAAlCwB,EAAgBnI,cAClB6E,EAAS,iBACJ,GAAIsD,EAAgBpH,MAAM,KAAKvF,QAAU,EAC9CqJ,EAASsD,MACJ,CAEL,IAAIC,EAAS9D,EAAKQ,QAAQ,KAC1B2B,EAAYnC,EAAK9F,UAAU,EAAG4J,GAAQpI,cACtC6E,EAASP,EAAK9F,UAAU4J,EAAS,GAEjC5D,EAAYiC,EAIV,OAAQU,IACV3C,EAAY2C,EAAgB,IAIhC,MAAO,CACL7C,KAAMA,EACNoC,KAAMA,EACN7B,OAAQA,EACR4B,UAAWA,EACXlC,OAAQA,EACRgC,OAAQA,EACRrF,WAAYA,EACZsD,UAAWA,IAyBX6D,GAAqB,iCAMrBC,GAAsB,+BAOtBC,GAAa,SAAoBjP,GACnC,MAAsB,iBAARA,GAAmC,IAAfA,EAAIkC,SAAiB6M,GAAmBlI,KAAK7G,IAG7EkP,GAAoB,SAA2BtH,GACjD,MAA6B,iBAAfA,GAAiD,IAAtBA,EAAW1F,SAAiB8M,GAAoBnI,KAAKe,IAY5FuH,GAAkB,SAAyBC,GAC7C,OAAoB,OAAbA,GAAyC,iBAAbA,GAA6C,iBAAbA,IAA0B5L,EAAoB4L,IAAaA,GAAgC,iBAAbA,GACjJ,YAASA,EAAU,QAOjBC,GAA0B,SAAiCC,EAAQC,EAAgB9L,EAAMsE,EAAMyH,GAC7FA,QAAqBC,IAAThM,GAIhBiM,GAAqB,YAAYJ,EAAQC,EAAgBC,GAAW/L,EAAMsE,IAOxE2H,GAAuB,SAASA,EAAqBC,EAAalM,EAAMmM,GAC1E,IAAI7H,EAAO6H,aAAiBvI,EAAO,IAAIyC,GAAe8F,EAAOD,GAAeC,EAE5E,QAAaH,IAAThM,EACF,MAAM,IAAIH,MAAMqM,EAAc,sBAAwB5H,EAAK8C,iBAG7D,GAAoB,mBAATpH,EACT,MAAM,IAAIH,MAAMqM,EAAc,uBAAyB5H,EAAK8C,gBAAkB,oBAAsBpH,EAAK/C,YAG3G,GAAI8C,EAAoBC,GACtB,MAAM,IAAIH,MAAMqM,EAAc,YAAclM,EAAK/C,WAAa,IAAMqH,EAAK8C,iBAI3E,GAAoB,iBAATpH,GAAqBA,EAAKvB,OAxDlB,SAwD4C,GAAK,YAAauB,GAxD9D,SAyDjB,MAAM,IAAIH,MAAMqM,wDAAoF5H,EAAK8C,gBAAkB,MAAQpH,EAAKyB,UAAU,EAAG,IAAM,SAK7J,GAAIzB,GAAwB,iBAATA,EAAmB,CACpC,IAAIoM,GAAgB,EAChBC,GAAmB,EAiBvB,GAhBA3K,EAAK1B,GAAM,SAAUzD,EAAKC,GACxB,GAAY,WAARD,EACF6P,GAAgB,OACX,GAAY,cAAR7P,GAA+B,QAARA,IAChC8P,GAAmB,GAEdb,GAAWjP,IACd,MAAM,IAAIsD,MAAMqM,EAAc,6BAA+B3P,EAAM,KAAO+H,EAAK8C,gBAA/D8E,wFAIpB5H,EAAKpD,KAAK3E,GACV0P,EAAqBC,EAAa1P,EAAO8H,GACzCA,EAAK0C,SAGHoF,GAAiBC,EACnB,MAAM,IAAIxM,MAAMqM,EAAc,4BAA8B5H,EAAK8C,gBAAkB,sCA6CrFkF,GAA+B,SAAsCT,EAAQC,EAAgB9L,EAAMsE,EAAMyH,GAC3G,IAAIA,QAAqBC,IAAThM,EAAhB,CAIA,IAAIuM,EAAgB,YAAYV,EAAQC,EAAgBC,GAExD,IAAM/L,GAAwB,iBAATA,GAAsBnB,MAAMC,QAAQkB,GACvD,MAAM,IAAIH,MAAM0M,EAAgB,0DAGlC,IAAIC,EAAa,GACjB9K,EAAK1B,GAAM,SAAUzD,EAAKC,GACxB,IAAIiQ,EAAU,IAAI7I,EAAKrH,GAGvB,GAFA0P,GAAqBM,EAAe/P,EAAO0I,EAAUZ,EAAMmI,IAE9B,cAAzBhI,EAAYgI,KACTf,GAAgBlP,GACnB,MAAM,IAAIqD,MAAM0M,EAAgB,kCAAoCE,EAAQxP,WAA5DsP,gGAIpBC,EAAWtL,KAAKuL,MA1Da,SAAoCP,EAAaM,GAChF,IAAI7N,EAAG8N,EAEP,IAAK9N,EAAI,EAAGA,EAAI6N,EAAW/N,OAAQE,IAIjC,IAFA,IAAIqC,EAAO6D,EADX4H,EAAUD,EAAW7N,IAGZwH,EAAI,EAAGA,EAAInF,EAAKvC,OAAQ0H,IAC/B,GAAgB,cAAZnF,EAAKmF,IAAsBA,IAAMnF,EAAKvC,OAAS,QAAS,IAAK+M,GAAWxK,EAAKmF,IAC/E,MAAM,IAAItG,MAAMqM,EAAc,4BAA8BlL,EAAKmF,GAAK,aAAesG,EAAQxP,WAA7EiP,uFAQtBM,EAAWrL,KAAKwE,GAChB,IAAI+G,EAAW,KAEf,IAAK/N,EAAI,EAAGA,EAAI6N,EAAW/N,OAAQE,IAAK,CAGtC,GAFA8N,EAAUD,EAAW7N,GAEJ,OAAb+N,GAAqBtG,GAAasG,EAAUD,GAC9C,MAAM,IAAI5M,MAAMqM,EAAc,mBAAqBQ,EAASzP,WAAa,qCAAuCwP,EAAQxP,YAG1HyP,EAAWD,GAiCbE,CAA2BJ,EAAeC,KAGxCI,GAAmB,SAA0Bf,EAAQC,EAAgBH,EAAUI,GACjF,IAAIA,QAAyBC,IAAbL,EAAhB,CAIA,GAAI5L,EAAoB4L,GACtB,MAAM,IAAI9L,MAAM,YAAYgM,EAAQC,EAAgBC,GAAY,MAAQJ,EAAS1O,WAAjE,6FAIlB,IAAKyO,GAAgBC,GACnB,MAAM,IAAI9L,MAAM,YAAYgM,EAAQC,EAAgBC,GAApC,yFAIhBc,GAAoB,SAA2BhB,EAAQC,EAAgBgB,EAAWf,GACpF,IAAIA,QAA0BC,IAAdc,EAIhB,OAAQA,GACN,IAAK,QACL,IAAK,cACL,IAAK,gBACL,IAAK,gBACL,IAAK,cACH,MAEF,QACE,MAAM,IAAIjN,MAAM,YAAYgM,EAAQC,EAAgBC,GAApC,8GAIlBgB,GAAc,SAAqBlB,EAAQC,EAAgBvP,EAAKwP,GAClE,KAAIA,QAAoBC,IAARzP,GAIXiP,GAAWjP,IACd,MAAM,IAAIsD,MAAM,YAAYgM,EAAQC,EAAgBC,GAAY,yBAA2BxP,EAA3E,qGAIhByQ,GAAqB,SAA4BnB,EAAQC,EAAgB3H,EAAY4H,GACvF,KAAIA,QAA2BC,IAAf7H,GAIXsH,GAAkBtH,IACrB,MAAM,IAAItE,MAAM,YAAYgM,EAAQC,EAAgBC,GAAY,0BAA4B5H,EAA5E,qFAIhB8I,GAAyB,SAAgCpB,EAAQC,EAAgB3H,EAAY4H,GAC3F5H,IAEFA,EAAaA,EAAW+F,QAAQ,mBAAoB,MAGtD8C,GAAmBnB,EAAQC,EAAgB3H,EAAY4H,IAGrDmB,GAAuB,SAA8BrB,EAAQvH,GAC/D,GAA2B,UAAvBD,EAAaC,GACf,MAAM,IAAIzE,MAAMgM,EAAS,8CAIzBsB,GAAc,SAAqBtB,EAAQC,EAAgBzC,GAE7D,IAAIlF,EAAakF,EAAU/E,KAAKrH,WAEhC,GAAyC,iBAA5BoM,EAAUI,SAASlC,MAAyD,IAAnC8B,EAAUI,SAASlC,KAAK9I,SAAiB+M,GAAWnC,EAAUI,SAAShC,YAAwD,cAA1C4B,EAAUI,SAASlC,KAAKvD,MAAM,KAAK,IAA4C,IAAtBG,EAAW1F,SAxNrL,SAA+B0F,GAMzD,OALIA,IAEFA,EAAaA,EAAW+F,QAAQ,mBAAoB,MAG/CuB,GAAkBtH,GAkNuMiJ,CAAsBjJ,GACpP,MAAM,IAAItE,MAAM,YAAYgM,EAAQC,GAAgB,GAApC,yFAIhBuB,GAAkB,SAAyBxB,EAAQC,EAAgBwB,EAAMvB,GAC3E,KAAIA,QAAqBC,IAATsB,IAII,kBAATA,EACT,MAAM,IAAIzN,MAAM,YAAYgM,EAAQC,EAAgBC,GAAY,uBAqBhEwB,GAEJ,WACE,SAASA,EAAaC,EAAOrB,GAC3BhQ,KAAKqR,MAAQA,EACbrR,KAAKgQ,MAAQA,EA+Df,OA5DAoB,EAAalR,UAAUoR,OAAS,SAAUC,GACxC,YAAiB,sBAAuB,EAAG,EAAGlP,UAAUC,QACxD,YAAiB,sBAAuB,EAAGiP,GAAY,GACvD,IAAIC,EAAW,IAAI,IAEnB,OADAxR,KAAKqR,MAAMI,mBAAmBzR,KAAKgQ,MAAOwB,EAASE,aAAaH,IACzDC,EAASG,SAGlBP,EAAalR,UAAUU,OAAS,SAAU2Q,GACxC,YAAiB,sBAAuB,EAAG,EAAGlP,UAAUC,QACxDyO,GAAqB,sBAAuB/Q,KAAKgQ,OACjD,YAAiB,sBAAuB,EAAGuB,GAAY,GACvD,IAAIC,EAAW,IAAI,IAEnB,OADAxR,KAAKqR,MAAMO,gBAAgB5R,KAAKgQ,MAAO,KAAMwB,EAASE,aAAaH,IAC5DC,EAASG,SAGlBP,EAAalR,UAAUC,IAAM,SAAUE,EAAOkR,GAC5C,YAAiB,mBAAoB,EAAG,EAAGlP,UAAUC,QACrDyO,GAAqB,mBAAoB/Q,KAAKgQ,OAC9CP,GAAwB,mBAAoB,EAAGpP,EAAOL,KAAKgQ,OAAO,GAClE,YAAiB,mBAAoB,EAAGuB,GAAY,GACpD,IAAIC,EAAW,IAAI,IAEnB,OADAxR,KAAKqR,MAAMO,gBAAgB5R,KAAKgQ,MAAO3P,EAAOmR,EAASE,aAAaH,IAC7DC,EAASG,SAGlBP,EAAalR,UAAU2R,gBAAkB,SAAUxR,EAAOmP,EAAU+B,GAClE,YAAiB,+BAAgC,EAAG,EAAGlP,UAAUC,QACjEyO,GAAqB,+BAAgC/Q,KAAKgQ,OAC1DP,GAAwB,+BAAgC,EAAGpP,EAAOL,KAAKgQ,OAAO,GAC9ES,GAAiB,+BAAgC,EAAGjB,GAAU,GAC9D,YAAiB,+BAAgC,EAAG+B,GAAY,GAChE,IAAIC,EAAW,IAAI,IAEnB,OADAxR,KAAKqR,MAAMS,4BAA4B9R,KAAKgQ,MAAO3P,EAAOmP,EAAUgC,EAASE,aAAaH,IACnFC,EAASG,SAGlBP,EAAalR,UAAU4B,OAAS,SAAUiQ,EAAeR,GAIvD,GAHA,YAAiB,sBAAuB,EAAG,EAAGlP,UAAUC,QACxDyO,GAAqB,sBAAuB/Q,KAAKgQ,OAE7CtN,MAAMC,QAAQoP,GAAgB,CAGhC,IAFA,IAAIC,EAAmB,GAEdxP,EAAI,EAAGA,EAAIuP,EAAczP,SAAUE,EAC1CwP,EAAiB,GAAKxP,GAAKuP,EAAcvP,GAG3CuP,EAAgBC,EAChBrO,EAAK,gOAGPwM,GAA6B,sBAAuB,EAAG4B,EAAe/R,KAAKgQ,OAAO,GAClF,YAAiB,sBAAuB,EAAGuB,GAAY,GACvD,IAAIC,EAAW,IAAI,IAEnB,OADAxR,KAAKqR,MAAMY,mBAAmBjS,KAAKgQ,MAAO+B,EAAeP,EAASE,aAAaH,IACxEC,EAASG,SAGXP,EAlET,GAsFIc,GAEJ,WAIE,SAASA,EAAkBC,EAAWC,GACpCpS,KAAKmS,UAAYA,EACjBnS,KAAKoS,SAAWA,EAalB,OARAF,EAAkBhS,UAAUmS,OAAS,WAEnC,OADA,YAAiB,2BAA4B,EAAG,EAAGhQ,UAAUC,QACtD,CACL6P,UAAWnS,KAAKmS,UAChBC,SAAUpS,KAAKoS,SAASC,WAIrBH,EAnBT,GAwCII,GAAa,mEAmBbC,IAGE3F,GAAe,EAKfC,GAAgB,GACb,SAAU2F,GACf,IAEIhQ,EAFAiQ,EAAgBD,IAAQ5F,GAC5BA,GAAe4F,EAEf,IAAIE,EAAiB,IAAIhQ,MAAM,GAE/B,IAAKF,EAAI,EAAGA,GAAK,EAAGA,IAClBkQ,EAAelQ,GAAK8P,GAAWhE,OAAOkE,EAAM,IAG5CA,EAAMxM,KAAKI,MAAMoM,EAAM,IAGzB,YAAe,IAARA,EAAW,4BAClB,IAAI3S,EAAK6S,EAAejM,KAAK,IAE7B,GAAKgM,EAIE,CAGL,IAAKjQ,EAAI,GAAIA,GAAK,GAA0B,KAArBqK,GAAcrK,GAAWA,IAC9CqK,GAAcrK,GAAK,EAGrBqK,GAAcrK,UAVd,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAClBqK,GAAcrK,GAAKwD,KAAKI,MAAsB,GAAhBJ,KAAK2M,UAYvC,IAAKnQ,EAAI,EAAGA,EAAI,GAAIA,IAClB3C,GAAMyS,GAAWhE,OAAOzB,GAAcrK,IAIxC,OADA,YAAqB,KAAd3C,EAAGyC,OAAe,oCAClBzC,IAIP+S,GAAY,SAAmBxS,GACjC,GAAY,eAARA,EAEF,MArEgB,IAwElB,IAAIyS,EAAWtO,EAAYnE,GAE3B,GAAgB,MAAZyS,EACF,MAAO,IAAMA,EAAW,GAK1B,IAFA,IAAIpE,EAAO,IAAI/L,MAAMtC,EAAIkC,QAEhBwQ,EAAM,EAAGA,EAAMrE,EAAKnM,OAAQwQ,IACnCrE,EAAKqE,GAAO1S,EAAIkO,OAAOwE,GAGzB,GAAIrE,EAAKnM,OAlFO,IAoFd,OADAmM,EAAK1J,KArFW,KAsFT0J,EAAKhI,KAAK,IAKnB,IAFA,IAAIjE,EAAIiM,EAAKnM,OAAS,EAEfE,GAAK,GA1FM,MA0FDiM,EAAKjM,IACpBA,IAKF,IAAW,IAAPA,EACF,OAAO0B,EAGT,IAAI6O,EAAStE,EAAKjM,GACdwQ,EAAgBV,GAAWhE,OAAOgE,GAAW1G,QAAQmH,GAAU,GAEnE,OADAtE,EAAKjM,GAAKwQ,EACHvE,EAAK7F,MAAM,EAAGpG,EAAI,GAAGiE,KAAK,KAI/BwM,GAAc,SAAqB7S,GACrC,GAAY,gBAARA,EACF,OAAO6D,EAGT,IAAI4O,EAAWtO,EAAYnE,GAE3B,GAAgB,MAAZyS,EACF,MAAO,IAAMA,EAAW,GAK1B,IAFA,IAAIpE,EAAO,IAAI/L,MAAMtC,EAAIkC,QAEhBE,EAAI,EAAGA,EAAIiM,EAAKnM,OAAQE,IAC/BiM,EAAKjM,GAAKpC,EAAIkO,OAAO9L,GAcvB,MAxIkB,MAwIdiM,EAAKA,EAAKnM,OAAS,GACD,IAAhBmM,EAAKnM,OAEA,qBAGFmM,EAAKA,EAAKnM,OAAS,GACnBmM,EAAKhI,KAAK,MAMnBgI,EAAKA,EAAKnM,OAAS,GAAKgQ,GAAWhE,OAAOgE,GAAW1G,QAAQ6C,EAAKA,EAAKnM,OAAS,IAAM,GAC/EmM,EAAKhI,KAAK,IArJC,IAqJmByM,OApJrB,IAoJ0CzE,EAAKnM,UAoB7D6Q,GAEJ,WACE,SAASA,EAAUtS,EAAMuS,GACvBpT,KAAKa,KAAOA,EACZb,KAAKoT,KAAOA,EAOd,OAJAD,EAAUE,KAAO,SAAUxS,EAAMuS,GAC/B,OAAO,IAAID,EAAUtS,EAAMuS,IAGtBD,EAVT,GA8BIG,GAEJ,WACE,SAASA,KAmCT,OA5BAA,EAAMpT,UAAUqT,WAAa,WAC3B,OAAOvT,KAAKwT,QAAQnQ,KAAKrD,OAW3BsT,EAAMpT,UAAUuT,oBAAsB,SAAUC,EAASC,GACvD,IAAIC,EAAa,IAAIT,GAAUlP,EAAUyP,GACrCG,EAAa,IAAIV,GAAUlP,EAAU0P,GACzC,OAAgD,IAAzC3T,KAAKwT,QAAQI,EAAYC,IAQlCP,EAAMpT,UAAU4T,QAAU,WAExB,OAAOX,GAAUY,KAGZT,EApCT,GA0DIU,GAEJ,SAAUC,GAGR,SAASD,IACP,OAAkB,OAAXC,GAAmBA,EAAOrR,MAAM5C,KAAMqC,YAAcrC,KAwE7D,OA3EA,YAAUgU,EAAUC,GAMpBzJ,OAAOC,eAAeuJ,EAAU,eAAgB,CAC9CvT,IAAK,WACH,OAAOqM,IAET3M,IAAK,SAAa+T,GAChBpH,GAAeoH,GAEjBxJ,YAAY,EACZC,cAAc,IAMhBqJ,EAAS9T,UAAUsT,QAAU,SAAUpP,EAAGC,GACxC,OAAOF,EAAYC,EAAEvD,KAAMwD,EAAExD,OAO/BmT,EAAS9T,UAAUiU,YAAc,SAAUf,GAGzC,MAAM,YAAe,oDAOvBY,EAAS9T,UAAUuT,oBAAsB,SAAUC,EAASC,GAC1D,OAAO,GAOTK,EAAS9T,UAAU4T,QAAU,WAE3B,OAAOX,GAAUY,KAOnBC,EAAS9T,UAAUkU,QAAU,WAG3B,OAAO,IAAIjB,GAAUjP,EAAU4I,KAGjCkH,EAAS9T,UAAUmU,SAAW,SAAUC,EAAYzT,GAGlD,OAFA,YAA6B,iBAAfyT,EAAyB,gDAEhC,IAAInB,GAAUmB,EAAYxH,KAOnCkH,EAAS9T,UAAUY,SAAW,WAC5B,MAAO,QAGFkT,EA5ET,CA6EEV,IAEEiB,GAAY,IAAIP,GAwBpB,IAyCIQ,GAsSAC,GACAC,GAhVAC,GAAmB,SAA0BnF,GAC/C,MAAwB,iBAAbA,EACF,UAAY9J,EAAsB8J,GAElC,UAAYA,GAQnBoF,GAAuB,SAA8BC,GACvD,GAAIA,EAAaC,aAAc,CAC7B,IAAIZ,EAAMW,EAAaX,MACvB,YAAsB,iBAARA,GAAmC,iBAARA,GAAmC,iBAARA,GAAoB,YAASA,EAAK,OAAQ,6CAE9G,YAAOW,IAAiB9H,IAAY8H,EAAaE,UAAW,gCAI9D,YAAOF,IAAiB9H,IAAY8H,EAAaG,cAAcD,UAAW,uDA4BxEE,GAEJ,WAME,SAASA,EAASC,EAAQC,QACF,IAAlBA,IACFA,EAAgBF,EAAST,0BAA0BY,YAGrDpV,KAAKkV,OAASA,EACdlV,KAAKmV,cAAgBA,EACrBnV,KAAKqV,UAAY,KACjB,iBAAuBxF,IAAhB7P,KAAKkV,QAAwC,OAAhBlV,KAAKkV,OAAiB,4DAC1DN,GAAqB5U,KAAKmV,eAyP5B,OAtPA3K,OAAOC,eAAewK,EAAU,4BAA6B,CAC3DxU,IAAK,WACH,OAAO+T,IAETrU,IAAK,SAAa+T,GAChBM,GAA4BN,GAE9BxJ,YAAY,EACZC,cAAc,IAIhBsK,EAAS/U,UAAU4U,WAAa,WAC9B,OAAO,GAKTG,EAAS/U,UAAU8U,YAAc,WAC/B,OAAOhV,KAAKmV,eAKdF,EAAS/U,UAAUoV,eAAiB,SAAUC,GAC5C,OAAO,IAAIN,EAASjV,KAAKkV,OAAQK,IAKnCN,EAAS/U,UAAUsV,kBAAoB,SAAUC,GAE/C,MAAkB,cAAdA,EACKzV,KAAKmV,cAELF,EAAST,0BAA0BY,YAM9CH,EAAS/U,UAAUwV,SAAW,SAAUvN,GACtC,OAAIe,EAAYf,GACPnI,KACyB,cAAvBkI,EAAaC,GACfnI,KAAKmV,cAELF,EAAST,0BAA0BY,YAQ9CH,EAAS/U,UAAUyV,SAAW,WAC5B,OAAO,GAKTV,EAAS/U,UAAU0V,wBAA0B,SAAUH,EAAWI,GAChE,OAAO,MAKTZ,EAAS/U,UAAU4V,qBAAuB,SAAUL,EAAWM,GAC7D,MAAkB,cAAdN,EACKzV,KAAKsV,eAAeS,GAClBA,EAAahB,WAA2B,cAAdU,EAC5BzV,KAEAiV,EAAST,0BAA0BY,WAAWU,qBAAqBL,EAAWM,GAAcT,eAAetV,KAAKmV,gBAM3HF,EAAS/U,UAAU8V,YAAc,SAAU7N,EAAM4N,GAC/C,IAAIE,EAAQ/N,EAAaC,GAEzB,OAAc,OAAV8N,EACKF,EACEA,EAAahB,WAAuB,cAAVkB,EAC5BjW,MAEP,YAAiB,cAAViW,GAAiD,IAAxB7N,EAAcD,GAAa,8CACpDnI,KAAK8V,qBAAqBG,EAAOhB,EAAST,0BAA0BY,WAAWY,YAAY3N,EAAaF,GAAO4N,MAM1Hd,EAAS/U,UAAU6U,QAAU,WAC3B,OAAO,GAKTE,EAAS/U,UAAUgW,YAAc,WAC/B,OAAO,GAKTjB,EAAS/U,UAAUiW,aAAe,SAAUC,EAAOC,GACjD,OAAO,GAOTpB,EAAS/U,UAAUgU,IAAM,SAAUoC,GACjC,OAAIA,IAAiBtW,KAAKgV,cAAcD,UAC/B,CACL,SAAU/U,KAAKuW,WACf,YAAavW,KAAKgV,cAAcd,OAG3BlU,KAAKuW,YAMhBtB,EAAS/U,UAAUsW,KAAO,WACxB,GAAuB,OAAnBxW,KAAKqV,UAAoB,CAC3B,IAAIoB,EAAS,GAERzW,KAAKmV,cAAcJ,YACtB0B,GAAU,YAAc9B,GAAiB3U,KAAKmV,cAAcjB,OAAS,KAGvE,IAAI7H,SAAcrM,KAAKkV,OACvBuB,GAAUpK,EAAO,IAGfoK,GADW,WAATpK,EACQ3G,EAAsB1F,KAAKkV,QAE3BlV,KAAKkV,OAGjBlV,KAAKqV,UAAY1T,EAAK8U,GAGxB,OAAOzW,KAAKqV,WAQdJ,EAAS/U,UAAUqW,SAAW,WAC5B,OAAOvW,KAAKkV,QAOdD,EAAS/U,UAAUwW,UAAY,SAAU3M,GACvC,OAAIA,IAAUkL,EAAST,0BAA0BY,WACxC,EACErL,aAAiBkL,EAAST,2BAC3B,GAER,YAAOzK,EAAM+K,aAAc,qBACpB9U,KAAK2W,mBAAmB5M,KAQnCkL,EAAS/U,UAAUyW,mBAAqB,SAAUC,GAChD,IAAIC,SAAuBD,EAAU1B,OACjC4B,SAAsB9W,KAAKkV,OAC3B6B,EAAa9B,EAAS+B,iBAAiBpL,QAAQiL,GAC/CI,EAAYhC,EAAS+B,iBAAiBpL,QAAQkL,GAIlD,OAHA,YAAOC,GAAc,EAAG,sBAAwBF,GAChD,YAAOI,GAAa,EAAG,sBAAwBH,GAE3CC,IAAeE,EAEI,WAAjBH,EAEK,EAGH9W,KAAKkV,OAAS0B,EAAU1B,QAClB,EACClV,KAAKkV,SAAW0B,EAAU1B,OAC5B,EAEA,EAIJ+B,EAAYF,GAQvB9B,EAAS/U,UAAUgX,UAAY,WAC7B,OAAOlX,MAOTiV,EAAS/U,UAAUiX,UAAY,WAC7B,OAAO,GAOTlC,EAAS/U,UAAUkX,OAAS,SAAUrN,GAIpC,GAAIA,IAAU/J,KACZ,OAAO,EACF,GAAI+J,EAAM+K,aAAc,CAC7B,IAAI8B,EAAY7M,EAChB,OAAO/J,KAAKkV,SAAW0B,EAAU1B,QAAUlV,KAAKmV,cAAciC,OAAOR,EAAUzB,eAE/E,OAAO,GASXF,EAAS+B,iBAAmB,CAAC,SAAU,UAAW,SAAU,UACrD/B,EAxQT,GAuSA,IAs9BIoC,GAsMAjC,GAllCAkC,GAAiB,IAxErB,SAAUrD,GAGR,SAASsD,IACP,OAAkB,OAAXtD,GAAmBA,EAAOrR,MAAM5C,KAAMqC,YAAcrC,KAiE7D,OApEA,YAAUuX,EAAetD,GAUzBsD,EAAcrX,UAAUsT,QAAU,SAAUpP,EAAGC,GAC7C,IAAImT,EAAYpT,EAAEgP,KAAK4B,cACnByC,EAAYpT,EAAE+O,KAAK4B,cACnB0C,EAAWF,EAAUd,UAAUe,GAEnC,OAAiB,IAAbC,EACKvT,EAAYC,EAAEvD,KAAMwD,EAAExD,MAEtB6W,GAQXH,EAAcrX,UAAUiU,YAAc,SAAUf,GAC9C,OAAQA,EAAK4B,cAAcD,WAO7BwC,EAAcrX,UAAUuT,oBAAsB,SAAUC,EAASC,GAC/D,OAAQD,EAAQsB,cAAcoC,OAAOzD,EAAQqB,gBAO/CuC,EAAcrX,UAAU4T,QAAU,WAEhC,OAAOX,GAAUY,KAOnBwD,EAAcrX,UAAUkU,QAAU,WAChC,OAAO,IAAIjB,GAAUjP,EAAU,IAAI+Q,GAAS,kBAAmBP,MAGjE6C,EAAcrX,UAAUmU,SAAW,SAAUC,EAAYzT,GACvD,IAAIgU,EAAeJ,GAAaH,GAChC,OAAO,IAAInB,GAAUtS,EAAM,IAAIoU,GAAS,kBAAmBJ,KAO7D0C,EAAcrX,UAAUY,SAAW,WACjC,MAAO,aAGFyW,EArET,CAsEEjE,KAwBEqE,GAEJ,WAME,SAASA,EAAkBvE,EAAMwE,EAAUC,EAAYC,EAAYC,QACxC,IAArBA,IACFA,EAAmB,MAGrB/X,KAAK8X,WAAaA,EAClB9X,KAAK+X,iBAAmBA,EACxB/X,KAAKgY,WAAa,GAGlB,IAFA,IAAInO,EAAM,GAEFuJ,EAAK2B,WAQX,GAPA3B,EAAOA,EACPvJ,EAAM+N,EAAWC,EAAWzE,EAAKhT,IAAKwX,GAAY,EAE9CE,IACFjO,IAAQ,GAGNA,EAAM,EAGNuJ,EADEpT,KAAK8X,WACA1E,EAAK3J,KAEL2J,EAAK1J,UAET,IAAY,IAARG,EAAW,CAEpB7J,KAAKgY,WAAWjT,KAAKqO,GACrB,MAGApT,KAAKgY,WAAWjT,KAAKqO,GAGnBA,EADEpT,KAAK8X,WACA1E,EAAK1J,MAEL0J,EAAK3J,MA+DpB,OAzDAkO,EAAkBzX,UAAU+X,QAAU,WACpC,GAA+B,IAA3BjY,KAAKgY,WAAW1V,OAClB,OAAO,KAGT,IACI4V,EADA9E,EAAOpT,KAAKgY,WAAWnN,MAY3B,GAREqN,EADElY,KAAK+X,iBACE/X,KAAK+X,iBAAiB3E,EAAKhT,IAAKgT,EAAK/S,OAErC,CACPD,IAAKgT,EAAKhT,IACVC,MAAO+S,EAAK/S,OAIZL,KAAK8X,WAGP,IAFA1E,EAAOA,EAAK3J,MAEJ2J,EAAK2B,WACX/U,KAAKgY,WAAWjT,KAAKqO,GACrBA,EAAOA,EAAK1J,WAKd,IAFA0J,EAAOA,EAAK1J,OAEJ0J,EAAK2B,WACX/U,KAAKgY,WAAWjT,KAAKqO,GACrBA,EAAOA,EAAK3J,KAIhB,OAAOyO,GAGTP,EAAkBzX,UAAUiY,QAAU,WACpC,OAAOnY,KAAKgY,WAAW1V,OAAS,GAGlCqV,EAAkBzX,UAAUkY,KAAO,WACjC,GAA+B,IAA3BpY,KAAKgY,WAAW1V,OAClB,OAAO,KAGT,IAAI8Q,EAAOpT,KAAKgY,WAAWhY,KAAKgY,WAAW1V,OAAS,GAEpD,OAAItC,KAAK+X,iBACA/X,KAAK+X,iBAAiB3E,EAAKhT,IAAKgT,EAAK/S,OAErC,CACLD,IAAKgT,EAAKhT,IACVC,MAAO+S,EAAK/S,QAKXsX,EAzGT,GAgHIU,GAEJ,WAQE,SAASA,EAASjY,EAAKC,EAAOiY,EAAO7O,EAAMC,GACzC1J,KAAKI,IAAMA,EACXJ,KAAKK,MAAQA,EACbL,KAAKsY,MAAiB,MAATA,EAAgBA,EAAQD,EAASE,IAC9CvY,KAAKyJ,KAAe,MAARA,EAAeA,EAAO+O,GAAUpD,WAC5CpV,KAAK0J,MAAiB,MAATA,EAAgBA,EAAQ8O,GAAUpD,WAsSjD,OAxRAiD,EAASnY,UAAUuY,KAAO,SAAUrY,EAAKC,EAAOiY,EAAO7O,EAAMC,GAC3D,OAAO,IAAI2O,EAAgB,MAAPjY,EAAcA,EAAMJ,KAAKI,IAAc,MAATC,EAAgBA,EAAQL,KAAKK,MAAgB,MAATiY,EAAgBA,EAAQtY,KAAKsY,MAAe,MAAR7O,EAAeA,EAAOzJ,KAAKyJ,KAAe,MAATC,EAAgBA,EAAQ1J,KAAK0J,QAO1L2O,EAASnY,UAAUwY,MAAQ,WACzB,OAAO1Y,KAAKyJ,KAAKiP,QAAU,EAAI1Y,KAAK0J,MAAMgP,SAO5CL,EAASnY,UAAU6U,QAAU,WAC3B,OAAO,GAaTsD,EAASnY,UAAUyY,iBAAmB,SAAUtC,GAC9C,OAAOrW,KAAKyJ,KAAKkP,iBAAiBtC,MAAaA,EAAOrW,KAAKI,IAAKJ,KAAKK,QAAUL,KAAK0J,MAAMiP,iBAAiBtC,IAY7GgC,EAASnY,UAAU0Y,iBAAmB,SAAUvC,GAC9C,OAAOrW,KAAK0J,MAAMkP,iBAAiBvC,IAAWA,EAAOrW,KAAKI,IAAKJ,KAAKK,QAAUL,KAAKyJ,KAAKmP,iBAAiBvC,IAO3GgC,EAASnY,UAAU2Y,KAAO,WACxB,OAAI7Y,KAAKyJ,KAAKsL,UACL/U,KAEAA,KAAKyJ,KAAKoP,QAQrBR,EAASnY,UAAU4Y,OAAS,WAC1B,OAAO9Y,KAAK6Y,OAAOzY,KAOrBiY,EAASnY,UAAU6Y,OAAS,WAC1B,OAAI/Y,KAAK0J,MAAMqL,UACN/U,KAAKI,IAELJ,KAAK0J,MAAMqP,UAWtBV,EAASnY,UAAU8Y,OAAS,SAAU5Y,EAAKC,EAAOwX,GAChD,IAAIoB,EAAIjZ,KACJ6J,EAAMgO,EAAWzX,EAAK6Y,EAAE7Y,KAU5B,OAPE6Y,EADEpP,EAAM,EACJoP,EAAER,KAAK,KAAM,KAAM,KAAMQ,EAAExP,KAAKuP,OAAO5Y,EAAKC,EAAOwX,GAAa,MACnD,IAARhO,EACLoP,EAAER,KAAK,KAAMpY,EAAO,KAAM,KAAM,MAEhC4Y,EAAER,KAAK,KAAM,KAAM,KAAM,KAAMQ,EAAEvP,MAAMsP,OAAO5Y,EAAKC,EAAOwX,KAGvDqB,UAOXb,EAASnY,UAAUiZ,WAAa,WAC9B,GAAInZ,KAAKyJ,KAAKsL,UACZ,OAAOyD,GAAUpD,WAGnB,IAAI6D,EAAIjZ,KAOR,OALKiZ,EAAExP,KAAK2P,UAAaH,EAAExP,KAAKA,KAAK2P,WACnCH,EAAIA,EAAEI,iBAGRJ,EAAIA,EAAER,KAAK,KAAM,KAAM,KAAMQ,EAAExP,KAAK0P,aAAc,OACzCD,UASXb,EAASnY,UAAUU,OAAS,SAAUR,EAAKyX,GACzC,IAAIoB,EAAGK,EAGP,GAAIzB,EAAWzX,GAFf6Y,EAAIjZ,MAEkBI,KAAO,EACtB6Y,EAAExP,KAAKsL,WAAckE,EAAExP,KAAK2P,UAAaH,EAAExP,KAAKA,KAAK2P,WACxDH,EAAIA,EAAEI,gBAGRJ,EAAIA,EAAER,KAAK,KAAM,KAAM,KAAMQ,EAAExP,KAAK7I,OAAOR,EAAKyX,GAAa,UACxD,CASL,GARIoB,EAAExP,KAAK2P,WACTH,EAAIA,EAAEM,gBAGHN,EAAEvP,MAAMqL,WAAckE,EAAEvP,MAAM0P,UAAaH,EAAEvP,MAAMD,KAAK2P,WAC3DH,EAAIA,EAAEO,iBAGuB,IAA3B3B,EAAWzX,EAAK6Y,EAAE7Y,KAAY,CAChC,GAAI6Y,EAAEvP,MAAMqL,UACV,OAAOyD,GAAUpD,WAEjBkE,EAAWL,EAAEvP,MAAMmP,OACnBI,EAAIA,EAAER,KAAKa,EAASlZ,IAAKkZ,EAASjZ,MAAO,KAAM,KAAM4Y,EAAEvP,MAAMyP,cAIjEF,EAAIA,EAAER,KAAK,KAAM,KAAM,KAAM,KAAMQ,EAAEvP,MAAM9I,OAAOR,EAAKyX,IAGzD,OAAOoB,EAAEC,UAOXb,EAASnY,UAAUkZ,OAAS,WAC1B,OAAOpZ,KAAKsY,OAOdD,EAASnY,UAAUgZ,OAAS,WAC1B,IAAID,EAAIjZ,KAcR,OAZIiZ,EAAEvP,MAAM0P,WAAaH,EAAExP,KAAK2P,WAC9BH,EAAIA,EAAEQ,eAGJR,EAAExP,KAAK2P,UAAYH,EAAExP,KAAKA,KAAK2P,WACjCH,EAAIA,EAAEM,gBAGJN,EAAExP,KAAK2P,UAAYH,EAAEvP,MAAM0P,WAC7BH,EAAIA,EAAES,cAGDT,GAOTZ,EAASnY,UAAUmZ,aAAe,WAChC,IAAIJ,EAAIjZ,KAAK0Z,aAQb,OANIT,EAAEvP,MAAMD,KAAK2P,WAGfH,GADAA,GADAA,EAAIA,EAAER,KAAK,KAAM,KAAM,KAAM,KAAMQ,EAAEvP,MAAM6P,iBACrCE,eACAC,cAGDT,GAOTZ,EAASnY,UAAUsZ,cAAgB,WACjC,IAAIP,EAAIjZ,KAAK0Z,aAOb,OALIT,EAAExP,KAAKA,KAAK2P,WAEdH,GADAA,EAAIA,EAAEM,gBACAG,cAGDT,GAOTZ,EAASnY,UAAUuZ,YAAc,WAC/B,IAAIE,EAAK3Z,KAAKyY,KAAK,KAAM,KAAMJ,EAASE,IAAK,KAAMvY,KAAK0J,MAAMD,MAC9D,OAAOzJ,KAAK0J,MAAM+O,KAAK,KAAM,KAAMzY,KAAKsY,MAAOqB,EAAI,OAOrDtB,EAASnY,UAAUqZ,aAAe,WAChC,IAAIK,EAAK5Z,KAAKyY,KAAK,KAAM,KAAMJ,EAASE,IAAKvY,KAAKyJ,KAAKC,MAAO,MAC9D,OAAO1J,KAAKyJ,KAAKgP,KAAK,KAAM,KAAMzY,KAAKsY,MAAO,KAAMsB,IAOtDvB,EAASnY,UAAUwZ,WAAa,WAC9B,IAAIjQ,EAAOzJ,KAAKyJ,KAAKgP,KAAK,KAAM,MAAOzY,KAAKyJ,KAAK6O,MAAO,KAAM,MAC1D5O,EAAQ1J,KAAK0J,MAAM+O,KAAK,KAAM,MAAOzY,KAAK0J,MAAM4O,MAAO,KAAM,MACjE,OAAOtY,KAAKyY,KAAK,KAAM,MAAOzY,KAAKsY,MAAO7O,EAAMC,IASlD2O,EAASnY,UAAU2Z,eAAiB,WAClC,IAAIC,EAAa9Z,KAAK+Z,SACtB,OAAO/T,KAAKE,IAAI,EAAK4T,IAAe9Z,KAAK0Y,QAAU,GAGrDL,EAASnY,UAAU6Z,OAAS,WAC1B,GAAI/Z,KAAKoZ,UAAYpZ,KAAKyJ,KAAK2P,SAC7B,MAAM,IAAI1V,MAAM,0BAA4B1D,KAAKI,IAAM,IAAMJ,KAAKK,MAAQ,KAG5E,GAAIL,KAAK0J,MAAM0P,SACb,MAAM,IAAI1V,MAAM,mBAAqB1D,KAAKI,IAAM,IAAMJ,KAAKK,MAAQ,YAGrE,IAAIyZ,EAAa9Z,KAAKyJ,KAAKsQ,SAE3B,GAAID,IAAe9Z,KAAK0J,MAAMqQ,SAC5B,MAAM,IAAIrW,MAAM,uBAEhB,OAAOoW,GAAc9Z,KAAKoZ,SAAW,EAAI,IAI7Cf,EAASE,KAAM,EACfF,EAAS2B,OAAQ,EACV3B,EAnTT,GA0TI4B,GAEJ,WACE,SAASA,KAmGT,OA3FAA,EAAc/Z,UAAUuY,KAAO,SAAUrY,EAAKC,EAAOiY,EAAO7O,EAAMC,GAChE,OAAO1J,MAYTia,EAAc/Z,UAAU8Y,OAAS,SAAU5Y,EAAKC,EAAOwX,GACrD,OAAO,IAAIQ,GAASjY,EAAKC,EAAO,OAWlC4Z,EAAc/Z,UAAUU,OAAS,SAAUR,EAAKyX,GAC9C,OAAO7X,MAOTia,EAAc/Z,UAAUwY,MAAQ,WAC9B,OAAO,GAOTuB,EAAc/Z,UAAU6U,QAAU,WAChC,OAAO,GAYTkF,EAAc/Z,UAAUyY,iBAAmB,SAAUtC,GACnD,OAAO,GAYT4D,EAAc/Z,UAAU0Y,iBAAmB,SAAUvC,GACnD,OAAO,GAGT4D,EAAc/Z,UAAU4Y,OAAS,WAC/B,OAAO,MAGTmB,EAAc/Z,UAAU6Y,OAAS,WAC/B,OAAO,MAGTkB,EAAc/Z,UAAU6Z,OAAS,WAC/B,OAAO,GAOTE,EAAc/Z,UAAUkZ,OAAS,WAC/B,OAAO,GAGFa,EApGT,GA4GIzB,GAEJ,WAKE,SAASA,EAAU0B,EAAaC,QAChB,IAAVA,IACFA,EAAQ3B,EAAUpD,YAGpBpV,KAAKka,YAAcA,EACnBla,KAAKma,MAAQA,EAkLf,OAtKA3B,EAAUtY,UAAU8Y,OAAS,SAAU5Y,EAAKC,GAC1C,OAAO,IAAImY,EAAUxY,KAAKka,YAAala,KAAKma,MAAMnB,OAAO5Y,EAAKC,EAAOL,KAAKka,aAAazB,KAAK,KAAM,KAAMJ,GAAS2B,MAAO,KAAM,QAUhIxB,EAAUtY,UAAUU,OAAS,SAAUR,GACrC,OAAO,IAAIoY,EAAUxY,KAAKka,YAAala,KAAKma,MAAMvZ,OAAOR,EAAKJ,KAAKka,aAAazB,KAAK,KAAM,KAAMJ,GAAS2B,MAAO,KAAM,QAWzHxB,EAAUtY,UAAUO,IAAM,SAAUL,GAIlC,IAHA,IAAIyJ,EACAuJ,EAAOpT,KAAKma,OAER/G,EAAK2B,WAAW,CAGtB,GAAY,KAFZlL,EAAM7J,KAAKka,YAAY9Z,EAAKgT,EAAKhT,MAG/B,OAAOgT,EAAK/S,MACHwJ,EAAM,EACfuJ,EAAOA,EAAK3J,KACHI,EAAM,IACfuJ,EAAOA,EAAK1J,OAIhB,OAAO,MAST8O,EAAUtY,UAAUka,kBAAoB,SAAUha,GAKhD,IAJA,IAAIyJ,EACAuJ,EAAOpT,KAAKma,MACZE,EAAc,MAEVjH,EAAK2B,WAAW,CAGtB,GAAY,KAFZlL,EAAM7J,KAAKka,YAAY9Z,EAAKgT,EAAKhT,MAElB,CACb,GAAKgT,EAAK3J,KAAKsL,UAQR,OAAIsF,EACFA,EAAYja,IAEZ,KARP,IAFAgT,EAAOA,EAAK3J,MAEJ2J,EAAK1J,MAAMqL,WACjB3B,EAAOA,EAAK1J,MAGd,OAAO0J,EAAKhT,IAMLyJ,EAAM,EACfuJ,EAAOA,EAAK3J,KACHI,EAAM,IACfwQ,EAAcjH,EACdA,EAAOA,EAAK1J,OAIhB,MAAM,IAAIhG,MAAM,0EAOlB8U,EAAUtY,UAAU6U,QAAU,WAC5B,OAAO/U,KAAKma,MAAMpF,WAOpByD,EAAUtY,UAAUwY,MAAQ,WAC1B,OAAO1Y,KAAKma,MAAMzB,SAOpBF,EAAUtY,UAAU4Y,OAAS,WAC3B,OAAO9Y,KAAKma,MAAMrB,UAOpBN,EAAUtY,UAAU6Y,OAAS,WAC3B,OAAO/Y,KAAKma,MAAMpB,UAapBP,EAAUtY,UAAUyY,iBAAmB,SAAUtC,GAC/C,OAAOrW,KAAKma,MAAMxB,iBAAiBtC,IAYrCmC,EAAUtY,UAAU0Y,iBAAmB,SAAUvC,GAC/C,OAAOrW,KAAKma,MAAMvB,iBAAiBvC,IAQrCmC,EAAUtY,UAAUoa,YAAc,SAAUC,GAC1C,OAAO,IAAI5C,GAAkB3X,KAAKma,MAAO,KAAMna,KAAKka,aAAa,EAAOK,IAG1E/B,EAAUtY,UAAUsa,gBAAkB,SAAUpa,EAAKma,GACnD,OAAO,IAAI5C,GAAkB3X,KAAKma,MAAO/Z,EAAKJ,KAAKka,aAAa,EAAOK,IAGzE/B,EAAUtY,UAAUua,uBAAyB,SAAUra,EAAKma,GAC1D,OAAO,IAAI5C,GAAkB3X,KAAKma,MAAO/Z,EAAKJ,KAAKka,aAAa,EAAMK,IAGxE/B,EAAUtY,UAAUwa,mBAAqB,SAAUH,GACjD,OAAO,IAAI5C,GAAkB3X,KAAKma,MAAO,KAAMna,KAAKka,aAAa,EAAMK,IAOzE/B,EAAUpD,WAAa,IAAI6E,GACpBzB,EA7LT,GAiNImC,GAAQ3U,KAAK5C,IAAI,GAEjBwX,GAEJ,WACE,SAASA,EAAUtY,GACjB,IAAiCuY,EASjC7a,KAAK0Y,OAT4BmC,EASXvY,EAAS,EAPtBsE,SAASZ,KAAK5C,IAAIyX,GAAOF,GAAO,KAQzC3a,KAAK8a,SAAW9a,KAAK0Y,MAAQ,EAC7B,IAN+BnS,EAM3BwU,GAN2BxU,EAMZvG,KAAK0Y,MALf9R,SAASlE,MAAM6D,EAAO,GAAGE,KAAK,KAAM,IAM7CzG,KAAKgb,MAAQ1Y,EAAS,EAAIyY,EAU5B,OAPAH,EAAU1a,UAAU+a,aAAe,WAEjC,IAAI/C,IAAWlY,KAAKgb,MAAQ,GAAOhb,KAAK8a,UAExC,OADA9a,KAAK8a,WACE5C,GAGF0C,EAxBT,GAyCIM,GAAgB,SAAuBC,EAAWtR,EAAKuR,EAAOC,GAChEF,EAAUnW,KAAK6E,GAEf,IAiEIyR,EA3CmB,SAA0BC,GAyB/C,IAxBA,IAAInI,EAAO,KACPkI,EAAO,KACPlF,EAAQ+E,EAAU7Y,OAElBkZ,EAAe,SAAsBC,EAAWnD,GAClD,IAAIoD,EAAMtF,EAAQqF,EACdE,EAAOvF,EACXA,GAASqF,EACT,IAAIG,EA/BgB,SAASC,EAAkBH,EAAKC,GACtD,IACIG,EACA1b,EAFAkC,EAASqZ,EAAOD,EAIpB,GAAe,IAAXpZ,EACF,OAAO,KACF,GAAe,IAAXA,EAGT,OAFAwZ,EAAYX,EAAUO,GACtBtb,EAAMgb,EAAQA,EAAMU,GAAaA,EAC1B,IAAIzD,GAASjY,EAAK0b,EAAU1I,KAAMiF,GAAS2B,MAAO,KAAM,MAG/D,IAAI+B,EAASnV,SAAStE,EAAS,EAAG,IAAMoZ,EACpCjS,EAAOoS,EAAkBH,EAAKK,GAC9BrS,EAAQmS,EAAkBE,EAAS,EAAGJ,GAG1C,OAFAG,EAAYX,EAAUY,GACtB3b,EAAMgb,EAAQA,EAAMU,GAAaA,EAC1B,IAAIzD,GAASjY,EAAK0b,EAAU1I,KAAMiF,GAAS2B,MAAOvQ,EAAMC,GAa/CmS,CAAkBH,EAAM,EAAGC,GACvCG,EAAYX,EAAUO,GACtBtb,EAAMgb,EAAQA,EAAMU,GAAaA,EACrCE,EAAc,IAAI3D,GAASjY,EAAK0b,EAAU1I,KAAMkF,EAAO,KAAMsD,KAG3DI,EAAgB,SAAuBC,GACrC7I,GACFA,EAAK3J,KAAOwS,EACZ7I,EAAO6I,IAEPX,EAAOW,EACP7I,EAAO6I,IAIFzZ,EAAI,EAAGA,EAAI+Y,EAAO7C,QAASlW,EAAG,CACrC,IAAI0Z,EAAQX,EAAON,eAEfQ,EAAYzV,KAAKE,IAAI,EAAGqV,EAAO7C,OAASlW,EAAI,IAE5C0Z,EACFV,EAAaC,EAAWpD,GAAS2B,QAGjCwB,EAAaC,EAAWpD,GAAS2B,OACjCwB,EAAaC,EAAWpD,GAASE,MAIrC,OAAO+C,EAIEa,CADE,IAAIvB,GAAUO,EAAU7Y,SAGrC,OAAO,IAAIkW,GAAU6C,GAAaxR,EAAKyR,IAsBrCc,GAAiB,GAEjBC,GAEJ,WACE,SAASA,EAASC,EAAUC,GAC1Bvc,KAAKsc,SAAWA,EAChBtc,KAAKuc,UAAYA,EA+InB,OA5IA/R,OAAOC,eAAe4R,EAAU,UAAW,CAIzC5b,IAAK,WAOH,OANA,YAAO2b,IAAkB9E,GAAgB,uCACzCD,GAAmBA,IAAoB,IAAIgF,EAAS,CAClD,YAAaD,IACZ,CACD,YAAa9E,MAIjB5M,YAAY,EACZC,cAAc,IAGhB0R,EAASnc,UAAUO,IAAM,SAAU+b,GACjC,IAAIC,EAAY,YAAQzc,KAAKsc,SAAUE,GAEvC,IAAKC,EACH,MAAM,IAAI/Y,MAAM,wBAA0B8Y,GAG5C,OAAIC,aAAqBjE,GAChBiE,EAIA,MAIXJ,EAASnc,UAAUwc,SAAW,SAAUC,GACtC,OAAO,YAAS3c,KAAKuc,UAAWI,EAAgB7b,aAGlDub,EAASnc,UAAU0c,SAAW,SAAUD,EAAiBE,GACvD,YAAOF,IAAoBpI,GAAW,uEAMtC,IALA,IAWIuI,EAXA3B,EAAY,GACZ4B,GAAkB,EAClBC,EAAOH,EAAiBvC,YAAYnH,GAAUE,MAC9C5E,EAAOuO,EAAK/E,UAETxJ,GACLsO,EAAkBA,GAAmBJ,EAAgBxI,YAAY1F,EAAK2E,MACtE+H,EAAUpW,KAAK0J,GACfA,EAAOuO,EAAK/E,UAMZ6E,EADEC,EACS7B,GAAcC,EAAWwB,EAAgBpJ,cAEzC6I,GAGb,IAAIa,EAAYN,EAAgB7b,WAE5Boc,EAAc,YAAS,GAAIld,KAAKuc,WAEpCW,EAAYD,GAAaN,EAEzB,IAAIQ,EAAa,YAAS,GAAInd,KAAKsc,UAGnC,OADAa,EAAWF,GAAaH,EACjB,IAAIT,EAASc,EAAYD,IAOlCb,EAASnc,UAAUkd,aAAe,SAAUtB,EAAWe,GACrD,IAAIQ,EAAQrd,KAuCZ,OAAO,IAAIqc,EArCM,YAAIrc,KAAKsc,UAAU,SAAUgB,EAAiBL,GAC7D,IAAI7G,EAAQ,YAAQiH,EAAMd,UAAWU,GAGrC,GAFA,YAAO7G,EAAO,oCAAsC6G,GAEhDK,IAAoBlB,GAAgB,CAEtC,GAAIhG,EAAMjC,YAAY2H,EAAU1I,MAAO,CAMrC,IAJA,IAAI+H,EAAY,GACZ6B,EAAOH,EAAiBvC,YAAYnH,GAAUE,MAC9C5E,EAAOuO,EAAK/E,UAETxJ,GACDA,EAAK5N,OAASib,EAAUjb,MAC1Bsa,EAAUpW,KAAK0J,GAGjBA,EAAOuO,EAAK/E,UAId,OADAkD,EAAUpW,KAAK+W,GACRZ,GAAcC,EAAW/E,EAAM7C,cAGtC,OAAO6I,GAGT,IAAImB,EAAeV,EAAiBpc,IAAIqb,EAAUjb,MAC9C2c,EAAcF,EAMlB,OAJIC,IACFC,EAAcA,EAAY5c,OAAO,IAAIuS,GAAU2I,EAAUjb,KAAM0c,KAG1DC,EAAYxE,OAAO8C,EAAWA,EAAU1I,SAGnBpT,KAAKuc,YAOvCF,EAASnc,UAAUud,kBAAoB,SAAU3B,EAAWe,GAgB1D,OAAO,IAAIR,EAfM,YAAIrc,KAAKsc,UAAU,SAAUgB,GAC5C,GAAIA,IAAoBlB,GAEtB,OAAOkB,EAEP,IAAIC,EAAeV,EAAiBpc,IAAIqb,EAAUjb,MAElD,OAAI0c,EACKD,EAAgB1c,OAAO,IAAIuS,GAAU2I,EAAUjb,KAAM0c,IAGrDD,KAImBtd,KAAKuc,YAGhCF,EAlJT,GAsKA,SAASqB,GAAqBjU,EAAMC,GAClC,OAAOvF,EAAYsF,EAAK5I,KAAM6I,EAAM7I,MAGtC,SAAS8c,GAAgBlU,EAAMC,GAC7B,OAAOvF,EAAYsF,EAAMC,GA4B3B,IAAIkU,GAEJ,WAKE,SAASA,EAAaC,EAAW1I,EAAe2I,GAC9C9d,KAAK6d,UAAYA,EACjB7d,KAAKmV,cAAgBA,EACrBnV,KAAK8d,UAAYA,EACjB9d,KAAKqV,UAAY,KAObrV,KAAKmV,eACPP,GAAqB5U,KAAKmV,eAGxBnV,KAAK6d,UAAU9I,WACjB,aAAQ/U,KAAKmV,eAAiBnV,KAAKmV,cAAcJ,UAAW,wCA0YhE,OAtYAvK,OAAOC,eAAemT,EAAc,aAAc,CAChDnd,IAAK,WACH,OAAO2U,KAAeA,GAAa,IAAIwI,EAAa,IAAIpF,GAAUmF,IAAkB,KAAMtB,GAAS0B,WAErGrT,YAAY,EACZC,cAAc,IAIhBiT,EAAa1d,UAAU4U,WAAa,WAClC,OAAO,GAKT8I,EAAa1d,UAAU8U,YAAc,WACnC,OAAOhV,KAAKmV,eAAiBC,IAK/BwI,EAAa1d,UAAUoV,eAAiB,SAAUC,GAChD,OAAIvV,KAAK6d,UAAU9I,UAEV/U,KAEA,IAAI4d,EAAa5d,KAAK6d,UAAWtI,EAAiBvV,KAAK8d,YAMlEF,EAAa1d,UAAUsV,kBAAoB,SAAUC,GAEnD,GAAkB,cAAdA,EACF,OAAOzV,KAAKgV,cAEZ,IAAIpK,EAAQ5K,KAAK6d,UAAUpd,IAAIgV,GAC/B,OAAiB,OAAV7K,EAAiBwK,GAAaxK,GAMzCgT,EAAa1d,UAAUwV,SAAW,SAAUvN,GAC1C,IAAI8N,EAAQ/N,EAAaC,GAEzB,OAAc,OAAV8N,EACKjW,KAGFA,KAAKwV,kBAAkBS,GAAOP,SAASrN,EAAaF,KAK7DyV,EAAa1d,UAAUyV,SAAW,SAAUF,GAC1C,OAAyC,OAAlCzV,KAAK6d,UAAUpd,IAAIgV,IAK5BmI,EAAa1d,UAAU4V,qBAAuB,SAAUL,EAAWM,GAGjE,GAFA,YAAOA,EAAc,8CAEH,cAAdN,EACF,OAAOzV,KAAKsV,eAAeS,GAE3B,IAAI+F,EAAY,IAAI3I,GAAUsC,EAAWM,GACrCyH,OAAc,EACdQ,OAAc,EAEdjI,EAAahB,WACfyI,EAAcxd,KAAK6d,UAAUjd,OAAO6U,GACpCuI,EAAche,KAAK8d,UAAUL,kBAAkB3B,EAAW9b,KAAK6d,aAE/DL,EAAcxd,KAAK6d,UAAU7E,OAAOvD,EAAWM,GAC/CiI,EAAche,KAAK8d,UAAUV,aAAatB,EAAW9b,KAAK6d,YAG5D,IAAII,EAAcT,EAAYzI,UAAYK,GAAapV,KAAKmV,cAC5D,OAAO,IAAIyI,EAAaJ,EAAaS,EAAaD,IAMtDJ,EAAa1d,UAAU8V,YAAc,SAAU7N,EAAM4N,GACnD,IAAIE,EAAQ/N,EAAaC,GAEzB,GAAc,OAAV8N,EACF,OAAOF,EAEP,YAA8B,cAAvB7N,EAAaC,IAAiD,IAAxBC,EAAcD,GAAa,8CACxE,IAAI+V,EAAoBle,KAAKwV,kBAAkBS,GAAOD,YAAY3N,EAAaF,GAAO4N,GACtF,OAAO/V,KAAK8V,qBAAqBG,EAAOiI,IAM5CN,EAAa1d,UAAU6U,QAAU,WAC/B,OAAO/U,KAAK6d,UAAU9I,WAKxB6I,EAAa1d,UAAUgW,YAAc,WACnC,OAAOlW,KAAK6d,UAAUnF,SAKxBkF,EAAa1d,UAAUgU,IAAM,SAAUoC,GACrC,GAAItW,KAAK+U,UACP,OAAO,KAGT,IAAIpQ,EAAM,GACNwZ,EAAU,EACVpF,EAAS,EACTqF,GAAiB,EAYrB,GAXApe,KAAKmW,aAAamB,IAAgB,SAAUlX,EAAKyV,GAC/ClR,EAAIvE,GAAOyV,EAAU3B,IAAIoC,GACzB6H,IAEIC,GAAkBR,EAAa7W,gBAAgBE,KAAK7G,GACtD2Y,EAAS/S,KAAKsE,IAAIyO,EAAQjV,OAAO1D,IAEjCge,GAAiB,MAIhB9H,GAAgB8H,GAAkBrF,EAAS,EAAIoF,EAAS,CAE3D,IAAIE,EAAQ,GAEZ,IAAK,IAAIje,KAAOuE,EACd0Z,EAAMje,GAAOuE,EAAIvE,GAGnB,OAAOie,EAMP,OAJI/H,IAAiBtW,KAAKgV,cAAcD,YACtCpQ,EAAI,aAAe3E,KAAKgV,cAAcd,OAGjCvP,GAMXiZ,EAAa1d,UAAUsW,KAAO,WAC5B,GAAuB,OAAnBxW,KAAKqV,UAAoB,CAC3B,IAAIiJ,EAAW,GAEVte,KAAKgV,cAAcD,YACtBuJ,GAAY,YAAc3J,GAAiB3U,KAAKgV,cAAcd,OAAS,KAGzElU,KAAKmW,aAAamB,IAAgB,SAAUlX,EAAKyV,GAC/C,IAAI0I,EAAY1I,EAAUW,OAER,KAAd+H,IACFD,GAAY,IAAMle,EAAM,IAAMme,MAGlCve,KAAKqV,UAAyB,KAAbiJ,EAAkB,GAAK3c,EAAK2c,GAG/C,OAAOte,KAAKqV,WAKduI,EAAa1d,UAAU0V,wBAA0B,SAAUH,EAAWI,EAAWO,GAC/E,IAAIoI,EAAMxe,KAAKye,cAAcrI,GAE7B,GAAIoI,EAAK,CACP,IAAIvL,EAAcuL,EAAIpE,kBAAkB,IAAIjH,GAAUsC,EAAWI,IACjE,OAAO5C,EAAcA,EAAYpS,KAAO,KAExC,OAAOb,KAAK6d,UAAUzD,kBAAkB3E,IAI5CmI,EAAa1d,UAAUwe,kBAAoB,SAAU/B,GACnD,IAAI6B,EAAMxe,KAAKye,cAAc9B,GAE7B,GAAI6B,EAAK,CACP,IAAI1F,EAAS0F,EAAI1F,SACjB,OAAOA,GAAUA,EAAOjY,KAExB,OAAOb,KAAK6d,UAAU/E,UAI1B8E,EAAa1d,UAAUye,cAAgB,SAAUhC,GAC/C,IAAI7D,EAAS9Y,KAAK0e,kBAAkB/B,GAEpC,OAAI7D,EACK,IAAI3F,GAAU2F,EAAQ9Y,KAAK6d,UAAUpd,IAAIqY,IAEzC,MAQX8E,EAAa1d,UAAU0e,iBAAmB,SAAUjC,GAClD,IAAI6B,EAAMxe,KAAKye,cAAc9B,GAE7B,GAAI6B,EAAK,CACP,IAAIzF,EAASyF,EAAIzF,SACjB,OAAOA,GAAUA,EAAOlY,KAExB,OAAOb,KAAK6d,UAAU9E,UAI1B6E,EAAa1d,UAAU2e,aAAe,SAAUlC,GAC9C,IAAI5D,EAAS/Y,KAAK4e,iBAAiBjC,GAEnC,OAAI5D,EACK,IAAI5F,GAAU4F,EAAQ/Y,KAAK6d,UAAUpd,IAAIsY,IAEzC,MAQX6E,EAAa1d,UAAUiW,aAAe,SAAUC,EAAOC,GACrD,IAAImI,EAAMxe,KAAKye,cAAcrI,GAE7B,OAAIoI,EACKA,EAAI7F,kBAAiB,SAAUmG,GACpC,OAAOzI,EAAOyI,EAAYje,KAAMie,EAAY1L,SAGvCpT,KAAK6d,UAAUlF,iBAAiBtC,IAI3CuH,EAAa1d,UAAUoa,YAAc,SAAUqC,GAC7C,OAAO3c,KAAKwa,gBAAgBmC,EAAgB7I,UAAW6I,IAGzDiB,EAAa1d,UAAUsa,gBAAkB,SAAUuE,EAAWpC,GAC5D,IAAI6B,EAAMxe,KAAKye,cAAc9B,GAE7B,GAAI6B,EACF,OAAOA,EAAIhE,gBAAgBuE,GAAW,SAAU3e,GAC9C,OAAOA,KAMT,IAHA,IAAI4e,EAAWhf,KAAK6d,UAAUrD,gBAAgBuE,EAAUle,KAAMsS,GAAUE,MACpE5E,EAAOuQ,EAAS5G,OAEL,MAAR3J,GAAgBkO,EAAgBnJ,QAAQ/E,EAAMsQ,GAAa,GAChEC,EAAS/G,UACTxJ,EAAOuQ,EAAS5G,OAGlB,OAAO4G,GAIXpB,EAAa1d,UAAUwa,mBAAqB,SAAUiC,GACpD,OAAO3c,KAAKya,uBAAuBkC,EAAgBvI,UAAWuI,IAGhEiB,EAAa1d,UAAUua,uBAAyB,SAAUwE,EAAStC,GACjE,IAAI6B,EAAMxe,KAAKye,cAAc9B,GAE7B,GAAI6B,EACF,OAAOA,EAAI/D,uBAAuBwE,GAAS,SAAU7e,GACnD,OAAOA,KAMT,IAHA,IAAI4e,EAAWhf,KAAK6d,UAAUpD,uBAAuBwE,EAAQpe,KAAMsS,GAAUE,MACzE5E,EAAOuQ,EAAS5G,OAEL,MAAR3J,GAAgBkO,EAAgBnJ,QAAQ/E,EAAMwQ,GAAW,GAC9DD,EAAS/G,UACTxJ,EAAOuQ,EAAS5G,OAGlB,OAAO4G,GAQXpB,EAAa1d,UAAUwW,UAAY,SAAU3M,GAC3C,OAAI/J,KAAK+U,UACHhL,EAAMgL,UACD,GAEC,EAEDhL,EAAM+K,cAAgB/K,EAAMgL,UAC9B,EACEhL,IAAUmV,IACX,EAGD,GAQXtB,EAAa1d,UAAUgX,UAAY,SAAUyF,GAC3C,GAAIA,IAAoBpI,IAAavU,KAAK8d,UAAUpB,SAASC,GAC3D,OAAO3c,KAEP,IAAIge,EAAche,KAAK8d,UAAUlB,SAASD,EAAiB3c,KAAK6d,WAChE,OAAO,IAAID,EAAa5d,KAAK6d,UAAW7d,KAAKmV,cAAe6I,IAQhEJ,EAAa1d,UAAUiX,UAAY,SAAUf,GAC3C,OAAOA,IAAU7B,IAAavU,KAAK8d,UAAUpB,SAAStG,IAOxDwH,EAAa1d,UAAUkX,OAAS,SAAUrN,GACxC,GAAIA,IAAU/J,KACZ,OAAO,EACF,GAAI+J,EAAM+K,aACf,OAAO,EAEP,IAAIqK,EAAoBpV,EAExB,GAAK/J,KAAKgV,cAAcoC,OAAO+H,EAAkBnK,eAE1C,IAAIhV,KAAK6d,UAAUnF,UAAYyG,EAAkBtB,UAAUnF,QAAS,CAMzE,IALA,IAAI0G,EAAWpf,KAAKsa,YAAYhD,IAC5B+H,EAAYF,EAAkB7E,YAAYhD,IAC1CgI,EAAcF,EAASnH,UACvBsH,EAAeF,EAAUpH,UAEtBqH,GAAeC,GAAc,CAClC,GAAID,EAAYze,OAAS0e,EAAa1e,OAASye,EAAYlM,KAAKgE,OAAOmI,EAAanM,MAClF,OAAO,EAGTkM,EAAcF,EAASnH,UACvBsH,EAAeF,EAAUpH,UAG3B,OAAuB,OAAhBqH,GAAyC,OAAjBC,EAE/B,OAAO,EAlBP,OAAO,GA6Bb3B,EAAa1d,UAAUue,cAAgB,SAAU9B,GAC/C,OAAIA,IAAoBpI,GACf,KAEAvU,KAAK8d,UAAUrd,IAAIkc,EAAgB7b,aAI9C8c,EAAa7W,gBAAkB,iBACxB6W,EA/ZT,GA2cIsB,GAAa,IAvCjB,SAAUjL,GAGR,SAASuL,IACP,OAAOvL,EAAOlF,KAAK/O,KAAM,IAAIwY,GAAUmF,IAAkBC,GAAaxI,WAAYiH,GAAS0B,UAAY/d,KA4BzG,OA/BA,YAAUwf,EAASvL,GAMnBuL,EAAQtf,UAAUwW,UAAY,SAAU3M,GACtC,OAAIA,IAAU/J,KACL,EAEA,GAIXwf,EAAQtf,UAAUkX,OAAS,SAAUrN,GAEnC,OAAOA,IAAU/J,MAGnBwf,EAAQtf,UAAU8U,YAAc,WAC9B,OAAOhV,MAGTwf,EAAQtf,UAAUsV,kBAAoB,SAAUC,GAC9C,OAAOmI,GAAaxI,YAGtBoK,EAAQtf,UAAU6U,QAAU,WAC1B,OAAO,GAGFyK,EAhCT,CAiCE5B,KAOFpT,OAAOiV,iBAAiBtM,GAAW,CACjCY,IAAK,CACH1T,MAAO,IAAI8S,GAAUlP,EAAU2Z,GAAaxI,aAE9CsK,IAAK,CACHrf,MAAO,IAAI8S,GAAUjP,EAAUgb,OAOnClL,GAASlH,aAAe8Q,GAAaxI,WACrCH,GAAST,0BAA4BoJ,GA39DnC7Q,GA49DSmS,GAnoDX,SAAsBhL,GACpBQ,GAAaR,EAmoDfyL,CAAaT,IA0Bb,SAASU,GAAeC,EAAMrQ,GAK5B,QAJiB,IAAbA,IACFA,EAAW,MAGA,OAATqQ,EACF,OAAOjC,GAAaxI,WActB,GAXoB,iBAATyK,GAAqB,cAAeA,IAC7CrQ,EAAWqQ,EAAK,cAGlB,YAAoB,OAAbrQ,GAAyC,iBAAbA,GAA6C,iBAAbA,GAA6C,iBAAbA,GAAyB,QAASA,EAAU,uCAAyCA,GAEpK,iBAATqQ,GAAqB,WAAYA,GAA2B,OAAnBA,EAAK,YACvDA,EAAOA,EAAK,WAIM,iBAATA,GAAqB,QAASA,EAEvC,OAAO,IAAI5K,GADI4K,EACeD,GAAepQ,IAG/C,GAAMqQ,aAAgBnd,MAkCf,CACL,IAAIod,EAASlC,GAAaxI,WAa1B,OAZA7P,EAAKsa,GAAM,SAAUzf,EAAK2f,GACxB,GAAI,YAASF,EAAMzf,IACW,MAAxBA,EAAIkF,UAAU,EAAG,GAAY,CAE/B,IAAIuQ,EAAY+J,GAAeG,IAE3BlK,EAAUf,cAAiBe,EAAUd,YACvC+K,EAASA,EAAOhK,qBAAqB1V,EAAKyV,QAK3CiK,EAAOxK,eAAesK,GAAepQ,IA/C5C,IAAIwQ,EAAa,GACbC,GAAyB,EAc7B,GAZA1a,EADmBsa,GACA,SAAUzf,EAAKwK,GAChC,GAA4B,MAAxBxK,EAAIkF,UAAU,EAAG,GAAY,CAE/B,IAAIuQ,EAAY+J,GAAehV,GAE1BiL,EAAUd,YACbkL,EAAyBA,IAA2BpK,EAAUb,cAAcD,UAC5EiL,EAAWjb,KAAK,IAAIoO,GAAU/S,EAAKyV,SAKf,IAAtBmK,EAAW1d,OACb,OAAOsb,GAAaxI,WAGtB,IAAI8K,EAAWhF,GAAc8E,EAAYtC,IAAsB,SAAU5B,GACvE,OAAOA,EAAUjb,OAChB8c,IAEH,GAAIsC,EAAwB,CAC1B,IAAIE,EAAiBjF,GAAc8E,EAAY1I,GAAe/D,cAC9D,OAAO,IAAIqK,GAAasC,EAAUN,GAAepQ,GAAW,IAAI6M,GAAS,CACvE,YAAa8D,GACZ,CACD,YAAa7I,MAGf,OAAO,IAAIsG,GAAasC,EAAUN,GAAepQ,GAAW6M,GAAS0B,UA3tD3E,SAAyB7J,GACvBO,GAAeP,EA8uDjBkM,CAAgBR,IAkBhB,IAyEIS,GAAc,IAvElB,SAAUpM,GAGR,SAASqM,IACP,OAAkB,OAAXrM,GAAmBA,EAAOrR,MAAM5C,KAAMqC,YAAcrC,KAgE7D,OAnEA,YAAUsgB,EAAYrM,GAUtBqM,EAAWpgB,UAAUsT,QAAU,SAAUpP,EAAGC,GAC1C,IAAIqT,EAAWtT,EAAEgP,KAAKsD,UAAUrS,EAAE+O,MAElC,OAAiB,IAAbsE,EACKvT,EAAYC,EAAEvD,KAAMwD,EAAExD,MAEtB6W,GAQX4I,EAAWpgB,UAAUiU,YAAc,SAAUf,GAC3C,OAAO,GAOTkN,EAAWpgB,UAAUuT,oBAAsB,SAAUC,EAASC,GAC5D,OAAQD,EAAQ0D,OAAOzD,IAOzB2M,EAAWpgB,UAAU4T,QAAU,WAE7B,OAAOX,GAAUY,KAOnBuM,EAAWpgB,UAAUkU,QAAU,WAE7B,OAAOjB,GAAUuM,KAGnBY,EAAWpgB,UAAUmU,SAAW,SAAUC,EAAYzT,GACpD,IAAI0f,EAAYX,GAAetL,GAC/B,OAAO,IAAInB,GAAUtS,EAAM0f,IAO7BD,EAAWpgB,UAAUY,SAAW,WAC9B,MAAO,UAGFwf,EApET,CAqEEhN,KAoBEkN,GAEJ,SAAUvM,GAGR,SAASuM,EAAUC,GACjB,IAAIpD,EAAQpJ,EAAOlF,KAAK/O,OAASA,KAIjC,OAFAqd,EAAMoD,WAAaA,EACnB,aAAQvX,EAAYuX,IAA4C,cAA7BvY,EAAauY,GAA6B,2DACtEpD,EA0DT,OAjEA,YAAUmD,EAAWvM,GAUrBuM,EAAUtgB,UAAUwgB,aAAe,SAAUC,GAC3C,OAAOA,EAAKjL,SAAS1V,KAAKygB,aAO5BD,EAAUtgB,UAAUiU,YAAc,SAAUf,GAC1C,OAAQA,EAAKsC,SAAS1V,KAAKygB,YAAY1L,WAOzCyL,EAAUtgB,UAAUsT,QAAU,SAAUpP,EAAGC,GACzC,IAAIuc,EAAS5gB,KAAK0gB,aAAatc,EAAEgP,MAC7ByN,EAAS7gB,KAAK0gB,aAAarc,EAAE+O,MAC7BsE,EAAWkJ,EAAOlK,UAAUmK,GAEhC,OAAiB,IAAbnJ,EACKvT,EAAYC,EAAEvD,KAAMwD,EAAExD,MAEtB6W,GAQX8I,EAAUtgB,UAAUmU,SAAW,SAAUC,EAAYzT,GACnD,IAAI0f,EAAYX,GAAetL,GAC3BlB,EAAOwK,GAAaxI,WAAWY,YAAYhW,KAAKygB,WAAYF,GAChE,OAAO,IAAIpN,GAAUtS,EAAMuS,IAO7BoN,EAAUtgB,UAAUkU,QAAU,WAC5B,IAAIhB,EAAOwK,GAAaxI,WAAWY,YAAYhW,KAAKygB,WAAYvB,IAChE,OAAO,IAAI/L,GAAUjP,EAAUkP,IAOjCoN,EAAUtgB,UAAUY,SAAW,WAC7B,OAAO4H,EAAU1I,KAAKygB,WAAY,GAAGha,KAAK,MAGrC+Z,EAlET,CAmEElN,IAwBEwN,GAEJ,WAME,SAASA,EAAaC,EAAOC,EAAMC,GACjCjhB,KAAK+gB,MAAQA,EACb/gB,KAAKghB,KAAOA,EACZhhB,KAAKihB,OAASA,EAmKhB,OAzJAH,EAAa5gB,UAAUgU,IAAM,WAE3B,OADA,YAAiB,mBAAoB,EAAG,EAAG7R,UAAUC,QAC9CtC,KAAK+gB,MAAM7M,OASpB4M,EAAa5gB,UAAUghB,UAAY,WAEjC,OADA,YAAiB,yBAA0B,EAAG,EAAG7e,UAAUC,QACpDtC,KAAK+gB,MAAM7M,KAAI,IAKxB4M,EAAa5gB,UAAUmS,OAAS,WAG9B,OADA,YAAiB,sBAAuB,EAAG,EAAGhQ,UAAUC,QACjDtC,KAAKkhB,aASdJ,EAAa5gB,UAAUihB,OAAS,WAE9B,OADA,YAAiB,sBAAuB,EAAG,EAAG9e,UAAUC,SAChDtC,KAAK+gB,MAAMhM,WAUrB+L,EAAa5gB,UAAU0K,MAAQ,SAAUwW,GACvC,YAAiB,qBAAsB,EAAG,EAAG/e,UAAUC,QAEvD8e,EAAkB3Y,OAAO2Y,GACzBvQ,GAAmB,qBAAsB,EAAGuQ,GAAiB,GAC7D,IAAIC,EAAY,IAAI5Z,EAAK2Z,GACrBE,EAAWthB,KAAKghB,KAAKpW,MAAMyW,GAC/B,OAAO,IAAIP,EAAa9gB,KAAK+gB,MAAMrL,SAAS2L,GAAYC,EAAUhK,KAUpEwJ,EAAa5gB,UAAUyV,SAAW,SAAUyL,GAC1C,YAAiB,wBAAyB,EAAG,EAAG/e,UAAUC,QAC1DuO,GAAmB,wBAAyB,EAAGuQ,GAAiB,GAChE,IAAIC,EAAY,IAAI5Z,EAAK2Z,GACzB,OAAQphB,KAAK+gB,MAAMrL,SAAS2L,GAAWtM,WASzC+L,EAAa5gB,UAAU8U,YAAc,WAGnC,OAFA,YAAiB,2BAA4B,EAAG,EAAG3S,UAAUC,QAEtDtC,KAAK+gB,MAAM/L,cAAcd,OAYlC4M,EAAa5gB,UAAUqhB,QAAU,SAAUlL,GACzC,IAAIgH,EAAQrd,KAKZ,GAHA,YAAiB,uBAAwB,EAAG,EAAGqC,UAAUC,QACzD,YAAiB,uBAAwB,EAAG+T,GAAQ,GAEhDrW,KAAK+gB,MAAMjM,aACb,OAAO,EAGT,IAAI0M,EAAexhB,KAAK+gB,MAExB,QAASS,EAAarL,aAAanW,KAAKihB,QAAQ,SAAU7gB,EAAKgT,GAC7D,OAAOiD,EAAO,IAAIyK,EAAa1N,EAAMiK,EAAM2D,KAAKpW,MAAMxK,GAAMkX,SAShEwJ,EAAa5gB,UAAUuhB,YAAc,WAGnC,OAFA,YAAiB,2BAA4B,EAAG,EAAGpf,UAAUC,SAEzDtC,KAAK+gB,MAAMjM,eAGL9U,KAAK+gB,MAAMhM,WAIvBvK,OAAOC,eAAeqW,EAAa5gB,UAAW,MAAO,CACnDO,IAAK,WACH,OAAOT,KAAKghB,KAAKU,UAEnBhX,YAAY,EACZC,cAAc,IAOhBmW,EAAa5gB,UAAUgW,YAAc,WAEnC,OADA,YAAiB,2BAA4B,EAAG,EAAG7T,UAAUC,QACtDtC,KAAK+gB,MAAM7K,eAQpB4K,EAAa5gB,UAAUyhB,OAAS,WAE9B,OADA,YAAiB,mBAAoB,EAAG,EAAGtf,UAAUC,QAC9CtC,KAAKghB,MAGdxW,OAAOC,eAAeqW,EAAa5gB,UAAW,MAAO,CACnDO,IAAK,WACH,OAAOT,KAAK2hB,UAEdjX,YAAY,EACZC,cAAc,IAETmW,EA5KT,GAoMIc,GAEJ,WAOE,SAASA,EAAUjR,EAAWkR,EAAmBzP,EAAU0P,GACzD9hB,KAAK2Q,UAAYA,EACjB3Q,KAAK6hB,kBAAoBA,EACzB7hB,KAAKoS,SAAWA,EAChBpS,KAAK8hB,SAAWA,EAyClB,OAlCAF,EAAU1hB,UAAU6hB,QAAU,WAC5B,IAAIC,EAAMhiB,KAAKoS,SAASuP,SAExB,MAAuB,UAAnB3hB,KAAK2Q,UACAqR,EAAI7Z,KAEJ6Z,EAAIC,YAAY9Z,MAQ3ByZ,EAAU1hB,UAAUgiB,aAAe,WACjC,OAAOliB,KAAK2Q,WAOdiR,EAAU1hB,UAAUiiB,eAAiB,WACnC,OAAOniB,KAAK6hB,kBAAkBM,eAAeniB,OAO/C4hB,EAAU1hB,UAAUY,SAAW,WAC7B,OAAOd,KAAK+hB,UAAUjhB,WAAa,IAAMd,KAAK2Q,UAAY,IAAM,YAAU3Q,KAAKoS,SAAS8O,cAGnFU,EApDT,GAuDIQ,GAEJ,WACE,SAASA,EAAYP,EAAmBre,EAAO2E,GAC7CnI,KAAK6hB,kBAAoBA,EACzB7hB,KAAKwD,MAAQA,EACbxD,KAAKmI,KAAOA,EAmCd,OA5BAia,EAAYliB,UAAU6hB,QAAU,WAC9B,OAAO/hB,KAAKmI,MAOdia,EAAYliB,UAAUgiB,aAAe,WACnC,MAAO,UAOTE,EAAYliB,UAAUiiB,eAAiB,WACrC,OAAOniB,KAAK6hB,kBAAkBM,eAAeniB,OAO/CoiB,EAAYliB,UAAUY,SAAW,WAC/B,OAAOd,KAAKmI,KAAKrH,WAAa,WAGzBshB,EAvCT,GA+DIC,GAEJ,WACE,SAASA,EAAuBC,EAAWC,EAAiBC,GAC1DxiB,KAAKsiB,UAAYA,EACjBtiB,KAAKuiB,gBAAkBA,EACvBviB,KAAKwiB,SAAWA,EA6ElB,OAtEAH,EAAuBniB,UAAUuiB,WAAa,SAAU9R,GACtD,MAAqB,UAAdA,GAOT0R,EAAuBniB,UAAUwiB,YAAc,SAAUC,EAAQhW,GAC/D,IAAIyJ,EAAQzJ,EAAMiW,iBAAiBC,WACnC,OAAO,IAAIjB,GAAU,QAAS5hB,KAAM,IAAI8gB,GAAa6B,EAAOG,aAAcnW,EAAMgV,SAAUvL,KAO5FiM,EAAuBniB,UAAUiiB,eAAiB,SAAUY,GAC1D,IAAIC,EAAMhjB,KAAKwiB,SAEf,GAAiC,WAA7BO,EAAUb,eAA6B,CACzC,YAAOliB,KAAKuiB,gBAAiB,gEAC7B,IAAIU,EAAajjB,KAAKuiB,gBACtB,OAAO,WAELU,EAAWlU,KAAKiU,EAAKD,EAAUvf,QAGjC,IAAI0f,EAAOljB,KAAKsiB,UAChB,OAAO,WACLY,EAAKnU,KAAKiU,EAAKD,EAAU3Q,YAS/BiQ,EAAuBniB,UAAUijB,kBAAoB,SAAU3f,EAAO2E,GACpE,OAAInI,KAAKuiB,gBACA,IAAIH,GAAYpiB,KAAMwD,EAAO2E,GAE7B,MAQXka,EAAuBniB,UAAUkjB,QAAU,SAAUrZ,GACnD,OAAMA,aAAiBsY,KAEXtY,EAAMuY,YAActiB,KAAKsiB,WAI5BvY,EAAMuY,YAActiB,KAAKsiB,WAAavY,EAAMyY,WAAaxiB,KAAKwiB,WAQzEH,EAAuBniB,UAAUmjB,eAAiB,WAChD,OAA0B,OAAnBrjB,KAAKsiB,WAGPD,EAjFT,GA2FIiB,GAEJ,WACE,SAASA,EAAuBC,EAAYhB,EAAiBC,GAC3DxiB,KAAKujB,WAAaA,EAClBvjB,KAAKuiB,gBAAkBA,EACvBviB,KAAKwiB,SAAWA,EAuGlB,OAhGAc,EAAuBpjB,UAAUuiB,WAAa,SAAU9R,GACtD,IAAI6S,EAA6B,mBAAd7S,EAAiC,cAAgBA,EAEpE,OADA6S,EAAgC,qBAAjBA,EAAsC,gBAAkBA,EAChE,YAASxjB,KAAKujB,WAAYC,IAOnCF,EAAuBpjB,UAAUijB,kBAAoB,SAAU3f,EAAO2E,GACpE,OAAInI,KAAKuiB,gBACA,IAAIH,GAAYpiB,KAAMwD,EAAO2E,GAE7B,MAQXmb,EAAuBpjB,UAAUwiB,YAAc,SAAUC,EAAQhW,GAC/D,YAA2B,MAApBgW,EAAOlN,UAAmB,yCACjC,IAAIuM,EAAMrV,EAAMgV,SAAS/W,MAAM+X,EAAOlN,WAClCW,EAAQzJ,EAAMiW,iBAAiBC,WACnC,OAAO,IAAIjB,GAAUe,EAAOtW,KAAMrM,KAAM,IAAI8gB,GAAa6B,EAAOG,aAAcd,EAAK5L,GAAQuM,EAAOb,WAOpGwB,EAAuBpjB,UAAUiiB,eAAiB,SAAUY,GAC1D,IAAIC,EAAMhjB,KAAKwiB,SAEf,GAAiC,WAA7BO,EAAUb,eAA6B,CACzC,YAAOliB,KAAKuiB,gBAAiB,gEAC7B,IAAIkB,EAAazjB,KAAKuiB,gBACtB,OAAO,WAELkB,EAAW1U,KAAKiU,EAAKD,EAAUvf,QAGjC,IAAIkgB,EAAO1jB,KAAKujB,WAAWR,EAAUpS,WACrC,OAAO,WACL+S,EAAK3U,KAAKiU,EAAKD,EAAU3Q,SAAU2Q,EAAUjB,YASnDwB,EAAuBpjB,UAAUkjB,QAAU,SAAUrZ,GACnD,IAAIsT,EAAQrd,KAEZ,GAAI+J,aAAiBuZ,EAAwB,CAC3C,IAAKtjB,KAAKujB,aAAexZ,EAAMwZ,WAC7B,OAAO,EACF,GAAIvjB,KAAKwiB,WAAazY,EAAMyY,SAAU,CAC3C,IAAImB,EAAYnZ,OAAO3F,KAAKkF,EAAMwZ,YAC9BK,EAAWpZ,OAAO3F,KAAK7E,KAAKujB,YAC5BM,EAAaF,EAAUrhB,OAG3B,GAAIuhB,IAFYD,EAASthB,OAEK,CAI5B,GAAmB,IAAfuhB,EAAkB,CACpB,IAAIC,EAAWH,EAAU,GACrBI,EAAUH,EAAS,GACvB,QAAOG,IAAYD,GAAc/Z,EAAMwZ,WAAWO,IAAc9jB,KAAKujB,WAAWQ,IAAYha,EAAMwZ,WAAWO,KAAc9jB,KAAKujB,WAAWQ,IAG3I,OAAOH,EAASI,OAAM,SAAUrT,GAC9B,OAAO5G,EAAMwZ,WAAW5S,KAAe0M,EAAMkG,WAAW5S,QAOlE,OAAO,GAOT2S,EAAuBpjB,UAAUmjB,eAAiB,WAChD,OAA2B,OAApBrjB,KAAKujB,YAGPD,EA3GT,GA+HA,SAASW,GAAYnB,GACnB,MAAO,CACLzW,KAAM,QAGNyW,aAAcA,GAIlB,SAASoB,GAAiBzO,EAAWqN,GACnC,MAAO,CACLzW,KAAM,cAGNyW,aAAcA,EACdrN,UAAWA,GAIf,SAAS0O,GAAmB1O,EAAWqN,GACrC,MAAO,CACLzW,KAAM,gBAGNyW,aAAcA,EACdrN,UAAWA,GAIf,SAAS2O,GAAmB3O,EAAWqN,EAAcuB,GACnD,MAAO,CACLhY,KAAM,gBAGNyW,aAAcA,EACdrN,UAAWA,EACX4O,QAASA,GAmCb,IAi8BIC,GAj8BAC,GAEJ,WACE,SAASA,EAActD,GACrBjhB,KAAKihB,OAASA,EA6GhB,OA1GAsD,EAAcrkB,UAAU8V,YAAc,SAAU2K,EAAMvgB,EAAKokB,EAAUC,EAAc1R,EAAQ2R,GACzF,YAAO/D,EAAKxJ,UAAUnX,KAAKihB,QAAS,qDACpC,IAAI0D,EAAWhE,EAAKnL,kBAAkBpV,GAEtC,OAAIukB,EAASjP,SAAS+O,GAAcrN,OAAOoN,EAAS9O,SAAS+O,KAIvDE,EAAS5P,YAAcyP,EAASzP,UAI3B4L,GAIiB,MAAxB+D,IACEF,EAASzP,UACP4L,EAAKhL,SAASvV,GAChBskB,EAAqBE,iBAAiBT,GAAmB/jB,EAAKukB,IAE9D,YAAOhE,EAAK7L,aAAc,uEAEnB6P,EAAS5P,UAClB2P,EAAqBE,iBAAiBV,GAAiB9jB,EAAKokB,IAE5DE,EAAqBE,iBAAiBR,GAAmBhkB,EAAKokB,EAAUG,KAIxEhE,EAAK7L,cAAgB0P,EAASzP,UACzB4L,EAGAA,EAAK7K,qBAAqB1V,EAAKokB,GAAUtN,UAAUlX,KAAKihB,UAQnEsD,EAAcrkB,UAAU2kB,eAAiB,SAAUR,EAASS,EAASJ,GAyBnE,OAxB4B,MAAxBA,IACGL,EAAQvP,cACXuP,EAAQlO,aAAamB,IAAgB,SAAUlX,EAAKyV,GAC7CiP,EAAQnP,SAASvV,IACpBskB,EAAqBE,iBAAiBT,GAAmB/jB,EAAKyV,OAK/DiP,EAAQhQ,cACXgQ,EAAQ3O,aAAamB,IAAgB,SAAUlX,EAAKyV,GAClD,GAAIwO,EAAQ1O,SAASvV,GAAM,CACzB,IAAIukB,EAAWN,EAAQ7O,kBAAkBpV,GAEpCukB,EAASvN,OAAOvB,IACnB6O,EAAqBE,iBAAiBR,GAAmBhkB,EAAKyV,EAAW8O,SAG3ED,EAAqBE,iBAAiBV,GAAiB9jB,EAAKyV,QAM7DiP,EAAQ5N,UAAUlX,KAAKihB,SAOhCsD,EAAcrkB,UAAUoV,eAAiB,SAAU+O,EAASpG,GAC1D,OAAIoG,EAAQtP,UACH6I,GAAaxI,WAEbiP,EAAQ/O,eAAe2I,IAQlCsG,EAAcrkB,UAAU6kB,aAAe,WACrC,OAAO,GAOTR,EAAcrkB,UAAU8kB,iBAAmB,WACzC,OAAOhlB,MAOTukB,EAAcrkB,UAAU2iB,SAAW,WACjC,OAAO7iB,KAAKihB,QAGPsD,EA/GT,GAuIIU,GAEJ,WACE,SAASA,EAAa3Y,GACpBtM,KAAKklB,eAAiB,IAAIX,GAAcjY,EAAOuW,YAC/C7iB,KAAKihB,OAAS3U,EAAOuW,WACrB7iB,KAAKmlB,WAAaF,EAAaG,cAAc9Y,GAC7CtM,KAAKqlB,SAAWJ,EAAaK,YAAYhZ,GAoG3C,OAjGA2Y,EAAa/kB,UAAUqlB,aAAe,WACpC,OAAOvlB,KAAKmlB,YAGdF,EAAa/kB,UAAUslB,WAAa,WAClC,OAAOxlB,KAAKqlB,UAGdJ,EAAa/kB,UAAUkjB,QAAU,SAAUhQ,GACzC,OAAOpT,KAAKihB,OAAOzN,QAAQxT,KAAKulB,eAAgBnS,IAAS,GAAKpT,KAAKihB,OAAOzN,QAAQJ,EAAMpT,KAAKwlB,eAAiB,GAOhHP,EAAa/kB,UAAU8V,YAAc,SAAU2K,EAAMvgB,EAAKokB,EAAUC,EAAc1R,EAAQ2R,GAKxF,OAJK1kB,KAAKojB,QAAQ,IAAIjQ,GAAU/S,EAAKokB,MACnCA,EAAW5G,GAAaxI,YAGnBpV,KAAKklB,eAAelP,YAAY2K,EAAMvgB,EAAKokB,EAAUC,EAAc1R,EAAQ2R,IAOpFO,EAAa/kB,UAAU2kB,eAAiB,SAAUR,EAASS,EAASJ,GAC9DI,EAAQhQ,eAEVgQ,EAAUlH,GAAaxI,YAGzB,IAAIqQ,EAAWX,EAAQ5N,UAAUlX,KAAKihB,QAEtCwE,EAAWA,EAASnQ,eAAesI,GAAaxI,YAChD,IAAIsQ,EAAO1lB,KAMX,OALA8kB,EAAQ3O,aAAamB,IAAgB,SAAUlX,EAAKyV,GAC7C6P,EAAKtC,QAAQ,IAAIjQ,GAAU/S,EAAKyV,MACnC4P,EAAWA,EAAS3P,qBAAqB1V,EAAKwd,GAAaxI,gBAGxDpV,KAAKklB,eAAeL,eAAeR,EAASoB,EAAUf,IAO/DO,EAAa/kB,UAAUoV,eAAiB,SAAU+O,EAASpG,GAEzD,OAAOoG,GAOTY,EAAa/kB,UAAU6kB,aAAe,WACpC,OAAO,GAOTE,EAAa/kB,UAAU8kB,iBAAmB,WACxC,OAAOhlB,KAAKklB,gBAOdD,EAAa/kB,UAAU2iB,SAAW,WAChC,OAAO7iB,KAAKihB,QAGdgE,EAAaG,cAAgB,SAAU9Y,GACrC,GAAIA,EAAOqZ,WAAY,CACrB,IAAIC,EAAYtZ,EAAOuZ,oBACvB,OAAOvZ,EAAOuW,WAAWxO,SAAS/H,EAAOwZ,qBAAsBF,GAE/D,OAAOtZ,EAAOuW,WAAW/O,WAI7BmR,EAAaK,YAAc,SAAUhZ,GACnC,GAAIA,EAAOyZ,SAAU,CACnB,IAAIC,EAAU1Z,EAAO2Z,kBACrB,OAAO3Z,EAAOuW,WAAWxO,SAAS/H,EAAO4Z,mBAAoBF,GAE7D,OAAO1Z,EAAOuW,WAAWzO,WAItB6Q,EAzGT,GAiIIkB,GAEJ,WACE,SAASA,EAAc7Z,GACrBtM,KAAKomB,cAAgB,IAAInB,GAAa3Y,GACtCtM,KAAKihB,OAAS3U,EAAOuW,WACrB7iB,KAAKqmB,OAAS/Z,EAAOga,WACrBtmB,KAAKumB,UAAYja,EAAOka,iBAkO1B,OA3NAL,EAAcjmB,UAAU8V,YAAc,SAAU2K,EAAMvgB,EAAKokB,EAAUC,EAAc1R,EAAQ2R,GAKzF,OAJK1kB,KAAKomB,cAAchD,QAAQ,IAAIjQ,GAAU/S,EAAKokB,MACjDA,EAAW5G,GAAaxI,YAGtBuL,EAAKnL,kBAAkBpV,GAAKgX,OAAOoN,GAE9B7D,EACEA,EAAKzK,cAAgBlW,KAAKqmB,OAC5BrmB,KAAKomB,cAAcpB,mBAAmBhP,YAAY2K,EAAMvgB,EAAKokB,EAAUC,EAAc1R,EAAQ2R,GAE7F1kB,KAAKymB,sBAAsB9F,EAAMvgB,EAAKokB,EAAUzR,EAAQ2R,IAQnEyB,EAAcjmB,UAAU2kB,eAAiB,SAAUR,EAASS,EAASJ,GACnE,IAAIe,EAEJ,GAAIX,EAAQhQ,cAAgBgQ,EAAQ/P,UAElC0Q,EAAW7H,GAAaxI,WAAW8B,UAAUlX,KAAKihB,aAElD,GAAkB,EAAdjhB,KAAKqmB,OAAavB,EAAQ5O,eAAiB4O,EAAQ3N,UAAUnX,KAAKihB,QAAS,CAE7EwE,EAAW7H,GAAaxI,WAAW8B,UAAUlX,KAAKihB,QAElD,IAAIjC,OAAW,EAGbA,EADEhf,KAAKumB,SACIzB,EAAQrK,uBAAuBza,KAAKomB,cAAcZ,aAAcxlB,KAAKihB,QAErE6D,EAAQtK,gBAAgBxa,KAAKomB,cAAcb,eAAgBvlB,KAAKihB,QAK7E,IAFA,IAAIvI,EAAQ,EAELsG,EAAS7G,WAAaO,EAAQ1Y,KAAKqmB,QAAQ,CAChD,IAAI5X,EAAOuQ,EAAS/G,UASpB,KANIjY,KAAKumB,SACGvmB,KAAKihB,OAAOzN,QAAQxT,KAAKomB,cAAcb,eAAgB9W,IAAS,EAEhEzO,KAAKihB,OAAOzN,QAAQ/E,EAAMzO,KAAKomB,cAAcZ,eAAiB,GAQxE,MAJAC,EAAWA,EAAS3P,qBAAqBrH,EAAK5N,KAAM4N,EAAK2E,MACzDsF,SAMC,CAIL+M,GAFAA,EAAWX,EAAQ5N,UAAUlX,KAAKihB,SAEd3L,eAAesI,GAAaxI,YAChD,IAAI2J,OAAY,EACZE,OAAU,EACVpV,OAAM,EACNmV,OAAW,EAEf,GAAIhf,KAAKumB,SAAU,CACjBvH,EAAWyG,EAAS/K,mBAAmB1a,KAAKihB,QAC5ClC,EAAY/e,KAAKomB,cAAcZ,aAC/BvG,EAAUjf,KAAKomB,cAAcb,eAC7B,IAAImB,EAAiB1mB,KAAKihB,OAAO1N,aAEjC1J,EAAM,SAAazF,EAAGC,GACpB,OAAOqiB,EAAeriB,EAAGD,SAG3B4a,EAAWyG,EAASnL,YAAYta,KAAKihB,QACrClC,EAAY/e,KAAKomB,cAAcb,eAC/BtG,EAAUjf,KAAKomB,cAAcZ,aAC7B3b,EAAM7J,KAAKihB,OAAO1N,aAGhBmF,EAAQ,EAGZ,IAHA,IACIiO,GAAiB,EAEd3H,EAAS7G,WAAW,CACrB1J,EAAOuQ,EAAS/G,WAEf0O,GAAkB9c,EAAIkV,EAAWtQ,IAAS,IAE7CkY,GAAiB,GAGLA,GAAkBjO,EAAQ1Y,KAAKqmB,QAAUxc,EAAI4E,EAAMwQ,IAAY,EAG3EvG,IAEA+M,EAAWA,EAAS3P,qBAAqBrH,EAAK5N,KAAM+c,GAAaxI,aAMzE,OAAOpV,KAAKomB,cAAcpB,mBAAmBH,eAAeR,EAASoB,EAAUf,IAOjFyB,EAAcjmB,UAAUoV,eAAiB,SAAU+O,EAASpG,GAE1D,OAAOoG,GAOT8B,EAAcjmB,UAAU6kB,aAAe,WACrC,OAAO,GAOToB,EAAcjmB,UAAU8kB,iBAAmB,WACzC,OAAOhlB,KAAKomB,cAAcpB,oBAO5BmB,EAAcjmB,UAAU2iB,SAAW,WACjC,OAAO7iB,KAAKihB,QAGdkF,EAAcjmB,UAAUumB,sBAAwB,SAAU9F,EAAMiG,EAAUC,EAAW9T,EAAQ+T,GAE3F,IAAIjd,EAEJ,GAAI7J,KAAKumB,SAAU,CACjB,IAAIQ,EAAa/mB,KAAKihB,OAAO1N,aAE7B1J,EAAM,SAAazF,EAAGC,GACpB,OAAO0iB,EAAW1iB,EAAGD,SAGvByF,EAAM7J,KAAKihB,OAAO1N,aAGpB,IAAIyT,EAAgBrG,EACpB,YAAOqG,EAAc9Q,gBAAkBlW,KAAKqmB,OAAQ,IACpD,IAAIY,EAAoB,IAAI9T,GAAUyT,EAAUC,GAC5CK,EAAiBlnB,KAAKumB,SAAWS,EAAcrI,cAAc3e,KAAKihB,QAAU+F,EAAcnI,aAAa7e,KAAKihB,QAC5GkG,EAAUnnB,KAAKomB,cAAchD,QAAQ6D,GAEzC,GAAID,EAAcrR,SAASiR,GAAW,CAIpC,IAHA,IAAIQ,EAAeJ,EAAcxR,kBAAkBoR,GAC/CS,EAAYtU,EAAOuU,mBAAmBtnB,KAAKihB,OAAQiG,EAAgBlnB,KAAKumB,UAExD,MAAbc,IAAsBA,EAAUxmB,OAAS+lB,GAAYI,EAAcrR,SAAS0R,EAAUxmB,QAI3FwmB,EAAYtU,EAAOuU,mBAAmBtnB,KAAKihB,OAAQoG,EAAWrnB,KAAKumB,UAGrE,IAAIgB,EAA2B,MAAbF,EAAoB,EAAIxd,EAAIwd,EAAWJ,GAGzD,GAFsBE,IAAYN,EAAU9R,WAAawS,GAAe,EAOtE,OAJyB,MAArBT,GACFA,EAAkBlC,iBAAiBR,GAAmBwC,EAAUC,EAAWO,IAGtEJ,EAAclR,qBAAqB8Q,EAAUC,GAE3B,MAArBC,GACFA,EAAkBlC,iBAAiBT,GAAmByC,EAAUQ,IAGlE,IAAII,EAAgBR,EAAclR,qBAAqB8Q,EAAUhJ,GAAaxI,YAG9E,OAFoC,MAAbiS,GAAqBrnB,KAAKomB,cAAchD,QAAQiE,IAG5C,MAArBP,GACFA,EAAkBlC,iBAAiBV,GAAiBmD,EAAUxmB,KAAMwmB,EAAUjU,OAGzEoU,EAAc1R,qBAAqBuR,EAAUxmB,KAAMwmB,EAAUjU,OAE7DoU,EAGN,OAAIX,EAAU9R,UAEZ4L,EACEwG,GACLtd,EAAIqd,EAAgBD,IAAsB,GACnB,MAArBH,IACFA,EAAkBlC,iBAAiBT,GAAmB+C,EAAermB,KAAMqmB,EAAe9T,OAC1F0T,EAAkBlC,iBAAiBV,GAAiB0C,EAAUC,KAGzDG,EAAclR,qBAAqB8Q,EAAUC,GAAW/Q,qBAAqBoR,EAAermB,KAAM+c,GAAaxI,aAKjHuL,GAIJwF,EAvOT,GAiQIsB,GAEJ,WACE,SAASA,IACPznB,KAAK0nB,WAAY,EACjB1nB,KAAK2nB,WAAY,EACjB3nB,KAAK4nB,eAAgB,EACrB5nB,KAAK6nB,gBAAiB,EACtB7nB,KAAK8nB,SAAU,EACf9nB,KAAK+nB,aAAc,EACnB/nB,KAAKgoB,eAAgB,EACrBhoB,KAAKqmB,OAAS,EACdrmB,KAAKioB,UAAY,GACjBjoB,KAAKkoB,iBAAmB,KACxBloB,KAAKmoB,gBAAkB,GACvBnoB,KAAKooB,eAAiB,KACtBpoB,KAAKqoB,cAAgB,GACrBroB,KAAKihB,OAAS3J,GAuIhB,OApIAmQ,EAAYvnB,UAAUylB,SAAW,WAC/B,OAAO3lB,KAAK2nB,WAGdF,EAAYvnB,UAAUooB,cAAgB,WACpC,OAAOtoB,KAAK6nB,gBAGdJ,EAAYvnB,UAAUqoB,aAAe,WACnC,OAAOvoB,KAAKgoB,eAOdP,EAAYvnB,UAAUsmB,eAAiB,WACrC,MAAuB,KAAnBxmB,KAAKioB,UAKAjoB,KAAK2nB,UAEc,MAAnB3nB,KAAKioB,WAUhBR,EAAYvnB,UAAU4lB,mBAAqB,WAEzC,OADA,YAAO9lB,KAAK2nB,UAAW,oCAChB3nB,KAAKkoB,kBAQdT,EAAYvnB,UAAU2lB,kBAAoB,WAGxC,OAFA,YAAO7lB,KAAK2nB,UAAW,oCAEnB3nB,KAAK4nB,cACA5nB,KAAKmoB,gBAELlkB,GAIXwjB,EAAYvnB,UAAU6lB,OAAS,WAC7B,OAAO/lB,KAAK8nB,SAOdL,EAAYvnB,UAAUgmB,iBAAmB,WAEvC,OADA,YAAOlmB,KAAK8nB,QAAS,kCACd9nB,KAAKooB,gBAQdX,EAAYvnB,UAAU+lB,gBAAkB,WAGtC,OAFA,YAAOjmB,KAAK8nB,QAAS,kCAEjB9nB,KAAK+nB,YACA/nB,KAAKqoB,cAELnkB,GAIXujB,EAAYvnB,UAAUsoB,SAAW,WAC/B,OAAOxoB,KAAK0nB,WAOdD,EAAYvnB,UAAUuoB,iBAAmB,WACvC,OAAOzoB,KAAK0nB,WAAgC,KAAnB1nB,KAAKioB,WAOhCR,EAAYvnB,UAAUomB,SAAW,WAE/B,OADA,YAAOtmB,KAAK0nB,UAAW,oCAChB1nB,KAAKqmB,QAGdoB,EAAYvnB,UAAU2iB,SAAW,WAC/B,OAAO7iB,KAAKihB,QAGdwG,EAAYvnB,UAAUwoB,aAAe,WACnC,QAAS1oB,KAAK2nB,WAAa3nB,KAAK8nB,SAAW9nB,KAAK0nB,YAGlDD,EAAYvnB,UAAUyoB,UAAY,WAChC,OAAO3oB,KAAK0oB,gBAAkB1oB,KAAKihB,SAAW3J,IAGhDmQ,EAAYvnB,UAAUuY,KAAO,WAC3B,IAAIA,EAAO,IAAIgP,EAaf,OAZAhP,EAAKiP,UAAY1nB,KAAK0nB,UACtBjP,EAAK4N,OAASrmB,KAAKqmB,OACnB5N,EAAKkP,UAAY3nB,KAAK2nB,UACtBlP,EAAKyP,iBAAmBloB,KAAKkoB,iBAC7BzP,EAAKmP,cAAgB5nB,KAAK4nB,cAC1BnP,EAAK0P,gBAAkBnoB,KAAKmoB,gBAC5B1P,EAAKqP,QAAU9nB,KAAK8nB,QACpBrP,EAAK2P,eAAiBpoB,KAAKooB,eAC3B3P,EAAKsP,YAAc/nB,KAAK+nB,YACxBtP,EAAK4P,cAAgBroB,KAAKqoB,cAC1B5P,EAAKwI,OAASjhB,KAAKihB,OACnBxI,EAAKwP,UAAYjoB,KAAKioB,UACfxP,GAGFgP,EAtJT,GAmKA,SAASmB,GAAwB3a,EAAa4a,GAC5C,IAAIC,EAAY7a,EAAYwK,OAM5B,OALAqQ,EAAUpB,WAAY,EACtBoB,EAAUzC,OAASwC,EACnBC,EAAUb,UAAY,IAGfa,EAGT,SAASC,GAAuB9a,EAAa4a,GAC3C,IAAIC,EAAY7a,EAAYwK,OAM5B,OALAqQ,EAAUpB,WAAY,EACtBoB,EAAUzC,OAASwC,EACnBC,EAAUb,UAAY,IAGfa,EAGT,SAASE,GAAmB/a,EAAaqG,EAAYlU,GACnD,IAAI0oB,EAAY7a,EAAYwK,OAiB5B,OAhBAqQ,EAAUnB,WAAY,OAEH9X,IAAfyE,IACFA,EAAa,MAGfwU,EAAUZ,iBAAmB5T,EAElB,MAAPlU,GACF0oB,EAAUlB,eAAgB,EAC1BkB,EAAUX,gBAAkB/nB,IAE5B0oB,EAAUlB,eAAgB,EAC1BkB,EAAUX,gBAAkB,IAGvBW,EAGT,SAASG,GAAsBhb,EAAaqG,EAAYlU,GACtD,IAAIkM,EAEJ,GAAI2B,EAAYgT,SAAW1M,GACC,iBAAfD,IACTA,EAAa1B,GAAU0B,IAGzBhI,EAAS0c,GAAmB/a,EAAaqG,EAAYlU,OAChD,CASLkM,EAAS0c,GAAmB/a,EAAaqG,EAN9B,MAAPlU,EACS8D,EAEA0O,GAAUxS,IAOzB,OADAkM,EAAOub,gBAAiB,EACjBvb,EAGT,SAAS4c,GAAiBjb,EAAaqG,EAAYlU,GACjD,IAAI0oB,EAAY7a,EAAYwK,OAiB5B,OAhBAqQ,EAAUhB,SAAU,OAEDjY,IAAfyE,IACFA,EAAa,MAGfwU,EAAUV,eAAiB9T,OAEfzE,IAARzP,GACF0oB,EAAUf,aAAc,EACxBe,EAAUT,cAAgBjoB,IAE1B0oB,EAAUf,aAAc,EACxBe,EAAUT,cAAgB,IAGrBS,EAGT,SAASK,GAAqBlb,EAAaqG,EAAYlU,GACrD,IACIkM,EAmBJ,OAjBI2B,EAAYgT,SAAW1M,IACC,iBAAfD,IACTA,EAAarB,GAAYqB,IAG3BhI,EAAS4c,GAAiBjb,EAAaqG,EAAYlU,IAQnDkM,EAAS4c,GAAiBjb,EAAaqG,EAN5B,MAAPlU,EACS6D,EAEAgP,GAAY7S,IAM3BkM,EAAO0b,eAAgB,EAChB1b,EAGT,SAAS8c,GAAmBnb,EAAamI,GACvC,IAAI0S,EAAY7a,EAAYwK,OAE5B,OADAqQ,EAAU7H,OAAS7K,EACZ0S,EAST,SAASO,GAAuCpb,GAC9C,IAMIqb,EANAC,EAAK,GAET,OAAItb,EAAY0a,cAMZ1a,EAAYgT,SAAW3J,GACzBgS,EAAU,YAGDrb,EAAYgT,SAAWZ,GAChCiJ,EAAU,SAGDrb,EAAYgT,SAAW1M,GAChC+U,EAAU,QAIV,YAAOrb,EAAYgT,kBAAkBT,GAAW,4BAChD8I,EAAUrb,EAAYgT,OAAOngB,YAG/ByoB,EAEA,QAAI,YAAUD,GAEVrb,EAAY0Z,YACd4B,EAEA,QAAI,YAAUtb,EAAYia,kBAEtBja,EAAY2Z,gBACd2B,EAEA,SAAK,IAAM,YAAUtb,EAAYka,mBAIjCla,EAAY6Z,UACdyB,EAEA,MAAI,YAAUtb,EAAYma,gBAEtBna,EAAY8Z,cACdwB,EAEA,OAAK,IAAM,YAAUtb,EAAYoa,iBAIjCpa,EAAYyZ,YACVzZ,EAAYuY,iBACd+C,EAEA,aAAItb,EAAYoY,OAEhBkD,EAEA,YAAItb,EAAYoY,SA1DXkD,EAuJX,IAAIC,GAEJ,WACE,SAASA,EAAMC,EAAMthB,EAAMuhB,EAAcC,GACvC3pB,KAAKypB,KAAOA,EACZzpB,KAAKmI,KAAOA,EACZnI,KAAK0pB,aAAeA,EACpB1pB,KAAK2pB,eAAiBA,EA0fxB,OAvfAnf,OAAOC,eAAe+e,EAAO,yBAA0B,CACrD/oB,IAAK,WAEH,OADA,YAAO6jB,GAAwB,oCACxBA,IAETnkB,IAAK,SAAa+T,GAChBoQ,GAAyBpQ,GAE3BxJ,YAAY,EACZC,cAAc,IAMhB6e,EAAMI,wBAA0B,SAAUtd,GACxC,IAAIud,EAAY,KACZC,EAAU,KAUd,GARIxd,EAAOqZ,aACTkE,EAAYvd,EAAOwZ,sBAGjBxZ,EAAOyZ,WACT+D,EAAUxd,EAAO4Z,oBAGf5Z,EAAOuW,aAAetO,GAAW,CACnC,IAAIwV,EAAmB,mGACnBC,EAAoB,oIAExB,GAAI1d,EAAOqZ,WAAY,CAGrB,GAFgBrZ,EAAOuZ,sBAEL5hB,EAChB,MAAM,IAAIP,MAAMqmB,GACX,GAAyB,iBAAdF,EAChB,MAAM,IAAInmB,MAAMsmB,GAIpB,GAAI1d,EAAOyZ,SAAU,CAGnB,GAFczZ,EAAO2Z,oBAEL/hB,EACd,MAAM,IAAIR,MAAMqmB,GACX,GAAuB,iBAAZD,EAChB,MAAM,IAAIpmB,MAAMsmB,SAGf,GAAI1d,EAAOuW,aAAevL,IAC/B,GAAiB,MAAbuS,IAAsBta,GAAgBsa,IAAyB,MAAXC,IAAoBva,GAAgBua,GAC1F,MAAM,IAAIpmB,MAAM,gMAKlB,GAFA,YAAO4I,EAAOuW,qBAAsBrC,IAAalU,EAAOuW,aAAexC,GAAa,uBAEnE,MAAbwJ,GAA0C,iBAAdA,GAAqC,MAAXC,GAAsC,iBAAZA,EAClF,MAAM,IAAIpmB,MAAM,qHAStB8lB,EAAMS,eAAiB,SAAU3d,GAC/B,GAAIA,EAAOqZ,YAAcrZ,EAAOyZ,UAAYzZ,EAAOkc,aAAelc,EAAOmc,mBACvE,MAAM,IAAI/kB,MAAM,kIAQpB8lB,EAAMtpB,UAAUgqB,+BAAiC,SAAUxa,GACzD,IAA4B,IAAxB1P,KAAK2pB,eACP,MAAM,IAAIjmB,MAAMgM,EAAS,gDAI7B8Z,EAAMtpB,UAAU0iB,eAAiB,WAC/B,OAAO5iB,KAAK0pB,cAGdF,EAAMtpB,UAAUyhB,OAAS,WAKvB,OAJA,YAAiB,YAAa,EAAG,EAAGtf,UAAUC,QAIvC,IAAIknB,EAAMlF,uBAAuBtkB,KAAKypB,KAAMzpB,KAAKmI,OAG1DqhB,EAAMtpB,UAAUiqB,GAAK,SAAUxZ,EAAWyZ,EAAUC,EAAyBC,GAC3E,YAAiB,WAAY,EAAG,EAAGjoB,UAAUC,QAC7CoO,GAAkB,WAAY,EAAGC,GAAW,GAC5C,YAAiB,WAAY,EAAGyZ,GAAU,GAC1C,IAAIG,EAAMf,EAAMgB,yBAAyB,WAAYH,EAAyBC,GAE9E,GAAkB,UAAd3Z,EACF3Q,KAAKyqB,aAAaL,EAAUG,EAAIjZ,OAAQiZ,EAAID,aACvC,CACL,IAAII,EAAY,GAChBA,EAAU/Z,GAAayZ,EACvBpqB,KAAK2qB,aAAaD,EAAWH,EAAIjZ,OAAQiZ,EAAID,SAG/C,OAAOF,GAGTZ,EAAMtpB,UAAUuqB,aAAe,SAAUL,EAAUQ,EAAgBN,GACjE,IAAIO,EAAY,IAAIxI,GAAuB+H,EAAUQ,GAAkB,KAAMN,GAAW,MACxFtqB,KAAKypB,KAAKqB,yBAAyB9qB,KAAM6qB,IAG3CrB,EAAMtpB,UAAUyqB,aAAe,SAAUD,EAAWE,EAAgBN,GAClE,IAAIO,EAAY,IAAIvH,GAAuBoH,EAAWE,EAAgBN,GACtEtqB,KAAKypB,KAAKqB,yBAAyB9qB,KAAM6qB,IAG3CrB,EAAMtpB,UAAU6qB,IAAM,SAAUpa,EAAWyZ,EAAUE,GACnD,YAAiB,YAAa,EAAG,EAAGjoB,UAAUC,QAC9CoO,GAAkB,YAAa,EAAGC,GAAW,GAC7C,YAAiB,YAAa,EAAGyZ,GAAU,GAC3C,YAAsB,YAAa,EAAGE,GAAS,GAC/C,IAAIO,EAAY,KACZH,EAAY,KAEhB,GAAkB,UAAd/Z,EAAuB,CACzB,IAAIqa,EAAgBZ,GAAY,KAChCS,EAAY,IAAIxI,GAAuB2I,EAAe,KAAMV,GAAW,WAC9D3Z,IACLyZ,KACFM,EAAY,IACF/Z,GAAayZ,GAGzBS,EAAY,IAAIvH,GAAuBoH,EAAW,KAAMJ,GAAW,OAGrEtqB,KAAKypB,KAAKwB,4BAA4BjrB,KAAM6qB,IAO9CrB,EAAMtpB,UAAUO,IAAM,WACpB,OAAOT,KAAKypB,KAAKlT,SAASvW,OAO5BwpB,EAAMtpB,UAAUgrB,KAAO,SAAUva,EAAWwa,EAAcC,EAA0Bd,GAClF,IAAIjN,EAAQrd,KAEZ,YAAiB,aAAc,EAAG,EAAGqC,UAAUC,QAC/CoO,GAAkB,aAAc,EAAGC,GAAW,GAC9C,YAAiB,aAAc,EAAGwa,GAAc,GAChD,IAAIZ,EAAMf,EAAMgB,yBAAyB,aAAcY,EAA0Bd,GAK7Ee,GAAY,EACZ7Z,EAAW,IAAI,IAEnBA,EAASG,QAAQ2Z,OAAM,eAEvB,IAAIC,EAAe,SAASA,EAAanZ,GAGnCiZ,IACFA,GAAY,EAEZhO,EAAM0N,IAAIpa,EAAW4a,GAEjBJ,GACFA,EAAa9nB,KAAKknB,EAAID,QAAtBa,CAA+B/Y,GAGjCZ,EAASga,QAAQpZ,KAerB,OAXApS,KAAKmqB,GAAGxZ,EAAW4a,GAEnB,SAAUE,GACRpO,EAAM0N,IAAIpa,EAAW4a,GAEjBhB,EAAIjZ,QACNiZ,EAAIjZ,OAAOjO,KAAKknB,EAAID,QAApBC,CAA6BkB,GAG/Bja,EAASka,OAAOD,MAEXja,EAASG,SAOlB6X,EAAMtpB,UAAUyrB,aAAe,SAAUC,GAGvC,GAFA,YAAiB,qBAAsB,EAAG,EAAGvpB,UAAUC,QAElC,iBAAVspB,GAAsB5lB,KAAKI,MAAMwlB,KAAWA,GAASA,GAAS,EACvE,MAAM,IAAIloB,MAAM,kEAGlB,GAAI1D,KAAK0pB,aAAalB,WACpB,MAAM,IAAI9kB,MAAM,uGAGlB,OAAO,IAAI8lB,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAMygB,GAAwB5oB,KAAK0pB,aAAckC,GAAQ5rB,KAAK2pB,iBAOjGH,EAAMtpB,UAAU2rB,YAAc,SAAUD,GAGtC,GAFA,YAAiB,oBAAqB,EAAG,EAAGvpB,UAAUC,QAEjC,iBAAVspB,GAAsB5lB,KAAKI,MAAMwlB,KAAWA,GAASA,GAAS,EACvE,MAAM,IAAIloB,MAAM,iEAGlB,GAAI1D,KAAK0pB,aAAalB,WACpB,MAAM,IAAI9kB,MAAM,sGAGlB,OAAO,IAAI8lB,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM4gB,GAAuB/oB,KAAK0pB,aAAckC,GAAQ5rB,KAAK2pB,iBAOhGH,EAAMtpB,UAAU4rB,aAAe,SAAU3jB,GAGvC,GAFA,YAAiB,qBAAsB,EAAG,EAAG9F,UAAUC,QAE1C,SAAT6F,EACF,MAAM,IAAIzE,MAAM,2EACX,GAAa,cAATyE,EACT,MAAM,IAAIzE,MAAM,qFACX,GAAa,WAATyE,EACT,MAAM,IAAIzE,MAAM,+EAGlBmN,GAAmB,qBAAsB,EAAG1I,GAAM,GAClDnI,KAAKkqB,+BAA+B,sBACpC,IAAI6B,EAAa,IAAItkB,EAAKU,GAE1B,GAAIe,EAAY6iB,GACd,MAAM,IAAIroB,MAAM,qFAGlB,IAAI0S,EAAQ,IAAIoK,GAAUuL,GACtBjD,EAAYM,GAAmBppB,KAAK0pB,aAActT,GAEtD,OADAoT,EAAMI,wBAAwBd,GACvB,IAAIU,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM2gB,GAEvC,IAOFU,EAAMtpB,UAAU8rB,WAAa,WAC3B,YAAiB,mBAAoB,EAAG,EAAG3pB,UAAUC,QACrDtC,KAAKkqB,+BAA+B,oBACpC,IAAIpB,EAAYM,GAAmBppB,KAAK0pB,aAAcnV,IAEtD,OADAiV,EAAMI,wBAAwBd,GACvB,IAAIU,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM2gB,GAEvC,IAOFU,EAAMtpB,UAAU+rB,gBAAkB,WAChC,YAAiB,wBAAyB,EAAG,EAAG5pB,UAAUC,QAC1DtC,KAAKkqB,+BAA+B,yBACpC,IAAIpB,EAAYM,GAAmBppB,KAAK0pB,aAAcpS,IAEtD,OADAkS,EAAMI,wBAAwBd,GACvB,IAAIU,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM2gB,GAEvC,IAOFU,EAAMtpB,UAAUgsB,aAAe,WAC7B,YAAiB,qBAAsB,EAAG,EAAG7pB,UAAUC,QACvDtC,KAAKkqB,+BAA+B,sBACpC,IAAIpB,EAAYM,GAAmBppB,KAAK0pB,aAAcrJ,IAEtD,OADAmJ,EAAMI,wBAAwBd,GACvB,IAAIU,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM2gB,GAEvC,IAGFU,EAAMtpB,UAAUisB,QAAU,SAAU9rB,EAAOQ,QAC3B,IAAVR,IACFA,EAAQ,MAGV,YAAiB,gBAAiB,EAAG,EAAGgC,UAAUC,QAClDmN,GAAwB,gBAAiB,EAAGpP,EAAOL,KAAKmI,MAAM,GAC9DyI,GAAY,gBAAiB,EAAG/P,GAAM,GACtC,IAAIioB,EAAYE,GAAmBhpB,KAAK0pB,aAAcrpB,EAAOQ,GAI7D,GAHA2oB,EAAMS,eAAenB,GACrBU,EAAMI,wBAAwBd,GAE1B9oB,KAAK0pB,aAAa/D,WACpB,MAAM,IAAIjiB,MAAM,0FASlB,YALcmM,IAAVxP,IACFA,EAAQ,KACRQ,EAAO,MAGF,IAAI2oB,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM2gB,EAAW9oB,KAAK2pB,iBAGzDH,EAAMtpB,UAAUksB,WAAa,SAAU/rB,EAAOQ,QAC9B,IAAVR,IACFA,EAAQ,MAGV,YAAiB,mBAAoB,EAAG,EAAGgC,UAAUC,QACrDmN,GAAwB,mBAAoB,EAAGpP,EAAOL,KAAKmI,MAAM,GACjEyI,GAAY,mBAAoB,EAAG/P,GAAM,GACzC,IAAIioB,EAAYG,GAAsBjpB,KAAK0pB,aAAcrpB,EAAOQ,GAIhE,GAHA2oB,EAAMS,eAAenB,GACrBU,EAAMI,wBAAwBd,GAE1B9oB,KAAK0pB,aAAa/D,WACpB,MAAM,IAAIjiB,MAAM,yGAGlB,OAAO,IAAI8lB,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM2gB,EAAW9oB,KAAK2pB,iBAGzDH,EAAMtpB,UAAUmsB,MAAQ,SAAUhsB,EAAOQ,QACzB,IAAVR,IACFA,EAAQ,MAGV,YAAiB,cAAe,EAAG,EAAGgC,UAAUC,QAChDmN,GAAwB,cAAe,EAAGpP,EAAOL,KAAKmI,MAAM,GAC5DyI,GAAY,cAAe,EAAG/P,GAAM,GACpC,IAAIioB,EAAYI,GAAiBlpB,KAAK0pB,aAAcrpB,EAAOQ,GAI3D,GAHA2oB,EAAMS,eAAenB,GACrBU,EAAMI,wBAAwBd,GAE1B9oB,KAAK0pB,aAAa3D,SACpB,MAAM,IAAIriB,MAAM,gGAGlB,OAAO,IAAI8lB,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM2gB,EAAW9oB,KAAK2pB,iBAGzDH,EAAMtpB,UAAUosB,UAAY,SAAUjsB,EAAOQ,QAC7B,IAAVR,IACFA,EAAQ,MAGV,YAAiB,kBAAmB,EAAG,EAAGgC,UAAUC,QACpDmN,GAAwB,kBAAmB,EAAGpP,EAAOL,KAAKmI,MAAM,GAChEyI,GAAY,kBAAmB,EAAG/P,GAAM,GACxC,IAAIioB,EAAYK,GAAqBnpB,KAAK0pB,aAAcrpB,EAAOQ,GAI/D,GAHA2oB,EAAMS,eAAenB,GACrBU,EAAMI,wBAAwBd,GAE1B9oB,KAAK0pB,aAAa3D,SACpB,MAAM,IAAIriB,MAAM,oGAGlB,OAAO,IAAI8lB,EAAMxpB,KAAKypB,KAAMzpB,KAAKmI,KAAM2gB,EAAW9oB,KAAK2pB,iBAQzDH,EAAMtpB,UAAUqsB,QAAU,SAAUlsB,EAAOQ,GAKzC,GAJA,YAAiB,gBAAiB,EAAG,EAAGwB,UAAUC,QAClDmN,GAAwB,gBAAiB,EAAGpP,EAAOL,KAAKmI,MAAM,GAC9DyI,GAAY,gBAAiB,EAAG/P,GAAM,GAElCb,KAAK0pB,aAAa/D,WACpB,MAAM,IAAIjiB,MAAM,qGAGlB,GAAI1D,KAAK0pB,aAAa3D,SACpB,MAAM,IAAIriB,MAAM,gGAGlB,OAAO1D,KAAKmsB,QAAQ9rB,EAAOQ,GAAMwrB,MAAMhsB,EAAOQ,IAOhD2oB,EAAMtpB,UAAUY,SAAW,WAEzB,OADA,YAAiB,iBAAkB,EAAG,EAAGuB,UAAUC,QAC5CtC,KAAKypB,KAAK3oB,WAAayH,EAAuBvI,KAAKmI,OAK5DqhB,EAAMtpB,UAAUmS,OAAS,WAGvB,OADA,YAAiB,eAAgB,EAAG,EAAGhQ,UAAUC,QAC1CtC,KAAKc,YAOd0oB,EAAMtpB,UAAUssB,YAAc,WAC5B,OArhBJ,SAAmCve,GACjC,IAAItJ,EAAM,GA0BV,GAxBIsJ,EAAY0Z,YACdhjB,EAEA,GAAIsJ,EAAYia,iBAEZja,EAAY2Z,gBACdjjB,EAEA,GAAIsJ,EAAYka,kBAIhBla,EAAY6Z,UACdnjB,EAEA,GAAIsJ,EAAYma,eAEZna,EAAY8Z,cACdpjB,EAEA,GAAIsJ,EAAYoa,gBAIhBpa,EAAYyZ,UAAW,CACzB/iB,EAEA,EAAIsJ,EAAYoY,OAChB,IAAIoG,EAAWxe,EAAYga,UAEV,KAAbwE,IAEAA,EADExe,EAAYuY,iBACH,IAIA,KAMf7hB,EAEA,GAAI8nB,EAUN,OANIxe,EAAYgT,SAAW3J,KACzB3S,EAEA,EAAIsJ,EAAYgT,OAAOngB,YAGlB6D,EA4dE+nB,CAA0B1sB,KAAK0pB,eAGxCF,EAAMtpB,UAAUysB,gBAAkB,WAChC,IAAIhoB,EAAM3E,KAAKwsB,cACX3sB,EAAK+E,EAAkBD,GAC3B,MAAc,OAAP9E,EAAc,UAAYA,GAOnC2pB,EAAMtpB,UAAU0sB,QAAU,SAAU7iB,GAGlC,GAFA,YAAiB,gBAAiB,EAAG,EAAG1H,UAAUC,UAE5CyH,aAAiByf,GAAQ,CAC7B,IAAIhmB,EAAQ,uFACZ,MAAM,IAAIE,MAAMF,GAGlB,IAAIqpB,EAAW7sB,KAAKypB,OAAS1f,EAAM0f,KAC/BqD,EAAWhjB,EAAW9J,KAAKmI,KAAM4B,EAAM5B,MACvC4kB,EAAsB/sB,KAAK2sB,oBAAsB5iB,EAAM4iB,kBAC3D,OAAOE,GAAYC,GAAYC,GASjCvD,EAAMgB,yBAA2B,SAAU9a,EAAQsd,EAAiB1C,GAClE,IAAIC,EAAM,CACRjZ,OAAQ,KACRgZ,QAAS,MAGX,GAAI0C,GAAmB1C,EACrBC,EAAIjZ,OAAS0b,EACb,YAAiBtd,EAAQ,EAAG6a,EAAIjZ,QAAQ,GACxCiZ,EAAID,QAAUA,EACd,YAAsB5a,EAAQ,EAAG6a,EAAID,SAAS,QACzC,GAAI0C,EAET,GAA+B,iBAApBA,GAAoD,OAApBA,EAEzCzC,EAAID,QAAU0C,MACT,IAA+B,mBAApBA,EAGhB,MAAM,IAAItpB,MAAM,YAAYgM,EAAQ,GAAG,GAAQ,0DAF/C6a,EAAIjZ,OAAS0b,EAMjB,OAAOzC,GAGT/f,OAAOC,eAAe+e,EAAMtpB,UAAW,MAAO,CAC5CO,IAAK,WACH,OAAOT,KAAK2hB,UAEdjX,YAAY,EACZC,cAAc,IAET6e,EA/fT,GAmhBIyD,GAEJ,WACE,SAASA,EAAsBlM,GAC7B/gB,KAAK+gB,MAAQA,EAYf,OATAkM,EAAsB/sB,UAAUsV,kBAAoB,SAAUC,GAE5D,OAAO,IAAIwX,EADCjtB,KAAK+gB,MAAMvL,kBAAkBC,KAI3CwX,EAAsB/sB,UAAUkT,KAAO,WACrC,OAAOpT,KAAK+gB,OAGPkM,EAdT,GAiBIC,GAEJ,WACE,SAASA,EAAsBC,EAAUhlB,GACvCnI,KAAKotB,UAAYD,EACjBntB,KAAKgQ,MAAQ7H,EAYf,OATA+kB,EAAsBhtB,UAAUsV,kBAAoB,SAAUC,GAC5D,IAAI4L,EAAYtY,EAAU/I,KAAKgQ,MAAOyF,GACtC,OAAO,IAAIyX,EAAsBltB,KAAKotB,UAAW/L,IAGnD6L,EAAsBhtB,UAAUkT,KAAO,WACrC,OAAOpT,KAAKotB,UAAUC,uBAAuBrtB,KAAKgQ,QAG7Ckd,EAfT,GAiCII,GAA2B,SAAkCjtB,EAAOktB,EAAaC,GACnF,OAAKntB,GAA0B,iBAAVA,GAIrB,YAAO,QAASA,EAAO,6CAEK,iBAAjBA,EAAM,OACRotB,GAA2BptB,EAAM,OAAQktB,EAAaC,GAC5B,iBAAjBntB,EAAM,OACfqtB,GAA4BrtB,EAAM,OAAQktB,QAEjD,aAAO,EAAO,4BAA8BI,KAAKC,UAAUvtB,EAAO,KAAM,KAVjEA,GAcPotB,GAA6B,SAAoCI,EAAIC,EAAUN,GACjF,OAAQK,GACN,IAAK,YACH,OAAOL,EAAwB,UAEjC,QACE,aAAO,EAAO,4BAA8BK,KAI9CH,GAA8B,SAAqCG,EAAIC,EAAUC,GAC9EF,EAAGpoB,eAAe,cACrB,aAAO,EAAO,4BAA8BkoB,KAAKC,UAAUC,EAAI,KAAM,IAGvE,IAAIG,EAAQH,EAAc,UAEL,iBAAVG,GACT,aAAO,EAAO,+BAAiCA,GAGjD,IAAIC,EAAeH,EAAS1a,OAG5B,GAFA,YAAO6a,QAA8D,+CAEhEA,EAAanZ,aAChB,OAAOkZ,EAGT,IACIT,EADOU,EACY1X,WAEvB,MAA2B,iBAAhBgX,EACFS,EAIFT,EAAcS,GAWnBE,GAA2B,SAAkC/lB,EAAMiL,EAAM+Z,EAAUK,GACrF,OAAOW,GAAqB/a,EAAM,IAAI8Z,GAAsBC,EAAUhlB,GAAOqlB,IAS3EY,GAA+B,SAAsChb,EAAM0a,EAAUN,GACvF,OAAOW,GAAqB/a,EAAM,IAAI6Z,GAAsBa,GAAWN,IAGzE,SAASW,GAAqB/a,EAAMma,EAAaC,GAC/C,IAEI7Z,EAFA0a,EAASjb,EAAK4B,cAAcd,MAC5B1E,EAAW8d,GAAyBe,EAAQd,EAAY/X,kBAAkB,aAAcgY,GAG5F,GAAIpa,EAAK0B,aAAc,CACrB,IAAIwZ,EAAWlb,EACX/S,EAAQitB,GAAyBgB,EAAS/X,WAAYgX,EAAaC,GAEvE,OAAIntB,IAAUiuB,EAAS/X,YAAc/G,IAAa8e,EAAStZ,cAAcd,MAChE,IAAIe,GAAS5U,EAAOuf,GAAepQ,IAEnC4D,EAGT,IAAIoO,EAAepO,EAcnB,OAbAO,EAAU6N,EAENhS,IAAagS,EAAaxM,cAAcd,QAC1CP,EAAUA,EAAQ2B,eAAe,IAAIL,GAASzF,KAGhDgS,EAAarL,aAAamB,IAAgB,SAAU7B,EAAWI,GAC7D,IAAIE,EAAeoY,GAAqBtY,EAAW0X,EAAY/X,kBAAkBC,GAAY+X,GAEzFzX,IAAiBF,IACnBlC,EAAUA,EAAQmC,qBAAqBL,EAAWM,OAG/CpC,EAyBX,IAiKI4a,GAjKAC,GAEJ,WACE,SAASA,IACPxuB,KAAKK,MAAQ,KACbL,KAAKyuB,SAAW,IAAIC,IAmItB,OAzHAF,EAAmBtuB,UAAUyuB,KAAO,SAAUxmB,GAC5C,GAAkB,MAAdnI,KAAKK,MACP,OAAOL,KAAKK,MAAMqV,SAASvN,GACtB,IAAKe,EAAYf,IAASnI,KAAKyuB,SAASG,KAAO,EAAG,CACvD,IAAIhI,EAAW1e,EAAaC,GAG5B,OAFAA,EAAOE,EAAaF,GAEhBnI,KAAKyuB,SAASI,IAAIjI,GACJ5mB,KAAKyuB,SAAShuB,IAAImmB,GACjB+H,KAAKxmB,GAEf,KAGT,OAAO,MAYXqmB,EAAmBtuB,UAAU4uB,SAAW,SAAU3mB,EAAMtE,GACtD,GAAIqF,EAAYf,GACdnI,KAAKK,MAAQwD,EACb7D,KAAKyuB,SAASM,aACT,GAAmB,OAAf/uB,KAAKK,MACdL,KAAKK,MAAQL,KAAKK,MAAM2V,YAAY7N,EAAMtE,OACrC,CACL,IAAI+iB,EAAW1e,EAAaC,GAEvBnI,KAAKyuB,SAASI,IAAIjI,IACrB5mB,KAAKyuB,SAAStuB,IAAIymB,EAAU,IAAI4H,GAGlC,IAAI5jB,EAAQ5K,KAAKyuB,SAAShuB,IAAImmB,GAC9Bze,EAAOE,EAAaF,GACpByC,EAAMkkB,SAAS3mB,EAAMtE,KAWzB2qB,EAAmBtuB,UAAU8uB,OAAS,SAAU7mB,GAC9C,GAAIe,EAAYf,GAGd,OAFAnI,KAAKK,MAAQ,KACbL,KAAKyuB,SAASM,SACP,EAEP,GAAmB,OAAf/uB,KAAKK,MAAgB,CACvB,GAAIL,KAAKK,MAAMyU,aAEb,OAAO,EAEP,IAAIzU,EAAQL,KAAKK,MACjBL,KAAKK,MAAQ,KACb,IAAI4uB,EAASjvB,KAIb,OAHAK,EAAM8V,aAAamB,IAAgB,SAAUlX,EAAK8uB,GAChDD,EAAOH,SAAS,IAAIrnB,EAAKrH,GAAM8uB,MAE1BlvB,KAAKgvB,OAAO7mB,GAEhB,GAAInI,KAAKyuB,SAASG,KAAO,EAAG,CACjC,IAAIhI,EAAW1e,EAAaC,GAG5B,GAFAA,EAAOE,EAAaF,GAEhBnI,KAAKyuB,SAASI,IAAIjI,GACD5mB,KAAKyuB,SAAShuB,IAAImmB,GAAUoI,OAAO7mB,IAGpDnI,KAAKyuB,SAASU,OAAOvI,GAIzB,OAA8B,IAAvB5mB,KAAKyuB,SAASG,KAErB,OAAO,GAabJ,EAAmBtuB,UAAUkvB,YAAc,SAAUC,EAAYC,GAC5C,OAAftvB,KAAKK,MACPivB,EAAKD,EAAYrvB,KAAKK,OAEtBL,KAAKmW,cAAa,SAAU/V,EAAK8uB,GAC/B,IAAI/mB,EAAO,IAAIV,EAAK4nB,EAAWvuB,WAAa,IAAMV,GAClD8uB,EAAKE,YAAYjnB,EAAMmnB,OAW7Bd,EAAmBtuB,UAAUiW,aAAe,SAAUmZ,GACpDtvB,KAAKyuB,SAASlN,SAAQ,SAAU2N,EAAM9uB,GACpCkvB,EAAKlvB,EAAK8uB,OAIPV,EAtIT,GA0LA,SAASe,GAAoCC,GAC3C,MAAO,CACLC,UAAU,EACVC,YAAY,EACZF,QAASA,EACTG,QAAQ,IA9BZ,SAAWpB,GACTA,EAAcA,EAAyB,UAAI,GAAK,YAChDA,EAAcA,EAAqB,MAAI,GAAK,QAC5CA,EAAcA,EAA8B,eAAI,GAAK,iBACrDA,EAAcA,EAA+B,gBAAI,GAAK,kBAJxD,CAKGA,KAAkBA,GAAgB,KA8CrC,IA8DIqB,GA9DAC,GAEJ,WAIE,SAASA,EAET1nB,EAEA2nB,EAEAC,GACE/vB,KAAKmI,KAAOA,EACZnI,KAAK8vB,aAAeA,EACpB9vB,KAAK+vB,OAASA,EAGd/vB,KAAKqM,KAAOkiB,GAAcyB,eAG1BhwB,KAAK+S,OAhEA,CACL0c,UAAU,EACVC,YAAY,EACZF,QAAS,KACTG,QAAQ,GAiFV,OAdAE,EAAa3vB,UAAU+vB,kBAAoB,SAAUxa,GACnD,GAAKvM,EAAYlJ,KAAKmI,MAGf,IAA+B,MAA3BnI,KAAK8vB,aAAazvB,MAG3B,OAFA,YAAOL,KAAK8vB,aAAarB,SAAS1Z,UAAW,4DAEtC/U,KAEP,IAAI4b,EAAY5b,KAAK8vB,aAAaI,QAAQ,IAAIzoB,EAAKgO,IACnD,OAAO,IAAIoa,EAAa5nB,IAAgB2T,EAAW5b,KAAK+vB,QAPxD,OADA,YAAO7nB,EAAalI,KAAKmI,QAAUsN,EAAW,iDACvC,IAAIoa,EAAaxnB,EAAarI,KAAKmI,MAAOnI,KAAK8vB,aAAc9vB,KAAK+vB,SAWtEF,EAxCT,GA8EIM,GAEJ,WACE,SAASA,EAAc9vB,EAAOouB,QACX,IAAbA,IAfDmB,KACHA,GAAyB,IAAIpX,GAAU/T,IAerCgqB,EAZGmB,IAeL5vB,KAAKK,MAAQA,EACbL,KAAKyuB,SAAWA,EA+SlB,OA5SA0B,EAAcC,WAAa,SAAUzrB,GACnC,IAAIuqB,EAAO,IAAIiB,EAAc,MAI7B,OAHA5qB,EAAKZ,GAAK,SAAU0c,EAAWwF,GAC7BqI,EAAOA,EAAK/uB,IAAI,IAAIsH,EAAK4Z,GAAYwF,MAEhCqI,GAOTiB,EAAcjwB,UAAU6U,QAAU,WAChC,OAAsB,OAAf/U,KAAKK,OAAkBL,KAAKyuB,SAAS1Z,WAc9Cob,EAAcjwB,UAAUmwB,iCAAmC,SAAUC,EAAcC,GACjF,GAAkB,MAAdvwB,KAAKK,OAAiBkwB,EAAUvwB,KAAKK,OACvC,MAAO,CACL8H,KAAMF,IACN5H,MAAOL,KAAKK,OAGd,GAAI6I,EAAYonB,GACd,OAAO,KAEP,IAAIra,EAAQ/N,EAAaooB,GACrB1lB,EAAQ5K,KAAKyuB,SAAShuB,IAAIwV,GAE9B,GAAc,OAAVrL,EAAgB,CAClB,IAAI4lB,EAA4B5lB,EAAMylB,iCAAiChoB,EAAaioB,GAAeC,GAEnG,OAAiC,MAA7BC,EAEK,CACLroB,KAFaY,EAAU,IAAItB,EAAKwO,GAAQua,EAA0BroB,MAGlE9H,MAAOmwB,EAA0BnwB,OAG5B,KAGT,OAAO,MAWf8vB,EAAcjwB,UAAUuwB,yBAA2B,SAAUH,GAC3D,OAAOtwB,KAAKqwB,iCAAiCC,GAAc,WACzD,OAAO,MAQXH,EAAcjwB,UAAUgwB,QAAU,SAAUI,GAC1C,GAAIpnB,EAAYonB,GACd,OAAOtwB,KAEP,IAAIiW,EAAQ/N,EAAaooB,GACrB1U,EAAY5b,KAAKyuB,SAAShuB,IAAIwV,GAElC,OAAkB,OAAd2F,EACKA,EAAUsU,QAAQ7nB,EAAaioB,IAE/B,IAAIH,EAAc,OAa/BA,EAAcjwB,UAAUC,IAAM,SAAUmwB,EAAcI,GACpD,GAAIxnB,EAAYonB,GACd,OAAO,IAAIH,EAAcO,EAAO1wB,KAAKyuB,UAErC,IAAIxY,EAAQ/N,EAAaooB,GAErB9L,GADQxkB,KAAKyuB,SAAShuB,IAAIwV,IAAU,IAAIka,EAAc,OACrChwB,IAAIkI,EAAaioB,GAAeI,GACjDlT,EAAcxd,KAAKyuB,SAASzV,OAAO/C,EAAOuO,GAC9C,OAAO,IAAI2L,EAAcnwB,KAAKK,MAAOmd,IAWzC2S,EAAcjwB,UAAUU,OAAS,SAAU0vB,GACzC,GAAIpnB,EAAYonB,GACd,OAAItwB,KAAKyuB,SAAS1Z,UACT,IAAIob,EAAc,MAElB,IAAIA,EAAc,KAAMnwB,KAAKyuB,UAGtC,IAAIxY,EAAQ/N,EAAaooB,GACrB1lB,EAAQ5K,KAAKyuB,SAAShuB,IAAIwV,GAE9B,GAAIrL,EAAO,CACT,IAAI4Z,EAAW5Z,EAAMhK,OAAOyH,EAAaioB,IACrC9S,OAAc,EAQlB,OALEA,EADEgH,EAASzP,UACG/U,KAAKyuB,SAAS7tB,OAAOqV,GAErBjW,KAAKyuB,SAASzV,OAAO/C,EAAOuO,GAGzB,OAAfxkB,KAAKK,OAAkBmd,EAAYzI,UAC9B,IAAIob,EAAc,MAElB,IAAIA,EAAcnwB,KAAKK,MAAOmd,GAGvC,OAAOxd,MAYbmwB,EAAcjwB,UAAUO,IAAM,SAAU6vB,GACtC,GAAIpnB,EAAYonB,GACd,OAAOtwB,KAAKK,MAEZ,IAAI4V,EAAQ/N,EAAaooB,GACrB1lB,EAAQ5K,KAAKyuB,SAAShuB,IAAIwV,GAE9B,OAAIrL,EACKA,EAAMnK,IAAI4H,EAAaioB,IAEvB,MAabH,EAAcjwB,UAAUywB,QAAU,SAAUL,EAAcM,GACxD,GAAI1nB,EAAYonB,GACd,OAAOM,EAEP,IAAI3a,EAAQ/N,EAAaooB,GAErB9L,GADQxkB,KAAKyuB,SAAShuB,IAAIwV,IAAU,IAAIka,EAAc,OACrCQ,QAAQtoB,EAAaioB,GAAeM,GACrDpT,OAAc,EAQlB,OALEA,EADEgH,EAASzP,UACG/U,KAAKyuB,SAAS7tB,OAAOqV,GAErBjW,KAAKyuB,SAASzV,OAAO/C,EAAOuO,GAGrC,IAAI2L,EAAcnwB,KAAKK,MAAOmd,IAUzC2S,EAAcjwB,UAAU2wB,KAAO,SAAUrrB,GACvC,OAAOxF,KAAK8wB,MAAM7oB,IAAgBzC,IAOpC2qB,EAAcjwB,UAAU4wB,MAAQ,SAAUC,EAAWvrB,GACnD,IAAIwrB,EAAQ,GAIZ,OAHAhxB,KAAKyuB,SAAS9V,kBAAiB,SAAUiO,EAAUhL,GACjDoV,EAAMpK,GAAYhL,EAAUkV,MAAM/nB,EAAUgoB,EAAWnK,GAAWphB,MAE7DA,EAAGurB,EAAW/wB,KAAKK,MAAO2wB,IAOnCb,EAAcjwB,UAAU+wB,WAAa,SAAU9oB,EAAMtC,GACnD,OAAO7F,KAAKkxB,YAAY/oB,EAAMF,IAAgBpC,IAGhDsqB,EAAcjwB,UAAUgxB,YAAc,SAAUC,EAAcJ,EAAWlrB,GACvE,IAAIqS,IAASlY,KAAKK,OAAQwF,EAAEkrB,EAAW/wB,KAAKK,OAE5C,GAAI6X,EACF,OAAOA,EAEP,GAAIhP,EAAYioB,GACd,OAAO,KAEP,IAAIlb,EAAQ/N,EAAaipB,GACrB9J,EAAYrnB,KAAKyuB,SAAShuB,IAAIwV,GAElC,OAAIoR,EACKA,EAAU6J,YAAY7oB,EAAa8oB,GAAepoB,EAAUgoB,EAAW9a,GAAQpQ,GAE/E,MAMfsqB,EAAcjwB,UAAUkxB,cAAgB,SAAUjpB,EAAMtC,GACtD,OAAO7F,KAAKqxB,eAAelpB,EAAMF,IAAgBpC,IAGnDsqB,EAAcjwB,UAAUmxB,eAAiB,SAAUF,EAAcG,EAAqBzrB,GACpF,GAAIqD,EAAYioB,GACd,OAAOnxB,KAEHA,KAAKK,OACPwF,EAAEyrB,EAAqBtxB,KAAKK,OAG9B,IAAI4V,EAAQ/N,EAAaipB,GACrB9J,EAAYrnB,KAAKyuB,SAAShuB,IAAIwV,GAElC,OAAIoR,EACKA,EAAUgK,eAAehpB,EAAa8oB,GAAepoB,EAAUuoB,EAAqBrb,GAAQpQ,GAE5F,IAAIsqB,EAAc,OAY/BA,EAAcjwB,UAAUqxB,QAAU,SAAU1rB,GAC1C7F,KAAKwxB,SAASvpB,IAAgBpC,IAGhCsqB,EAAcjwB,UAAUsxB,SAAW,SAAUF,EAAqBzrB,GAChE7F,KAAKyuB,SAAS9V,kBAAiB,SAAUlD,EAAWmG,GAClDA,EAAU4V,SAASzoB,EAAUuoB,EAAqB7b,GAAY5P,MAG5D7F,KAAKK,OACPwF,EAAEyrB,EAAqBtxB,KAAKK,QAIhC8vB,EAAcjwB,UAAUuxB,aAAe,SAAU5rB,GAC/C7F,KAAKyuB,SAAS9V,kBAAiB,SAAUlD,EAAWmG,GAC9CA,EAAUvb,OACZwF,EAAE4P,EAAWmG,EAAUvb,WAKtB8vB,EAtTT,GA0UIuB,GAEJ,WACE,SAASA,EAAe3e,EAAQ5K,GAC9BnI,KAAK+S,OAASA,EACd/S,KAAKmI,KAAOA,EAGZnI,KAAKqM,KAAOkiB,GAAcoD,gBAW5B,OARAD,EAAexxB,UAAU+vB,kBAAoB,SAAUxa,GACrD,OAAIvM,EAAYlJ,KAAKmI,MACZ,IAAIupB,EAAe1xB,KAAK+S,OAAQ9K,KAEhC,IAAIypB,EAAe1xB,KAAK+S,OAAQ1K,EAAarI,KAAKmI,QAItDupB,EAjBT,GAqCIE,GAEJ,WACE,SAASA,EAAU7e,EAAQ5K,EAAMwY,GAC/B3gB,KAAK+S,OAASA,EACd/S,KAAKmI,KAAOA,EACZnI,KAAK2gB,KAAOA,EAGZ3gB,KAAKqM,KAAOkiB,GAAcsD,UAW5B,OARAD,EAAU1xB,UAAU+vB,kBAAoB,SAAUxa,GAChD,OAAIvM,EAAYlJ,KAAKmI,MACZ,IAAIypB,EAAU5xB,KAAK+S,OAAQ9K,IAAgBjI,KAAK2gB,KAAKnL,kBAAkBC,IAEvE,IAAImc,EAAU5xB,KAAK+S,OAAQ1K,EAAarI,KAAKmI,MAAOnI,KAAK2gB,OAI7DiR,EAlBT,GAsCIE,GAEJ,WACE,SAASA,EAET/e,EAEA5K,EAEAsmB,GACEzuB,KAAK+S,OAASA,EACd/S,KAAKmI,KAAOA,EACZnI,KAAKyuB,SAAWA,EAGhBzuB,KAAKqM,KAAOkiB,GAAcwD,MAmC5B,OA5BAD,EAAM5xB,UAAU+vB,kBAAoB,SAAUxa,GAC5C,GAAIvM,EAAYlJ,KAAKmI,MAAO,CAC1B,IAAIyT,EAAY5b,KAAKyuB,SAASyB,QAAQ,IAAIzoB,EAAKgO,IAE/C,OAAImG,EAAU7G,UAEL,KACE6G,EAAUvb,MAEZ,IAAIuxB,GAAU5xB,KAAK+S,OAAQ9K,IAAgB2T,EAAUvb,OAGrD,IAAIyxB,EAAM9xB,KAAK+S,OAAQ9K,IAAgB2T,GAIhD,OADA,YAAO1T,EAAalI,KAAKmI,QAAUsN,EAAW,kEACvC,IAAIqc,EAAM9xB,KAAK+S,OAAQ1K,EAAarI,KAAKmI,MAAOnI,KAAKyuB,WAQhEqD,EAAM5xB,UAAUY,SAAW,WACzB,MAAO,aAAed,KAAKmI,KAAO,KAAOnI,KAAK+S,OAAOjS,WAAa,WAAad,KAAKyuB,SAAS3tB,WAAa,KAGrGgxB,EAhDT,GA2EIE,GAEJ,WACE,SAASA,EAAUjR,EAAOkR,EAAmBC,GAC3ClyB,KAAK+gB,MAAQA,EACb/gB,KAAKiyB,kBAAoBA,EACzBjyB,KAAKkyB,UAAYA,EAoCnB,OA7BAF,EAAU9xB,UAAUiyB,mBAAqB,WACvC,OAAOnyB,KAAKiyB,mBAOdD,EAAU9xB,UAAUkyB,WAAa,WAC/B,OAAOpyB,KAAKkyB,WAGdF,EAAU9xB,UAAUmyB,kBAAoB,SAAUlqB,GAChD,GAAIe,EAAYf,GACd,OAAOnI,KAAKmyB,uBAAyBnyB,KAAKkyB,UAG5C,IAAItL,EAAW1e,EAAaC,GAC5B,OAAOnI,KAAKsyB,mBAAmB1L,IAGjCoL,EAAU9xB,UAAUoyB,mBAAqB,SAAUlyB,GACjD,OAAOJ,KAAKmyB,uBAAyBnyB,KAAKkyB,WAAalyB,KAAK+gB,MAAMpL,SAASvV,IAG7E4xB,EAAU9xB,UAAUqyB,QAAU,WAC5B,OAAOvyB,KAAK+gB,OAGPiR,EAxCT,GAkEIQ,GAEJ,WACE,SAASA,EAAUC,EAAaC,GAC9B1yB,KAAKyyB,YAAcA,EACnBzyB,KAAK0yB,aAAeA,EA2BtB,OAxBAF,EAAUtyB,UAAUyyB,gBAAkB,SAAUC,EAAWC,EAAUpN,GACnE,OAAO,IAAI+M,EAAU,IAAIR,GAAUY,EAAWC,EAAUpN,GAAWzlB,KAAK0yB,eAG1EF,EAAUtyB,UAAU4yB,iBAAmB,SAAUC,EAAYF,EAAUpN,GACrE,OAAO,IAAI+M,EAAUxyB,KAAKyyB,YAAa,IAAIT,GAAUe,EAAYF,EAAUpN,KAG7E+M,EAAUtyB,UAAU8yB,cAAgB,WAClC,OAAOhzB,KAAKyyB,aAGdD,EAAUtyB,UAAU+yB,qBAAuB,WACzC,OAAOjzB,KAAKyyB,YAAYN,qBAAuBnyB,KAAKyyB,YAAYF,UAAY,MAG9EC,EAAUtyB,UAAUgzB,eAAiB,WACnC,OAAOlzB,KAAK0yB,cAGdF,EAAUtyB,UAAUizB,sBAAwB,WAC1C,OAAOnzB,KAAK0yB,aAAaP,qBAAuBnyB,KAAK0yB,aAAaH,UAAY,MAGzEC,EA9BT,GAkDIY,GAEJ,WACE,SAASA,IACPpzB,KAAKqzB,UAAY,IAAI3E,IA6DvB,OA1DA0E,EAAuBlzB,UAAU0kB,iBAAmB,SAAUjC,GAC5D,IAAItW,EAAOsW,EAAOtW,KACdua,EAAWjE,EAAOlN,UACtB,YAAgB,gBAATpJ,GAEK,kBAATA,GAES,kBAATA,EAED,6CACF,YAAoB,cAAbua,EAA0B,mDACjC,IAAI0M,EAAYtzB,KAAKqzB,UAAU5yB,IAAImmB,GAEnC,GAAI0M,EAAW,CACb,IAAIC,EAAUD,EAAUjnB,KAExB,GAAa,gBAATA,GAEW,kBAAZknB,EAGCvzB,KAAKqzB,UAAUlzB,IAAIymB,EAAUxC,GAAmBwC,EAAUjE,EAAOG,aAAcwQ,EAAUxQ,oBACpF,GAAa,kBAATzW,GAEE,gBAAZknB,EAGCvzB,KAAKqzB,UAAUlE,OAAOvI,QACjB,GAAa,kBAATva,GAEE,kBAAZknB,EAGCvzB,KAAKqzB,UAAUlzB,IAAIymB,EAAUzC,GAAmByC,EAAU0M,EAAUjP,eAC/D,GAAa,kBAAThY,GAEE,gBAAZknB,EAGCvzB,KAAKqzB,UAAUlzB,IAAIymB,EAAU1C,GAAiB0C,EAAUjE,EAAOG,mBAC1D,IAAa,kBAATzW,GAEE,kBAAZknB,EAKD,MAAM,YAAe,mCAAqC5Q,EAAS,mBAAqB2Q,GAFtFtzB,KAAKqzB,UAAUlzB,IAAIymB,EAAUxC,GAAmBwC,EAAUjE,EAAOG,aAAcwQ,EAAUjP,gBAK7FrkB,KAAKqzB,UAAUlzB,IAAIymB,EAAUjE,IAIjCyQ,EAAuBlzB,UAAUszB,WAAa,WAC5C,OAAO9wB,MAAM+wB,KAAKzzB,KAAKqzB,UAAUK,WAG5BN,EA/DT,GAoHIO,GAA2B,IA1B/B,WACE,SAASC,KAkBT,OAZAA,EAAuB1zB,UAAU2zB,iBAAmB,SAAUjN,GAC5D,OAAO,MAOTgN,EAAuB1zB,UAAUonB,mBAAqB,SAAUlR,EAAOxL,EAAOpE,GAC5E,OAAO,MAGFotB,EAnBT,IAgCIE,GAEJ,WACE,SAASA,EAA6BC,EAASC,EAAYC,QACzB,IAA5BA,IACFA,EAA0B,MAG5Bj0B,KAAK+zB,QAAUA,EACf/zB,KAAKg0B,WAAaA,EAClBh0B,KAAKi0B,wBAA0BA,EAiCjC,OA1BAH,EAA6B5zB,UAAU2zB,iBAAmB,SAAUjN,GAClE,IAAIxT,EAAOpT,KAAKg0B,WAAWhB,gBAE3B,GAAI5f,EAAKkf,mBAAmB1L,GAC1B,OAAOxT,EAAKmf,UAAU/c,kBAAkBoR,GAExC,IAAIsN,EAA6C,MAAhCl0B,KAAKi0B,wBAAkC,IAAIjC,GAAUhyB,KAAKi0B,yBAAyB,GAAM,GAASj0B,KAAKg0B,WAAWd,iBACnI,OAAOlzB,KAAK+zB,QAAQI,kBAAkBvN,EAAUsN,IAQpDJ,EAA6B5zB,UAAUonB,mBAAqB,SAAUlR,EAAOxL,EAAOpE,GAClF,IAAI4tB,EAAqD,MAAhCp0B,KAAKi0B,wBAAkCj0B,KAAKi0B,wBAA0Bj0B,KAAKg0B,WAAWb,wBAC3GkB,EAAQr0B,KAAK+zB,QAAQO,iBAAiBF,EAAoBxpB,EAAO,EAAGpE,EAAS4P,GAEjF,OAAqB,IAAjBie,EAAM/xB,OACD,KAEA+xB,EAAM,IAIVP,EAzCT,GA6DIS,GAGF,SAAyBC,EAAWC,GAClCz0B,KAAKw0B,UAAYA,EACjBx0B,KAAKy0B,QAAUA,GASfC,GAEJ,WACE,SAASA,EAAcC,GACrB30B,KAAK20B,QAAUA,EA+ZjB,OA5ZAD,EAAcx0B,UAAU00B,cAAgB,SAAUJ,GAChD,YAAOA,EAAUxB,gBAAgBT,UAAUpb,UAAUnX,KAAK20B,QAAQ9R,YAAa,0BAC/E,YAAO2R,EAAUtB,iBAAiBX,UAAUpb,UAAUnX,KAAK20B,QAAQ9R,YAAa,4BAGlF6R,EAAcx0B,UAAU20B,eAAiB,SAAUC,EAAcC,EAAWC,EAAaC,GACvF,IACIC,EAAcC,EADdC,EAAc,IAAIhC,GAGtB,GAAI2B,EAAU1oB,OAASkiB,GAAcsD,UAAW,CAC9C,IAAIwD,EAAYN,EAEZM,EAAUtiB,OAAO0c,SACnByF,EAAel1B,KAAKs1B,oBAAoBR,EAAcO,EAAUltB,KAAMktB,EAAU1U,KAAMqU,EAAaC,EAAeG,IAElH,YAAOC,EAAUtiB,OAAO2c,WAAY,mBAIpCyF,EAAmBE,EAAUtiB,OAAO4c,QAAUmF,EAAa5B,iBAAiBd,eAAiBlpB,EAAYmsB,EAAUltB,MACnH+sB,EAAel1B,KAAKu1B,sBAAsBT,EAAcO,EAAUltB,KAAMktB,EAAU1U,KAAMqU,EAAaC,EAAeE,EAAkBC,SAEnI,GAAIL,EAAU1oB,OAASkiB,GAAcwD,MAAO,CACjD,IAAIyD,EAAQT,EAERS,EAAMziB,OAAO0c,SACfyF,EAAel1B,KAAKy1B,gBAAgBX,EAAcU,EAAMrtB,KAAMqtB,EAAM/G,SAAUuG,EAAaC,EAAeG,IAE1G,YAAOI,EAAMziB,OAAO2c,WAAY,mBAEhCyF,EAAmBK,EAAMziB,OAAO4c,QAAUmF,EAAa5B,iBAAiBd,aACxE8C,EAAel1B,KAAK01B,kBAAkBZ,EAAcU,EAAMrtB,KAAMqtB,EAAM/G,SAAUuG,EAAaC,EAAeE,EAAkBC,SAE3H,GAAIL,EAAU1oB,OAASkiB,GAAcyB,eAAgB,CAC1D,IAAI2F,EAAeZ,EAKjBG,EAHGS,EAAa5F,OAGD/vB,KAAK41B,iBAAiBd,EAAca,EAAaxtB,KAAM6sB,EAAaC,EAAeG,GAFnFp1B,KAAK61B,cAAcf,EAAca,EAAaxtB,KAAMwtB,EAAa7F,aAAckF,EAAaC,EAAeG,OAIvH,IAAIL,EAAU1oB,OAASkiB,GAAcoD,gBAG1C,MAAM,YAAe,2BAA6BoD,EAAU1oB,MAF5D6oB,EAAel1B,KAAK81B,gBAAgBhB,EAAcC,EAAU5sB,KAAM6sB,EAAaI,GAKjF,IAAIX,EAAUW,EAAY5B,aAE1B,OADAkB,EAAcqB,oBAAoBjB,EAAcI,EAAcT,GACvD,IAAIF,GAAgBW,EAAcT,IAG3CC,EAAcqB,oBAAsB,SAAUjB,EAAcI,EAAcE,GACxE,IAAIxC,EAAYsC,EAAalC,gBAE7B,GAAIJ,EAAUT,qBAAsB,CAClC,IAAI6D,EAAgBpD,EAAUL,UAAUzd,cAAgB8d,EAAUL,UAAUxd,UACxEkhB,EAAkBnB,EAAa7B,wBAE/BmC,EAAY9yB,OAAS,IAAMwyB,EAAa9B,gBAAgBb,sBAAwB6D,IAAkBpD,EAAUL,UAAUnb,OAAO6e,KAAqBrD,EAAUL,UAAUvd,cAAcoC,OAAO6e,EAAgBjhB,iBAC7MogB,EAAYrwB,KAAKkf,GAAYiR,EAAajC,2BAKhDyB,EAAcx0B,UAAUg2B,oCAAsC,SAAU1B,EAAW2B,EAAYnB,EAAajiB,EAAQqiB,GAClH,IAAIgB,EAAe5B,EAAUxB,gBAE7B,GAA8C,MAA1CgC,EAAYqB,eAAeF,GAE7B,OAAO3B,EAEP,IAAIhN,OAAgB,EAChB0M,OAAa,EAEjB,GAAIhrB,EAAYitB,GAId,GAFA,YAAO3B,EAAUtB,iBAAiBf,qBAAsB,8DAEpDqC,EAAUtB,iBAAiBd,aAAc,CAI3C,IAAIkE,EAAc9B,EAAUrB,wBACxBoD,EAAmBD,aAAuB1Y,GAAe0Y,EAAc1Y,GAAaxI,WACpFohB,EAAwBxB,EAAYyB,0BAA0BF,GAClE/O,EAAgBxnB,KAAK20B,QAAQ9P,eAAe2P,EAAUxB,gBAAgBT,UAAWiE,EAAuBpB,OACnG,CACL,IAAIsB,EAAe1B,EAAY3H,uBAAuBmH,EAAUrB,yBAChE3L,EAAgBxnB,KAAK20B,QAAQ9P,eAAe2P,EAAUxB,gBAAgBT,UAAWmE,EAActB,OAE5F,CACL,IAAIxO,EAAW1e,EAAaiuB,GAE5B,GAAiB,cAAbvP,EAA0B,CAC5B,YAAqC,IAA9Bxe,EAAc+tB,GAAmB,yDACxC,IAAIQ,EAAeP,EAAa7D,UAChC2B,EAAaM,EAAUtB,iBAAiBX,UAExC,IAAIqE,EAAkB5B,EAAY6B,mCAAmCV,EAAYQ,EAAczC,GAG7F1M,EADqB,MAAnBoP,EACc52B,KAAK20B,QAAQrf,eAAeqhB,EAAcC,GAG1CR,EAAa7D,cAE1B,CACL,IAAIuE,EAAkBzuB,EAAa8tB,GAE/BY,OAAgB,EAEpB,GAAIX,EAAa9D,mBAAmB1L,GAAW,CAC7CsN,EAAaM,EAAUtB,iBAAiBX,UACxC,IAAIyE,EAAmBhC,EAAY6B,mCAAmCV,EAAYC,EAAa7D,UAAW2B,GAGxG6C,EADsB,MAApBC,EACcZ,EAAa7D,UAAU/c,kBAAkBoR,GAAU5Q,YAAY8gB,EAAiBE,GAGhFZ,EAAa7D,UAAU/c,kBAAkBoR,QAG3DmQ,EAAgB/B,EAAYb,kBAAkBvN,EAAU4N,EAAUtB,kBAIlE1L,EADmB,MAAjBuP,EACc/2B,KAAK20B,QAAQ3e,YAAYogB,EAAa7D,UAAW3L,EAAUmQ,EAAeD,EAAiB/jB,EAAQqiB,GAGnGgB,EAAa7D,WAKnC,OAAOiC,EAAU7B,gBAAgBnL,EAAe4O,EAAajE,sBAAwBjpB,EAAYitB,GAAan2B,KAAK20B,QAAQ5P,iBAI/H2P,EAAcx0B,UAAUq1B,sBAAwB,SAAUT,EAAcqB,EAAYc,EAAajC,EAAaC,EAAeE,EAAkBC,GAC7I,IACI8B,EADAC,EAAgBrC,EAAa5B,iBAE7BkE,EAAejC,EAAmBn1B,KAAK20B,QAAU30B,KAAK20B,QAAQ3P,mBAElE,GAAI9b,EAAYitB,GACde,EAAiBE,EAAavS,eAAesS,EAAc5E,UAAW0E,EAAa,WAC9E,GAAIG,EAAarS,iBAAmBoS,EAAc/E,aAAc,CAErE,IAAIiF,EAAgBF,EAAc5E,UAAUvc,YAAYmgB,EAAYc,GACpEC,EAAiBE,EAAavS,eAAesS,EAAc5E,UAAW8E,EAAe,UAChF,CACL,IAAIzQ,EAAW1e,EAAaiuB,GAE5B,IAAKgB,EAAc9E,kBAAkB8D,IAAe/tB,EAAc+tB,GAAc,EAE9E,OAAOrB,EAGT,IAAIgC,EAAkBzuB,EAAa8tB,GAE/BpgB,EADYohB,EAAc5E,UAAU/c,kBAAkBoR,GAC7B5Q,YAAY8gB,EAAiBG,GAGxDC,EADe,cAAbtQ,EACewQ,EAAa9hB,eAAe6hB,EAAc5E,UAAWxc,GAErDqhB,EAAaphB,YAAYmhB,EAAc5E,UAAW3L,EAAU7Q,EAAc+gB,EAAiBnD,GAA0B,MAI1I,IAAIuB,EAAeJ,EAAahC,iBAAiBoE,EAAgBC,EAAchF,sBAAwBjpB,EAAYitB,GAAaiB,EAAarS,gBACzIhS,EAAS,IAAI+gB,GAA6BkB,EAAaE,EAAcD,GACzE,OAAOj1B,KAAKk2B,oCAAoChB,EAAciB,EAAYnB,EAAajiB,EAAQqiB,IAGjGV,EAAcx0B,UAAUo1B,oBAAsB,SAAUR,EAAcqB,EAAYc,EAAajC,EAAaC,EAAeG,GACzH,IACIF,EAAc1N,EADd4O,EAAetB,EAAa9B,gBAE5BjgB,EAAS,IAAI+gB,GAA6BkB,EAAaF,EAAcG,GAEzE,GAAI/rB,EAAYitB,GACd3O,EAAgBxnB,KAAK20B,QAAQ9P,eAAeiQ,EAAa9B,gBAAgBT,UAAW0E,EAAa7B,GACjGF,EAAeJ,EAAanC,gBAAgBnL,GAAe,EAAMxnB,KAAK20B,QAAQ5P,oBACzE,CACL,IAAI6B,EAAW1e,EAAaiuB,GAE5B,GAAiB,cAAbvP,EACFY,EAAgBxnB,KAAK20B,QAAQrf,eAAewf,EAAa9B,gBAAgBT,UAAW0E,GACpF/B,EAAeJ,EAAanC,gBAAgBnL,EAAe4O,EAAajE,qBAAsBiE,EAAahE,kBACtG,CACL,IAAI0E,EAAkBzuB,EAAa8tB,GAC/BxR,EAAWyR,EAAa7D,UAAU/c,kBAAkBoR,GACpDpC,OAAW,EAEf,GAAItb,EAAY4tB,GAEdtS,EAAWyS,MACN,CACL,IAAIphB,EAAY9C,EAAO8gB,iBAAiBjN,GAMpCpC,EAJa,MAAb3O,EACmC,cAAjCvN,EAAYwuB,IAAoCjhB,EAAUH,SAAS7M,EAAWiuB,IAAkB/hB,UAGvFc,EAEAA,EAAUG,YAAY8gB,EAAiBG,GAIzCrZ,GAAaxI,WAI5B,GAAKuP,EAASvN,OAAOoN,GAInB0Q,EAAeJ,MAJe,CAC9B,IAAIwC,EAAet3B,KAAK20B,QAAQ3e,YAAYogB,EAAa7D,UAAW3L,EAAUpC,EAAUsS,EAAiB/jB,EAAQqiB,GACjHF,EAAeJ,EAAanC,gBAAgB2E,EAAclB,EAAajE,qBAAsBnyB,KAAK20B,QAAQ5P,kBAOhH,OAAOmQ,GAGTR,EAAc6C,eAAiB,SAAU/C,EAAW5N,GAClD,OAAO4N,EAAUxB,gBAAgBV,mBAAmB1L,IAGtD8N,EAAcx0B,UAAUu1B,gBAAkB,SAAUjB,EAAWrsB,EAAMqvB,EAAiBxC,EAAasB,EAAalB,GAC9G,IAAI/X,EAAQrd,KAQRy3B,EAAejD,EAenB,OAdAgD,EAAgBjG,SAAQ,SAAUjB,EAAcza,GAC9C,IAAI6hB,EAAY3uB,EAAUZ,EAAMmoB,GAE5BoE,EAAc6C,eAAe/C,EAAWtsB,EAAawvB,MACvDD,EAAepa,EAAMiY,oBAAoBmC,EAAcC,EAAW7hB,EAAWmf,EAAasB,EAAalB,OAG3GoC,EAAgBjG,SAAQ,SAAUjB,EAAcza,GAC9C,IAAI6hB,EAAY3uB,EAAUZ,EAAMmoB,GAE3BoE,EAAc6C,eAAe/C,EAAWtsB,EAAawvB,MACxDD,EAAepa,EAAMiY,oBAAoBmC,EAAcC,EAAW7hB,EAAWmf,EAAasB,EAAalB,OAGpGqC,GAGT/C,EAAcx0B,UAAUy3B,YAAc,SAAUvkB,EAAMoiB,GAIpD,OAHAA,EAAMjE,SAAQ,SAAUjB,EAAcza,GACpCzC,EAAOA,EAAK4C,YAAYsa,EAAcza,MAEjCzC,GAGTshB,EAAcx0B,UAAUw1B,kBAAoB,SAAUlB,EAAWrsB,EAAMqvB,EAAiBxC,EAAasB,EAAanB,EAAkBC,GAClI,IAAI/X,EAAQrd,KAIZ,GAAIw0B,EAAUtB,iBAAiBX,UAAUxd,YAAcyf,EAAUtB,iBAAiBf,qBAChF,OAAOqC,EAST,IACIoD,EADAH,EAAejD,EAIjBoD,EADE1uB,EAAYf,GACEqvB,EAEA,IAAIrH,GAAc,MAAMQ,QAAQxoB,EAAMqvB,GAGxD,IAAItD,EAAaM,EAAUtB,iBAAiBX,UAqB5C,OApBAqF,EAAcnJ,SAAS9V,kBAAiB,SAAUiO,EAAUhL,GAC1D,GAAIsY,EAAWve,SAASiR,GAAW,CACjC,IAAIiR,EAAcrD,EAAUtB,iBAAiBX,UAAU/c,kBAAkBoR,GAErEpC,EAAWnH,EAAMsa,YAAYE,EAAajc,GAE9C6b,EAAepa,EAAMkY,sBAAsBkC,EAAc,IAAIhwB,EAAKmf,GAAWpC,EAAUwQ,EAAasB,EAAanB,EAAkBC,OAGvIwC,EAAcnJ,SAAS9V,kBAAiB,SAAUiO,EAAUkR,GAC1D,IAAIC,GAAsBvD,EAAUtB,iBAAiBZ,mBAAmB1L,IAAqC,MAAxBkR,EAAez3B,MAEpG,IAAK6zB,EAAWve,SAASiR,KAAcmR,EAAoB,CACzD,IAAIF,EAAcrD,EAAUtB,iBAAiBX,UAAU/c,kBAAkBoR,GAErEpC,EAAWnH,EAAMsa,YAAYE,EAAaC,GAE9CL,EAAepa,EAAMkY,sBAAsBkC,EAAc,IAAIhwB,EAAKmf,GAAWpC,EAAUwQ,EAAasB,EAAanB,EAAkBC,OAGhIqC,GAGT/C,EAAcx0B,UAAU21B,cAAgB,SAAUrB,EAAWwD,EAASlI,EAAckF,EAAaC,EAAeG,GAC9G,GAA2C,MAAvCJ,EAAYqB,eAAe2B,GAC7B,OAAOxD,EAIT,IAAIW,EAAmBX,EAAUtB,iBAAiBd,aAG9CkE,EAAc9B,EAAUtB,iBAE5B,GAA0B,MAAtBpD,EAAazvB,MAAe,CAE9B,GAAI6I,EAAY8uB,IAAY1B,EAAYnE,sBAAwBmE,EAAYjE,kBAAkB2F,GAC5F,OAAOh4B,KAAKu1B,sBAAsBf,EAAWwD,EAAS1B,EAAY/D,UAAU7c,SAASsiB,GAAUhD,EAAaC,EAAeE,EAAkBC,GACxI,GAAIlsB,EAAY8uB,GAAU,CAG/B,IAAIC,EAAoB,IAAI9H,GAAc,MAI1C,OAHAmG,EAAY/D,UAAUpc,aAAa5B,IAAW,SAAU1T,EAAMuS,GAC5D6kB,EAAoBA,EAAkB93B,IAAI,IAAIsH,EAAK5G,GAAOuS,MAErDpT,KAAK01B,kBAAkBlB,EAAWwD,EAASC,EAAmBjD,EAAaC,EAAeE,EAAkBC,GAEnH,OAAOZ,EAIT,IAAI0D,EAAoB,IAAI/H,GAAc,MAQ1C,OAPAL,EAAayB,SAAQ,SAAU4G,EAAW93B,GACxC,IAAI+3B,EAAkBrvB,EAAUivB,EAASG,GAErC7B,EAAYjE,kBAAkB+F,KAChCF,EAAoBA,EAAkB/3B,IAAIg4B,EAAW7B,EAAY/D,UAAU7c,SAAS0iB,QAGjFp4B,KAAK01B,kBAAkBlB,EAAWwD,EAASE,EAAmBlD,EAAaC,EAAeE,EAAkBC,IAIvHV,EAAcx0B,UAAU41B,gBAAkB,SAAUtB,EAAWrsB,EAAM6sB,EAAaI,GAChF,IAAIiD,EAAgB7D,EAAUtB,iBAC1BgC,EAAeV,EAAU1B,iBAAiBuF,EAAc9F,UAAW8F,EAAclG,sBAAwBjpB,EAAYf,GAAOkwB,EAAcjG,cAC9I,OAAOpyB,KAAKk2B,oCAAoChB,EAAc/sB,EAAM6sB,EAAarB,GAA0ByB,IAG7GV,EAAcx0B,UAAU01B,iBAAmB,SAAUpB,EAAWrsB,EAAM6sB,EAAasD,EAAqBlD,GACtG,IAAIvC,EAEJ,GAAwC,MAApCmC,EAAYqB,eAAeluB,GAC7B,OAAOqsB,EAEP,IAAIzhB,EAAS,IAAI+gB,GAA6BkB,EAAaR,EAAW8D,GAClEtR,EAAgBwN,EAAUxB,gBAAgBT,UAC1C/K,OAAgB,EAEpB,GAAIte,EAAYf,IAAgC,cAAvBD,EAAaC,GAAuB,CAC3D,IAAIwL,OAAU,EAEd,GAAI6gB,EAAUtB,iBAAiBf,qBAC7Bxe,EAAUqhB,EAAY3H,uBAAuBmH,EAAUrB,6BAClD,CACL,IAAIoF,EAAiB/D,EAAUtB,iBAAiBX,UAChD,YAAOgG,aAA0B3a,GAAc,iDAC/CjK,EAAUqhB,EAAYyB,0BAA0B8B,GAGlD5kB,EAAUA,EACV6T,EAAgBxnB,KAAK20B,QAAQ9P,eAAemC,EAAerT,EAASyhB,OAC/D,CACL,IAAIxO,EAAW1e,EAAaC,GACxBqc,EAAWwQ,EAAYb,kBAAkBvN,EAAU4N,EAAUtB,kBAEjD,MAAZ1O,GAAoBgQ,EAAUtB,iBAAiBZ,mBAAmB1L,KACpEpC,EAAWwC,EAAcxR,kBAAkBoR,KAI3CY,EADc,MAAZhD,EACcxkB,KAAK20B,QAAQ3e,YAAYgR,EAAeJ,EAAUpC,EAAUnc,EAAaF,GAAO4K,EAAQqiB,GAC/FZ,EAAUxB,gBAAgBT,UAAU5c,SAASiR,GAEtC5mB,KAAK20B,QAAQ3e,YAAYgR,EAAeJ,EAAUhJ,GAAaxI,WAAY/M,EAAaF,GAAO4K,EAAQqiB,GAEvGpO,GAGAjS,WAAayf,EAAUtB,iBAAiBf,uBAExDU,EAAWmC,EAAY3H,uBAAuBmH,EAAUrB,0BAE3Cre,eACX0S,EAAgBxnB,KAAK20B,QAAQ9P,eAAe2C,EAAeqL,EAAUuC,IAM3E,OADAvC,EAAW2B,EAAUtB,iBAAiBf,sBAAsE,MAA9C6C,EAAYqB,eAAepuB,KAClFusB,EAAU7B,gBAAgBnL,EAAeqL,EAAU7yB,KAAK20B,QAAQ5P,iBAIpE2P,EAjaT,GA4bI8D,GAGF,SAAwBC,GACtBz4B,KAAKy4B,OAASA,EACdz4B,KAAKihB,OAASjhB,KAAKy4B,OAAO7V,iBAAiBC,YAgD/C,SAAS6V,GAAoCC,EAAgBC,EAAQjoB,EAAW8jB,EAASoE,EAAeC,GACtG,IAAIC,EAAkBtE,EAAQuE,QAAO,SAAUrW,GAC7C,OAAOA,EAAOtW,OAASsE,KAEzBooB,EAAgB/zB,MAAK,SAAUZ,EAAGC,GAChC,OAqBJ,SAAsCs0B,EAAgBv0B,EAAGC,GACvD,GAAmB,MAAfD,EAAEqR,WAAoC,MAAfpR,EAAEoR,UAC3B,MAAM,YAAe,sCAGvB,IAAIwjB,EAAW,IAAI9lB,GAAU/O,EAAEqR,UAAWrR,EAAE0e,cACxCoW,EAAW,IAAI/lB,GAAU9O,EAAEoR,UAAWpR,EAAEye,cAC5C,OAAO6V,EAAe1X,OAAOzN,QAAQylB,EAAUC,GA5BtCC,CAA6BR,EAAgBv0B,EAAGC,MAEzD00B,EAAgBxX,SAAQ,SAAUoB,GAChC,IAAIyW,EASR,SAA+CT,EAAgBhW,EAAQmW,GACrE,MAAoB,UAAhBnW,EAAOtW,MAAoC,kBAAhBsW,EAAOtW,OAGpCsW,EAAOb,SAAWgX,EAAWljB,wBAAwB+M,EAAOlN,UAAWkN,EAAOG,aAAc6V,EAAe1X,SAFpG0B,EAXkB0W,CAAsCV,EAAgBhW,EAAQmW,GACvFD,EAActX,SAAQ,SAAU+X,GAC1BA,EAAa7W,WAAWE,EAAOtW,OACjCusB,EAAO7zB,KAAKu0B,EAAa5W,YAAY0W,EAAoBT,EAAeF,eAoDhF,IAgKIc,GAhKAC,GAEJ,WACE,SAASA,EAAKf,EAAQgB,GACpBz5B,KAAKy4B,OAASA,EACdz4B,KAAK05B,oBAAsB,GAC3B,IArnF8BzrB,EAqnF1B3B,EAAStM,KAAKy4B,OAAO7V,iBACrB+W,EAAc,IAAIpV,GAAcjY,EAAOuW,YACvCmW,GAvnF0B/qB,EAunFQ3B,GAtnFxBoc,eACP,IAAInE,GAActW,EAAY4U,YAC5B5U,EAAYua,WACd,IAAIrC,GAAclY,GAElB,IAAIgX,GAAahX,GAknFxBjO,KAAK45B,WAAa,IAAIlF,GAAcsE,GACpC,IAAIa,EAAqBJ,EAAiBvG,iBACtC4G,EAAoBL,EAAiBzG,gBAErCD,EAAa4G,EAAY9U,eAAejH,GAAaxI,WAAYykB,EAAmBtH,UAAW,MAC/FK,EAAYoG,EAAOnU,eAAejH,GAAaxI,WAAY0kB,EAAkBvH,UAAW,MACxF2E,EAAiB,IAAIlF,GAAUe,EAAY8G,EAAmB1H,qBAAsBwH,EAAY5U,gBAChGyC,EAAgB,IAAIwK,GAAUY,EAAWkH,EAAkB3H,qBAAsB6G,EAAOjU,gBAC5F/kB,KAAKg0B,WAAa,IAAIxB,GAAUhL,EAAe0P,GAC/Cl3B,KAAK+5B,gBAAkB,IAAIvB,GAAex4B,KAAKy4B,QA0HjD,OAvHAe,EAAKt5B,UAAU85B,SAAW,WACxB,OAAOh6B,KAAKy4B,QAGde,EAAKt5B,UAAUgzB,eAAiB,WAC9B,OAAOlzB,KAAKg0B,WAAWd,iBAAiBX,WAG1CiH,EAAKt5B,UAAU+5B,gBAAkB,WAC/B,OAAOj6B,KAAKg0B,WAAWf,wBAGzBuG,EAAKt5B,UAAUg6B,uBAAyB,SAAU/xB,GAChD,IAAIgyB,EAAQn6B,KAAKg0B,WAAWb,wBAE5B,OAAIgH,IAGEn6B,KAAKy4B,OAAO7V,iBAAiB8F,iBAAmBxf,EAAYf,KAAUgyB,EAAM3kB,kBAAkBtN,EAAaC,IAAO4M,WAC7GolB,EAAMzkB,SAASvN,GAInB,MAGTqxB,EAAKt5B,UAAU6U,QAAU,WACvB,OAA2C,IAApC/U,KAAK05B,oBAAoBp3B,QAGlCk3B,EAAKt5B,UAAUk6B,qBAAuB,SAAUvY,GAC9C7hB,KAAK05B,oBAAoB30B,KAAK8c,IAShC2X,EAAKt5B,UAAUm6B,wBAA0B,SAAUxY,EAAmByY,GACpE,IAAIC,EAAe,GAEnB,GAAID,EAAa,CACf,YAA4B,MAArBzY,EAA2B,mDAClC,IAAI2Y,EAASx6B,KAAKy4B,OAAOtwB,KACzBnI,KAAK05B,oBAAoBnY,SAAQ,SAAU+X,GACzC,IAAImB,EAAanB,EAAanW,kBAAkBmX,EAAaE,GAEzDC,GACFF,EAAax1B,KAAK01B,MAKxB,GAAI5Y,EAAmB,CAGrB,IAFA,IAAI6Y,EAAY,GAEPl4B,EAAI,EAAGA,EAAIxC,KAAK05B,oBAAoBp3B,SAAUE,EAAG,CACxD,IAAIsrB,EAAW9tB,KAAK05B,oBAAoBl3B,GAExC,GAAKsrB,EAAS1K,QAAQvB,IAEf,GAAIA,EAAkBwB,iBAAkB,CAE7CqX,EAAYA,EAAUC,OAAO36B,KAAK05B,oBAAoB9wB,MAAMpG,EAAI,IAChE,YAJAk4B,EAAU31B,KAAK+oB,GAQnB9tB,KAAK05B,oBAAsBgB,OAE3B16B,KAAK05B,oBAAsB,GAG7B,OAAOa,GAOTf,EAAKt5B,UAAU20B,eAAiB,SAAUE,EAAWC,EAAasD,GAC5DvD,EAAU1oB,OAASkiB,GAAcwD,OAAsC,OAA7BgD,EAAUhiB,OAAOyc,UAC7D,YAAOxvB,KAAKg0B,WAAWb,wBAAyB,6DAChD,YAAOnzB,KAAKg0B,WAAWf,uBAAwB,4DAGjD,IAAI6B,EAAe90B,KAAKg0B,WACpB9b,EAASlY,KAAK45B,WAAW/E,eAAeC,EAAcC,EAAWC,EAAasD,GAIlF,OAHAt4B,KAAK45B,WAAWhF,cAAc1c,EAAOsc,WACrC,YAAOtc,EAAOsc,UAAUtB,iBAAiBf,uBAAyB2C,EAAa5B,iBAAiBf,qBAAsB,2DACtHnyB,KAAKg0B,WAAa9b,EAAOsc,UAClBx0B,KAAK46B,0BAA0B1iB,EAAOuc,QAASvc,EAAOsc,UAAUxB,gBAAgBT,UAAW,OAGpGiH,EAAKt5B,UAAU26B,iBAAmB,SAAUvB,GAC1C,IAAI1G,EAAY5yB,KAAKg0B,WAAWhB,gBAC5B8H,EAAiB,GAEhBlI,EAAUL,UAAUzd,cACP8d,EAAUL,UAChBpc,aAAamB,IAAgB,SAAUlX,EAAKyV,GACpDilB,EAAe/1B,KAAKmf,GAAiB9jB,EAAKyV,OAQ9C,OAJI+c,EAAUT,sBACZ2I,EAAe/1B,KAAKkf,GAAY2O,EAAUL,YAGrCvyB,KAAK46B,0BAA0BE,EAAgBlI,EAAUL,UAAW+G,IAG7EE,EAAKt5B,UAAU06B,0BAA4B,SAAUnG,EAASqE,EAAYjX,GACxE,IAAIgX,EAAgBhX,EAAoB,CAACA,GAAqB7hB,KAAK05B,oBACnE,OAxOJ,SAAgDf,EAAgBlE,EAASqE,EAAYiC,GACnF,IAAInC,EAAS,GACToC,EAAQ,GAuBZ,OAtBAvG,EAAQlT,SAAQ,SAAUoB,GA5tG5B,IAA0BlN,EA6tGF,kBAAhBkN,EAAOtW,MAERssB,EAAe1X,OAAOxN,oBAAoBkP,EAAO0B,QAAS1B,EAAOG,eAClEkY,EAAMj2B,MAhuGc0Q,EAguGQkN,EAAOlN,UA/tGhC,CACLpJ,KAAM,cAGNyW,aA2tGgDH,EAAOG,aA1tGvDrN,UAAWA,QA6tGbijB,GAAoCC,EAAgBC,EAAQ,gBAE1DnE,EAASsG,EAAoBjC,GAC/BJ,GAAoCC,EAAgBC,EAAQ,cAE1DnE,EAASsG,EAAoBjC,GAC/BJ,GAAoCC,EAAgBC,EAAQ,cAE1DoC,EAAOD,EAAoBjC,GAC7BJ,GAAoCC,EAAgBC,EAAQ,gBAE1DnE,EAASsG,EAAoBjC,GAC/BJ,GAAoCC,EAAgBC,EAAQ,QAE1DnE,EAASsG,EAAoBjC,GACxBF,EA+MEqC,CAAuCj7B,KAAK+5B,gBAAiBtF,EAASqE,EAAYD,IAGpFW,EA1IT,GA2KI0B,GAEJ,WACE,SAASA,IAOPl7B,KAAKm7B,MAAQ,IAAIzM,IAmSnB,OAhSAlkB,OAAOC,eAAeywB,EAAW,yBAA0B,CACzDz6B,IAAK,WAEH,OADA,YAAO84B,GAA0B,oCAC1BA,IAETp5B,IAAK,SAAa+T,GAChB,aAAQqlB,GAA0B,mDAClCA,GAA2BrlB,GAE7BxJ,YAAY,EACZC,cAAc,IAGhBuwB,EAAUh7B,UAAU6U,QAAU,WAC5B,OAA2B,IAApB/U,KAAKm7B,MAAMvM,MAGpBsM,EAAUh7B,UAAU20B,eAAiB,SAAUE,EAAWC,EAAaoG,GACrE,IAAIjtB,EAAKC,EAELohB,EAAUuF,EAAUhiB,OAAOyc,QAE/B,GAAgB,OAAZA,EAAkB,CACpB,IAAI6L,EAAOr7B,KAAKm7B,MAAM16B,IAAI+uB,GAE1B,OADA,YAAe,MAAR6L,EAAc,gDACdA,EAAKxG,eAAeE,EAAWC,EAAaoG,GAEnD,IAAIxC,EAAS,GAEb,IACE,IAAK,IAAIrqB,EAAK,YAASvO,KAAKm7B,MAAMzH,UAAWllB,EAAKD,EAAGE,QAASD,EAAGE,KAAMF,EAAKD,EAAGE,OAAQ,CACjF4sB,EAAO7sB,EAAGnO,MACdu4B,EAASA,EAAO+B,OAAOU,EAAKxG,eAAeE,EAAWC,EAAaoG,KAErE,MAAOvsB,GACPV,EAAM,CACJ3K,MAAOqL,GAET,QACA,IACML,IAAOA,EAAGE,OAASN,EAAKG,EAAGO,SAASV,EAAGW,KAAKR,GAChD,QACA,GAAIJ,EAAK,MAAMA,EAAI3K,OAIvB,OAAOo1B,GAcXsC,EAAUh7B,UAAUo7B,QAAU,SAAU3uB,EAAOqoB,EAAasB,EAAaiF,GACvE,IAAI/L,EAAU7iB,EAAMggB,kBAChB0O,EAAOr7B,KAAKm7B,MAAM16B,IAAI+uB,GAE1B,IAAK6L,EAAM,CAET,IAAIvC,EAAa9D,EAAY3H,uBAAuBkO,EAAsBjF,EAAc,MACpFkF,GAAqB,EAErB1C,EACF0C,GAAqB,EACZlF,aAAuB1Y,IAChCkb,EAAa9D,EAAYyB,0BAA0BH,GACnDkF,GAAqB,IAErB1C,EAAalb,GAAaxI,WAC1BomB,GAAqB,GAGvB,IAAIhH,EAAY,IAAIhC,GAAU,IAAIR,GAAU8G,EAAY0C,GAAoB,GAAQ,IAAIxJ,GAAUsE,EAAaiF,GAAqB,IACpI,OAAO,IAAI/B,GAAK7sB,EAAO6nB,GAGzB,OAAO6G,GAcTH,EAAUh7B,UAAUk6B,qBAAuB,SAAUztB,EAAOkV,EAAmBmT,EAAasB,EAAaiF,GACvG,IAAIF,EAAOr7B,KAAKs7B,QAAQ3uB,EAAOqoB,EAAasB,EAAaiF,GAQzD,OANKv7B,KAAKm7B,MAAMtM,IAAIliB,EAAMggB,oBACxB3sB,KAAKm7B,MAAMh7B,IAAIwM,EAAMggB,kBAAmB0O,GAI1CA,EAAKjB,qBAAqBvY,GACnBwZ,EAAKR,iBAAiBhZ,IAc/BqZ,EAAUh7B,UAAUm6B,wBAA0B,SAAU1tB,EAAOkV,EAAmByY,GAChF,IAAImB,EAAKrtB,EAELohB,EAAU7iB,EAAMggB,kBAChB+O,EAAU,GACVnB,EAAe,GACfoB,EAAkB37B,KAAK47B,kBAE3B,GAAgB,YAAZpM,EACF,IAEE,IAAK,IAAIjhB,EAAK,YAASvO,KAAKm7B,MAAMU,WAAYrtB,EAAKD,EAAGE,QAASD,EAAGE,KAAMF,EAAKD,EAAGE,OAAQ,CACtF,IAAIqtB,EAAK,YAAOttB,EAAGnO,MAAO,GACtB07B,EAAcD,EAAG,GACjBT,EAAOS,EAAG,GAEdvB,EAAeA,EAAaI,OAAOU,EAAKhB,wBAAwBxY,EAAmByY,IAE/Ee,EAAKtmB,YACP/U,KAAKm7B,MAAMhM,OAAO4M,GAEbV,EAAKrB,WAAWpX,iBAAiB8F,gBACpCgT,EAAQ32B,KAAKs2B,EAAKrB,cAIxB,MAAOgC,GACPP,EAAM,CACJj4B,MAAOw4B,GAET,QACA,IACMxtB,IAAOA,EAAGE,OAASN,EAAKG,EAAGO,SAASV,EAAGW,KAAKR,GAChD,QACA,GAAIktB,EAAK,MAAMA,EAAIj4B,YAKnB63B,EAAOr7B,KAAKm7B,MAAM16B,IAAI+uB,MAGxB+K,EAAeA,EAAaI,OAAOU,EAAKhB,wBAAwBxY,EAAmByY,IAE/Ee,EAAKtmB,YACP/U,KAAKm7B,MAAMhM,OAAOK,GAEb6L,EAAKrB,WAAWpX,iBAAiB8F,gBACpCgT,EAAQ32B,KAAKs2B,EAAKrB,cAW1B,OALI2B,IAAoB37B,KAAK47B,mBAE3BF,EAAQ32B,KAAK,IAAIm2B,EAAU5W,uBAAuB3X,EAAM8c,KAAM9c,EAAMxE,OAG/D,CACLuzB,QAASA,EACT9C,OAAQ2B,IAIZW,EAAUh7B,UAAU+7B,cAAgB,WAClC,IAAIC,EAAK9tB,EAEL8J,EAAS,GAEb,IACE,IAAK,IAAI3J,EAAK,YAASvO,KAAKm7B,MAAMzH,UAAWllB,EAAKD,EAAGE,QAASD,EAAGE,KAAMF,EAAKD,EAAGE,OAAQ,CACrF,IAAI4sB,EAAO7sB,EAAGnO,MAETg7B,EAAKrB,WAAWpX,iBAAiB8F,gBACpCxQ,EAAOnT,KAAKs2B,IAGhB,MAAOc,GACPD,EAAM,CACJ14B,MAAO24B,GAET,QACA,IACM3tB,IAAOA,EAAGE,OAASN,EAAKG,EAAGO,SAASV,EAAGW,KAAKR,GAChD,QACA,GAAI2tB,EAAK,MAAMA,EAAI14B,OAIvB,OAAO0U,GAQTgjB,EAAUh7B,UAAUg6B,uBAAyB,SAAU/xB,GACrD,IAAIi0B,EAAKhuB,EAELkoB,EAAc,KAElB,IACE,IAAK,IAAI/nB,EAAK,YAASvO,KAAKm7B,MAAMzH,UAAWllB,EAAKD,EAAGE,QAASD,EAAGE,KAAMF,EAAKD,EAAGE,OAAQ,CACrF,IAAI4sB,EAAO7sB,EAAGnO,MACdi2B,EAAcA,GAAe+E,EAAKnB,uBAAuB/xB,IAE3D,MAAOk0B,GACPD,EAAM,CACJ54B,MAAO64B,GAET,QACA,IACM7tB,IAAOA,EAAGE,OAASN,EAAKG,EAAGO,SAASV,EAAGW,KAAKR,GAChD,QACA,GAAI6tB,EAAK,MAAMA,EAAI54B,OAIvB,OAAO8yB,GAGT4E,EAAUh7B,UAAUo8B,aAAe,SAAU3vB,GAG3C,GAFaA,EAAMiW,iBAER8F,eACT,OAAO1oB,KAAKu8B,kBAEZ,IAAI/M,EAAU7iB,EAAMggB,kBACpB,OAAO3sB,KAAKm7B,MAAM16B,IAAI+uB,IAI1B0L,EAAUh7B,UAAUs8B,mBAAqB,SAAU7vB,GACjD,OAAmC,MAA5B3M,KAAKs8B,aAAa3vB,IAG3BuuB,EAAUh7B,UAAU07B,gBAAkB,WACpC,OAAiC,MAA1B57B,KAAKu8B,mBAGdrB,EAAUh7B,UAAUq8B,gBAAkB,WACpC,IAAIE,EAAKruB,EAET,IACE,IAAK,IAAIG,EAAK,YAASvO,KAAKm7B,MAAMzH,UAAWllB,EAAKD,EAAGE,QAASD,EAAGE,KAAMF,EAAKD,EAAGE,OAAQ,CACrF,IAAI4sB,EAAO7sB,EAAGnO,MAEd,GAAIg7B,EAAKrB,WAAWpX,iBAAiB8F,eACnC,OAAO2S,GAGX,MAAOqB,GACPD,EAAM,CACJj5B,MAAOk5B,GAET,QACA,IACMluB,IAAOA,EAAGE,OAASN,EAAKG,EAAGO,SAASV,EAAGW,KAAKR,GAChD,QACA,GAAIkuB,EAAK,MAAMA,EAAIj5B,OAIvB,OAAO,MAGF03B,EA3ST,GAsUIyB,GAEJ,WACE,SAASA,EAAcC,GACrB58B,KAAK48B,WAAaA,EAOpB,OAJAD,EAAcE,MAAQ,WACpB,OAAO,IAAIF,EAAc,IAAIxM,GAAc,QAGtCwM,EATT,GAYA,SAASG,GAAsBC,EAAe50B,EAAMiL,GAClD,GAAIlK,EAAYf,GACd,OAAO,IAAIw0B,GAAc,IAAIxM,GAAc/c,IAE3C,IAAI4pB,EAAWD,EAAcH,WAAWnM,yBAAyBtoB,GAEjE,GAAgB,MAAZ60B,EAAkB,CACpB,IAAIC,EAAeD,EAAS70B,KACxB9H,EAAQ28B,EAAS38B,MACjBiwB,EAAennB,EAAgB8zB,EAAc90B,GAEjD,OADA9H,EAAQA,EAAM2V,YAAYsa,EAAcld,GACjC,IAAIupB,GAAcI,EAAcH,WAAWz8B,IAAI88B,EAAc58B,IAEpE,IAAI6vB,EAAU,IAAIC,GAAc/c,GAC5B8pB,EAAeH,EAAcH,WAAWjM,QAAQxoB,EAAM+nB,GAC1D,OAAO,IAAIyM,GAAcO,GAK/B,SAASC,GAAuBJ,EAAe50B,EAAMi1B,GACnD,IAAIC,EAAWN,EAIf,OAHAx3B,EAAK63B,GAAS,SAAUxW,EAAUxT,GAChCiqB,EAAWP,GAAsBO,EAAUt0B,EAAUZ,EAAMye,GAAWxT,MAEjEiqB,EAYT,SAASC,GAAyBP,EAAe50B,GAC/C,GAAIe,EAAYf,GACd,OAAOw0B,GAAcE,QAErB,IAAIK,EAAeH,EAAcH,WAAWjM,QAAQxoB,EAAM,IAAIgoB,GAAc,OAC5E,OAAO,IAAIwM,GAAcO,GAa7B,SAASK,GAA8BR,EAAe50B,GACpD,OAA4D,MAArDq1B,GAA6BT,EAAe50B,GAYrD,SAASq1B,GAA6BT,EAAe50B,GACnD,IAAI60B,EAAWD,EAAcH,WAAWnM,yBAAyBtoB,GAEjE,OAAgB,MAAZ60B,EACKD,EAAcH,WAAWn8B,IAAIu8B,EAAS70B,MAAMuN,SAASvM,EAAgB6zB,EAAS70B,KAAMA,IAEpF,KAWX,SAASs1B,GAAiCV,GACxC,IAAItO,EAAW,GACXrb,EAAO2pB,EAAcH,WAAWv8B,MAiBpC,OAfY,MAAR+S,EAEGA,EAAK0B,cACR1B,EAAK+C,aAAamB,IAAgB,SAAU7B,EAAWI,GACrD4Y,EAAS1pB,KAAK,IAAIoO,GAAUsC,EAAWI,OAI3CknB,EAAcH,WAAWnO,SAAS9V,kBAAiB,SAAUlD,EAAWmG,GAC/C,MAAnBA,EAAUvb,OACZouB,EAAS1pB,KAAK,IAAIoO,GAAUsC,EAAWmG,EAAUvb,WAKhDouB,EAGT,SAASiP,GAAgCX,EAAe50B,GACtD,GAAIe,EAAYf,GACd,OAAO40B,EAEP,IAAIY,EAAgBH,GAA6BT,EAAe50B,GAEhE,OACS,IAAIw0B,GADQ,MAAjBgB,EACuB,IAAIxN,GAAcwN,GAElBZ,EAAcH,WAAW1M,QAAQ/nB,IAUhE,SAASy1B,GAAqBb,GAC5B,OAAOA,EAAcH,WAAW7nB,UAUlC,SAAS8oB,GAAmBd,EAAe3pB,GACzC,OAGF,SAAS0qB,EAAkBxN,EAAcyN,EAAW3qB,GAClD,GAAuB,MAAnB2qB,EAAU19B,MAEZ,OAAO+S,EAAK4C,YAAYsa,EAAcyN,EAAU19B,OAEhD,IAAI29B,EAAkB,KAgBtB,OAfAD,EAAUtP,SAAS9V,kBAAiB,SAAUiO,EAAUhL,GACrC,cAAbgL,GAGF,YAA2B,OAApBhL,EAAUvb,MAAgB,6CACjC29B,EAAkBpiB,EAAUvb,OAE5B+S,EAAO0qB,EAAkB/0B,EAAUunB,EAAc1J,GAAWhL,EAAWxI,MAItEA,EAAKsC,SAAS4a,GAAcvb,WAAiC,OAApBipB,IAC5C5qB,EAAOA,EAAK4C,YAAYjN,EAAUunB,EAAc,aAAc0N,IAGzD5qB,EAxBF0qB,CAAkB71B,IAAgB80B,EAAcH,WAAYxpB,GAmDrE,IAAI6qB,GAEJ,WACE,SAASA,IAKPj+B,KAAKk+B,eAAiBvB,GAAcE,QAOpC78B,KAAKm+B,WAAa,GAClBn+B,KAAKo+B,cAAgB,EAibvB,OAzaAH,EAAU/9B,UAAUm+B,YAAc,SAAUl2B,GAC1C,OAAO,IAAIm2B,GAAan2B,EAAMnI,OAShCi+B,EAAU/9B,UAAUq+B,aAAe,SAAUp2B,EAAMwY,EAAM6d,EAASC,GAChE,YAAOD,EAAUx+B,KAAKo+B,aAAc,qDAEpBvuB,IAAZ4uB,IACFA,GAAU,GAGZz+B,KAAKm+B,WAAWp5B,KAAK,CACnBoD,KAAMA,EACNwY,KAAMA,EACN6d,QAASA,EACTC,QAASA,IAGPA,IACFz+B,KAAKk+B,eAAiBpB,GAAsB98B,KAAKk+B,eAAgB/1B,EAAMwY,IAGzE3gB,KAAKo+B,aAAeI,GAOtBP,EAAU/9B,UAAUw+B,SAAW,SAAUv2B,EAAMqvB,EAAiBgH,GAC9D,YAAOA,EAAUx+B,KAAKo+B,aAAc,gDACpCp+B,KAAKm+B,WAAWp5B,KAAK,CACnBoD,KAAMA,EACNsmB,SAAU+I,EACVgH,QAASA,EACTC,SAAS,IAEXz+B,KAAKk+B,eAAiBf,GAAuBn9B,KAAKk+B,eAAgB/1B,EAAMqvB,GACxEx3B,KAAKo+B,aAAeI,GAGtBP,EAAU/9B,UAAUy+B,SAAW,SAAUH,GACvC,IAAK,IAAIh8B,EAAI,EAAGA,EAAIxC,KAAKm+B,WAAW77B,OAAQE,IAAK,CAC/C,IAAIo8B,EAAS5+B,KAAKm+B,WAAW37B,GAE7B,GAAIo8B,EAAOJ,UAAYA,EACrB,OAAOI,EAIX,OAAO,MAWTX,EAAU/9B,UAAU2+B,YAAc,SAAUL,GAK1C,IAAInhB,EAAQrd,KAERwe,EAAMxe,KAAKm+B,WAAWW,WAAU,SAAUl5B,GAC5C,OAAOA,EAAE44B,UAAYA,KAEvB,YAAOhgB,GAAO,EAAG,gDACjB,IAAIugB,EAAgB/+B,KAAKm+B,WAAW3f,GACpCxe,KAAKm+B,WAAWa,OAAOxgB,EAAK,GAK5B,IAJA,IAAIygB,EAAyBF,EAAcN,QACvCS,GAAsC,EACtC18B,EAAIxC,KAAKm+B,WAAW77B,OAAS,EAE1B28B,GAA0Bz8B,GAAK,GAAG,CACvC,IAAI28B,EAAen/B,KAAKm+B,WAAW37B,GAE/B28B,EAAaV,UACXj8B,GAAKgc,GAAOxe,KAAKo/B,oBAAoBD,EAAcJ,EAAc52B,MAEnE82B,GAAyB,EAChBh1B,GAAa80B,EAAc52B,KAAMg3B,EAAah3B,QAEvD+2B,GAAsC,IAI1C18B,IAGF,GAAKy8B,EAEE,IAAIC,EAGT,OADAl/B,KAAKq/B,cACE,EAGHN,EAAcpe,KAChB3gB,KAAKk+B,eAAiBZ,GAAyBt9B,KAAKk+B,eAAgBa,EAAc52B,MAGlF5C,EADew5B,EAActQ,UACd,SAAUhZ,GACvB4H,EAAM6gB,eAAiBZ,GAAyBjgB,EAAM6gB,eAAgBn1B,EAAUg2B,EAAc52B,KAAMsN,OAIxG,OAAO,EAhBP,OAAO,GA0BXwoB,EAAU/9B,UAAUo/B,qBAAuB,SAAUn3B,GACnD,OAAOq1B,GAA6Bx9B,KAAKk+B,eAAgB/1B,IAW3D81B,EAAU/9B,UAAUmtB,uBAAyB,SAAUkS,EAAUjH,EAAqBkH,EAAmBC,GACvG,GAAKD,GAAsBC,EAkBpB,CACL,IAAIjK,EAAQkI,GAAgC19B,KAAKk+B,eAAgBqB,GAEjE,IAAKE,GAAuB7B,GAAqBpI,GAC/C,OAAO8C,EAGP,GAAKmH,GAA8C,MAAvBnH,GAAgCiF,GAA8B/H,EAAOvtB,KAE1F,CAOL,OAAO41B,GAFWI,EAAUyB,WAAW1/B,KAAKm+B,YAJ/B,SAAgBwB,GAC3B,OAAQA,EAAMlB,SAAWgB,MAA0BD,KAAuBA,EAAkB5zB,QAAQ+zB,EAAMnB,YAAcv0B,GAAa01B,EAAMx3B,KAAMo3B,IAAat1B,GAAas1B,EAAUI,EAAMx3B,SAG7Ho3B,GAC7CjH,GAAuB1a,GAAaxI,YAPvD,OAAO,KAzBX,IAAIuoB,EAAgBH,GAA6Bx9B,KAAKk+B,eAAgBqB,GAEtE,GAAqB,MAAjB5B,EACF,OAAOA,EAEP,IAAIiC,EAAWlC,GAAgC19B,KAAKk+B,eAAgBqB,GAEpE,OAAI3B,GAAqBgC,GAChBtH,EACyB,MAAvBA,GAAgCiF,GAA8BqC,EAAU33B,KAK1E41B,GAAmB+B,EADPtH,GAAuB1a,GAAaxI,YAFhD,MAiCf6oB,EAAU/9B,UAAUu2B,0BAA4B,SAAU8I,EAAUM,GAClE,IAAItJ,EAAmB3Y,GAAaxI,WAChC0qB,EAActC,GAA6Bx9B,KAAKk+B,eAAgBqB,GAEpE,GAAIO,EAQF,OAPKA,EAAYhrB,cAEfgrB,EAAY3pB,aAAamB,IAAgB,SAAU7B,EAAWoR,GAC5D0P,EAAmBA,EAAiBzgB,qBAAqBL,EAAWoR,MAIjE0P,EACF,GAAIsJ,EAAwB,CAGjC,IAAIE,EAAUrC,GAAgC19B,KAAKk+B,eAAgBqB,GASnE,OARAM,EAAuB1pB,aAAamB,IAAgB,SAAU7B,EAAWI,GACvE,IAAIzC,EAAOyqB,GAAmBH,GAAgCqC,EAAS,IAAIt4B,EAAKgO,IAAaI,GAC7F0gB,EAAmBA,EAAiBzgB,qBAAqBL,EAAWrC,MAGtEqqB,GAAiCsC,GAASxe,SAAQ,SAAUzF,GAC1Dya,EAAmBA,EAAiBzgB,qBAAqBgG,EAAUjb,KAAMib,EAAU1I,SAE9EmjB,EAQP,OAHAkH,GADYC,GAAgC19B,KAAKk+B,eAAgBqB,IACzBhe,SAAQ,SAAUzF,GACxDya,EAAmBA,EAAiBzgB,qBAAqBgG,EAAUjb,KAAMib,EAAU1I,SAE9EmjB,GAmBX0H,EAAU/9B,UAAU22B,mCAAqC,SAAU0I,EAAUle,EAAW2e,EAAmBC,GACzG,YAAOD,GAAqBC,EAAoB,6DAChD,IAAI93B,EAAOY,EAAUw2B,EAAUle,GAE/B,GAAIkc,GAA8Bv9B,KAAKk+B,eAAgB/1B,GAGrD,OAAO,KAGP,IAAI+3B,EAAaxC,GAAgC19B,KAAKk+B,eAAgB/1B,GAEtE,OAAIy1B,GAAqBsC,GAEhBD,EAAmBvqB,SAAS2L,GAQ5Bwc,GAAmBqC,EAAYD,EAAmBvqB,SAAS2L,KAUxE4c,EAAU/9B,UAAUi0B,kBAAoB,SAAUoL,EAAU3Y,EAAUqZ,GACpE,IAAI93B,EAAOY,EAAUw2B,EAAU3Y,GAC3B+W,EAAgBH,GAA6Bx9B,KAAKk+B,eAAgB/1B,GAEtE,OAAqB,MAAjBw1B,EACKA,EAEHsC,EAAmB3N,mBAAmB1L,GAEjCiX,GADUH,GAAgC19B,KAAKk+B,eAAgB/1B,GAChC83B,EAAmB1N,UAAU/c,kBAAkBoR,IAE9E,MAWbqX,EAAU/9B,UAAUm2B,eAAiB,SAAUluB,GAC7C,OAAOq1B,GAA6Bx9B,KAAKk+B,eAAgB/1B,IAQ3D81B,EAAU/9B,UAAUo0B,iBAAmB,SAAUiL,EAAUnL,EAAoBrV,EAAWrG,EAAOlS,EAAS4P,GACxG,IAAI+pB,EACA3K,EAAQkI,GAAgC19B,KAAKk+B,eAAgBqB,GAC7D5B,EAAgBH,GAA6BhI,EAAOvtB,KAExD,GAAqB,MAAjB01B,EACFwC,EAAYxC,MACP,IAA0B,MAAtBvJ,EAIT,MAAO,GAHP+L,EAAYtC,GAAmBrI,EAAOpB,GAQxC,IAFA+L,EAAYA,EAAUjpB,UAAUd,IAEjBrB,WAAcorB,EAAUrrB,aAgBrC,MAAO,GAVP,IALA,IAAIuf,EAAQ,GACRxqB,EAAMuM,EAAM7C,aACZyJ,EAAOxW,EAAU25B,EAAU1lB,uBAAuBsE,EAAW3I,GAAS+pB,EAAU3lB,gBAAgBuE,EAAW3I,GAC3G3H,EAAOuO,EAAK/E,UAETxJ,GAAQ4lB,EAAM/xB,OAASoW,GACC,IAAzB7O,EAAI4E,EAAMsQ,IACZsV,EAAMtvB,KAAK0J,GAGbA,EAAOuO,EAAK/E,UAGd,OAAOoc,GAMX4J,EAAU/9B,UAAUk/B,oBAAsB,SAAUgB,EAAaj4B,GAC/D,GAAIi4B,EAAYzf,KACd,OAAO1W,GAAam2B,EAAYj4B,KAAMA,GAEtC,IAAK,IAAIsN,KAAa2qB,EAAY3R,SAChC,GAAI2R,EAAY3R,SAAShpB,eAAegQ,IAAcxL,GAAalB,EAAUq3B,EAAYj4B,KAAMsN,GAAYtN,GACzG,OAAO,EAIX,OAAO,GAQX81B,EAAU/9B,UAAUm/B,WAAa,WAC/Br/B,KAAKk+B,eAAiBD,EAAUyB,WAAW1/B,KAAKm+B,WAAYF,EAAUoC,eAAgBp4B,KAElFjI,KAAKm+B,WAAW77B,OAAS,EAC3BtC,KAAKo+B,aAAep+B,KAAKm+B,WAAWn+B,KAAKm+B,WAAW77B,OAAS,GAAGk8B,QAEhEx+B,KAAKo+B,cAAgB,GAQzBH,EAAUoC,eAAiB,SAAUV,GACnC,OAAOA,EAAMlB,SAQfR,EAAUyB,WAAa,SAAUY,EAAQtH,EAAQuH,GAG/C,IAFA,IAAIxD,EAAgBJ,GAAcE,QAEzBr6B,EAAI,EAAGA,EAAI89B,EAAOh+B,SAAUE,EAAG,CACtC,IAAIm9B,EAAQW,EAAO99B,GAInB,GAAIw2B,EAAO2G,GAAQ,CACjB,IAAIjI,EAAYiI,EAAMx3B,KAClBmoB,OAAe,EAEnB,GAAIqP,EAAMhf,KACJ1W,GAAas2B,EAAU7I,GAEzBqF,EAAgBD,GAAsBC,EADtCzM,EAAennB,EAAgBo3B,EAAU7I,GAC0BiI,EAAMhf,MAChE1W,GAAaytB,EAAW6I,KACjCjQ,EAAennB,EAAgBuuB,EAAW6I,GAC1CxD,EAAgBD,GAAsBC,EAAe90B,IAAgB03B,EAAMhf,KAAKjL,SAAS4a,SAEtF,KAAIqP,EAAMlR,SAoBf,MAAM,YAAe,8CAnBrB,GAAIxkB,GAAas2B,EAAU7I,GAEzBqF,EAAgBI,GAAuBJ,EADvCzM,EAAennB,EAAgBo3B,EAAU7I,GAC2BiI,EAAMlR,eACrE,GAAIxkB,GAAaytB,EAAW6I,GAGjC,GAAIr3B,EAFJonB,EAAennB,EAAgBuuB,EAAW6I,IAGxCxD,EAAgBI,GAAuBJ,EAAe90B,IAAgB03B,EAAMlR,cACvE,CACL,IAAI7jB,EAAQ,YAAQ+0B,EAAMlR,SAAUvmB,EAAaooB,IAEjD,GAAI1lB,EAAO,CAET,IAAI41B,EAAW51B,EAAM8K,SAASrN,EAAaioB,IAC3CyM,EAAgBD,GAAsBC,EAAe90B,IAAgBu4B,OAUjF,OAAOzD,GAGFkB,EA/bT,GAwcIK,GAEJ,WACE,SAASA,EAAan2B,EAAM41B,GAC1B/9B,KAAKygC,UAAYt4B,EACjBnI,KAAK48B,WAAamB,EAoFpB,OAxEAO,EAAap+B,UAAUmtB,uBAAyB,SAAUiL,EAAqBkH,EAAmBC,GAChG,OAAOz/B,KAAK48B,WAAWvP,uBAAuBrtB,KAAKygC,UAAWnI,EAAqBkH,EAAmBC,IASxGnB,EAAap+B,UAAUu2B,0BAA4B,SAAUoJ,GAC3D,OAAO7/B,KAAK48B,WAAWnG,0BAA0Bz2B,KAAKygC,UAAWZ,IAoBnEvB,EAAap+B,UAAU22B,mCAAqC,SAAU1uB,EAAM63B,EAAmBC,GAC7F,OAAOjgC,KAAK48B,WAAW/F,mCAAmC72B,KAAKygC,UAAWt4B,EAAM63B,EAAmBC,IAUrG3B,EAAap+B,UAAUm2B,eAAiB,SAAUluB,GAChD,OAAOnI,KAAK48B,WAAWvG,eAAettB,EAAU/I,KAAKygC,UAAWt4B,KAQlEm2B,EAAap+B,UAAUo0B,iBAAmB,SAAUF,EAAoBrV,EAAWrG,EAAOlS,EAAS4P,GACjG,OAAOpW,KAAK48B,WAAWtI,iBAAiBt0B,KAAKygC,UAAWrM,EAAoBrV,EAAWrG,EAAOlS,EAAS4P,IAQzGkoB,EAAap+B,UAAUi0B,kBAAoB,SAAUvN,EAAU8Z,GAC7D,OAAO1gC,KAAK48B,WAAWzI,kBAAkBn0B,KAAKygC,UAAW7Z,EAAU8Z,IAOrEpC,EAAap+B,UAAU0K,MAAQ,SAAU6K,GACvC,OAAO,IAAI6oB,EAAav1B,EAAU/I,KAAKygC,UAAWhrB,GAAYzV,KAAK48B,aAG9D0B,EAvFT,GAiIIqC,GAEJ,WAKE,SAASA,EAASC,GAChB5gC,KAAK4gC,gBAAkBA,EAKvB5gC,KAAK6gC,eAAiB,IAAI1Q,GAAc,MAKxCnwB,KAAK8gC,kBAAoB,IAAI7C,GAC7Bj+B,KAAK+gC,cAAgB,IAAIrS,IACzB1uB,KAAKghC,cAAgB,IAAItS,IAwoB3B,OA/nBAiS,EAASzgC,UAAU+gC,mBAAqB,SAAU94B,EAAM+4B,EAAS1C,EAASC,GAIxE,OAFAz+B,KAAK8gC,kBAAkBvC,aAAap2B,EAAM+4B,EAAS1C,EAASC,GAEvDA,EAGIz+B,KAAKmhC,4BAA4B,IAAIvP,GAvwFzC,CACLnC,UAAU,EACVC,YAAY,EACZF,QAAS,KACTG,QAAQ,GAmwF0ExnB,EAAM+4B,IAF/E,IAYXP,EAASzgC,UAAUkhC,eAAiB,SAAUj5B,EAAMqvB,EAAiBgH,GAEnEx+B,KAAK8gC,kBAAkBpC,SAASv2B,EAAMqvB,EAAiBgH,GACvD,IAAI6C,EAAalR,GAAcC,WAAWoH,GAC1C,OAAOx3B,KAAKmhC,4BAA4B,IAAIrP,GArxFvC,CACLrC,UAAU,EACVC,YAAY,EACZF,QAAS,KACTG,QAAQ,GAixFoExnB,EAAMk5B,KAUpFV,EAASzgC,UAAUy1B,aAAe,SAAU6I,EAASzO,QACpC,IAAXA,IACFA,GAAS,GAGX,IAAI4P,EAAQ3/B,KAAK8gC,kBAAkBnC,SAASH,GAG5C,GAFuBx+B,KAAK8gC,kBAAkBjC,YAAYL,GAInD,CACL,IAAI8C,EAAiB,IAAInR,GAAc,MAWvC,OATkB,MAAdwP,EAAMhf,KAER2gB,EAAiBA,EAAenhC,IAAI8H,KAAgB,GAEpD1C,EAAKo6B,EAAMlR,UAAU,SAAUzmB,GAC7Bs5B,EAAiBA,EAAenhC,IAAI,IAAIsH,EAAKO,IAAa,MAIvDhI,KAAKmhC,4BAA4B,IAAItR,GAAa8P,EAAMx3B,KAAMm5B,EAAgBvR,IAbrF,MAAO,IAuBX4Q,EAASzgC,UAAUqhC,qBAAuB,SAAUp5B,EAAM+4B,GACxD,OAAOlhC,KAAKmhC,4BAA4B,IAAIvP,GAvzFvC,CACLnC,UAAU,EACVC,YAAY,EACZF,QAAS,KACTG,QAAQ,GAmzF0ExnB,EAAM+4B,KAS1FP,EAASzgC,UAAUshC,iBAAmB,SAAUr5B,EAAMqvB,GACpD,IAAI6J,EAAalR,GAAcC,WAAWoH,GAC1C,OAAOx3B,KAAKmhC,4BAA4B,IAAIrP,GAl0FvC,CACLrC,UAAU,EACVC,YAAY,EACZF,QAAS,KACTG,QAAQ,GA8zFsExnB,EAAMk5B,KAStFV,EAASzgC,UAAUuhC,oBAAsB,SAAUt5B,GACjD,OAAOnI,KAAKmhC,4BAA4B,IAAIzP,GA50FvC,CACLjC,UAAU,EACVC,YAAY,EACZF,QAAS,KACTG,QAAQ,GAw0F+ExnB,KASzFw4B,EAASzgC,UAAUwhC,0BAA4B,SAAUv5B,EAAMwY,EAAMghB,GACnE,IAAIC,EAAW5hC,KAAK6hC,gBAAgBF,GAEpC,GAAgB,MAAZC,EAAkB,CACpB,IAAIE,EAAInB,EAASoB,eAAeH,GAC5BI,EAAYF,EAAE35B,KACdqnB,EAAUsS,EAAEtS,QACZc,EAAennB,EAAgB64B,EAAW75B,GAC1C0lB,EAAK,IAAI+D,GAAUrC,GAAoCC,GAAUc,EAAc3P,GACnF,OAAO3gB,KAAKiiC,sBAAsBD,EAAWnU,GAG7C,MAAO,IAUX8S,EAASzgC,UAAUgiC,sBAAwB,SAAU/5B,EAAMqvB,EAAiBmK,GAC1E,IAAIC,EAAW5hC,KAAK6hC,gBAAgBF,GAEpC,GAAIC,EAAU,CACZ,IAAIE,EAAInB,EAASoB,eAAeH,GAC5BI,EAAYF,EAAE35B,KACdqnB,EAAUsS,EAAEtS,QACZc,EAAennB,EAAgB64B,EAAW75B,GAC1Ck5B,EAAalR,GAAcC,WAAWoH,GACtC3J,EAAK,IAAIiE,GAAMvC,GAAoCC,GAAUc,EAAc+Q,GAC/E,OAAOrhC,KAAKiiC,sBAAsBD,EAAWnU,GAG7C,MAAO,IAUX8S,EAASzgC,UAAUiiC,0BAA4B,SAAUh6B,EAAMw5B,GAC7D,IAAIC,EAAW5hC,KAAK6hC,gBAAgBF,GAEpC,GAAIC,EAAU,CACZ,IAAIE,EAAInB,EAASoB,eAAeH,GAC5BI,EAAYF,EAAE35B,KACdqnB,EAAUsS,EAAEtS,QACZc,EAAennB,EAAgB64B,EAAW75B,GAC1C0lB,EAAK,IAAI6D,GAAenC,GAAoCC,GAAUc,GAC1E,OAAOtwB,KAAKiiC,sBAAsBD,EAAWnU,GAG7C,MAAO,IAUX8S,EAASzgC,UAAUk6B,qBAAuB,SAAUztB,EAAOkV,GACzD,IAAI1Z,EAAOwE,EAAMxE,KACbmuB,EAAc,KACd8L,GAA2B,EAG/BpiC,KAAK6gC,eAAezP,cAAcjpB,GAAM,SAAUk6B,EAAiBC,GACjE,IAAIhS,EAAennB,EAAgBk5B,EAAiBl6B,GACpDmuB,EAAcA,GAAegM,EAAGpI,uBAAuB5J,GACvD8R,EAA2BA,GAA4BE,EAAG1G,qBAE5D,IAUIL,EAVAgH,EAAYviC,KAAK6gC,eAAepgC,IAAI0H,IAEnCo6B,GAIHH,EAA2BA,GAA4BG,EAAU3G,kBACjEtF,EAAcA,GAAeiM,EAAUrI,uBAAuBjyB,OAJ9Ds6B,EAAY,IAAIrH,GAChBl7B,KAAK6gC,eAAiB7gC,KAAK6gC,eAAe1gC,IAAIgI,EAAMo6B,IAQnC,MAAfjM,GACFiF,GAAsB,GAEtBA,GAAsB,EACtBjF,EAAc1Y,GAAaxI,WACbpV,KAAK6gC,eAAe3Q,QAAQ/nB,GAClCspB,cAAa,SAAUhc,EAAW+sB,GACxC,IAAIvN,EAAgBuN,EAAetI,uBAAuBjyB,KAEtDgtB,IACFqB,EAAcA,EAAYxgB,qBAAqBL,EAAWwf,QAKhE,IAAIwN,EAAoBF,EAAU/F,mBAAmB7vB,GAErD,IAAK81B,IAAsB91B,EAAMiW,iBAAiB8F,eAAgB,CAEhE,IAAIkZ,EAAWjB,EAAS+B,cAAc/1B,GACtC,aAAQ3M,KAAKghC,cAAcnS,IAAI+S,GAAW,0CAC1C,IAAID,EAAMhB,EAASgC,mBACnB3iC,KAAKghC,cAAc7gC,IAAIyhC,EAAUD,GACjC3hC,KAAK+gC,cAAc5gC,IAAIwhC,EAAKC,GAG9B,IAAI5M,EAAch1B,KAAK8gC,kBAAkBzC,YAAYl2B,GACjDywB,EAAS2J,EAAUnI,qBAAqBztB,EAAOkV,EAAmBmT,EAAasB,EAAaiF,GAEhG,IAAKkH,IAAsBL,EAA0B,CACnD,IAAI/G,EAAOkH,EAAUjG,aAAa3vB,GAClCisB,EAASA,EAAO+B,OAAO36B,KAAK4iC,eAAej2B,EAAO0uB,IAGpD,OAAOzC,GAcT+H,EAASzgC,UAAUm6B,wBAA0B,SAAU1tB,EAAOkV,EAAmByY,GAC/E,IAAIjd,EAAQrd,KAGRmI,EAAOwE,EAAMxE,KACb06B,EAAiB7iC,KAAK6gC,eAAepgC,IAAI0H,GACzCoyB,EAAe,GAInB,GAAIsI,IAA+C,YAA5Bl2B,EAAMggB,mBAAmCkW,EAAerG,mBAAmB7vB,IAAS,CACzG,IAAIm2B,EAAmBD,EAAexI,wBAAwB1tB,EAAOkV,EAAmByY,GAEpFuI,EAAe9tB,YACjB/U,KAAK6gC,eAAiB7gC,KAAK6gC,eAAejgC,OAAOuH,IAGnD,IAAIuzB,EAAUoH,EAAiBpH,QAC/BnB,EAAeuI,EAAiBlK,OAOhC,IAAImK,GAAmB,IAAMrH,EAAQoD,WAAU,SAAUnyB,GACvD,OAAOA,EAAMiW,iBAAiB8F,kBAE5Bsa,EAAUhjC,KAAK6gC,eAAe5P,WAAW9oB,GAAM,SAAUmoB,EAAc2S,GACzE,OAAOA,EAAgBrH,qBAGzB,GAAImH,IAAoBC,EAAS,CAC/B,IAAI9S,EAAUlwB,KAAK6gC,eAAe3Q,QAAQ/nB,GAG1C,IAAK+nB,EAAQnb,UAIX,IAFA,IAAImuB,EAAWljC,KAAKmjC,gCAAgCjT,GAE3C1tB,EAAI,EAAGA,EAAI0gC,EAAS5gC,SAAUE,EAAG,CACxC,IAAI64B,EAAO6H,EAAS1gC,GAChB4gC,EAAW/H,EAAKrB,WAChBqJ,EAAWrjC,KAAKsjC,uBAAuBjI,GAC3Cr7B,KAAK4gC,gBAAgB2C,eAAe5C,EAAS6C,mBAAmBJ,GAAWpjC,KAAKyjC,aAAaL,GAAWC,EAASK,OAAQL,EAAS9xB,aAQxI,IAAKyxB,GAAWtH,EAAQp5B,OAAS,IAAMg4B,EAGrC,GAAIyI,EAAiB,CAGnB/iC,KAAK4gC,gBAAgB+C,cAAchD,EAAS6C,mBAAmB72B,GAD9C,WAGjB+uB,EAAQna,SAAQ,SAAUqiB,GACxB,IAAIC,EAAcxmB,EAAM2jB,cAAcvgC,IAAIkgC,EAAS+B,cAAckB,IAEjEvmB,EAAMujB,gBAAgB+C,cAAchD,EAAS6C,mBAAmBI,GAAgBC,MAMtF7jC,KAAK8jC,YAAYpI,GAGnB,OAAOnB,GAeToG,EAASzgC,UAAUmtB,uBAAyB,SAAUllB,EAAMq3B,GAC1D,IACIzB,EAAY/9B,KAAK8gC,kBACjBxK,EAAct2B,KAAK6gC,eAAe5P,WAAW9oB,GAAM,SAAU4oB,EAAWwR,GAC1E,IAAIjS,EAAennB,EAAgB4nB,EAAW5oB,GAC1CmuB,EAAciM,EAAUrI,uBAAuB5J,GAEnD,GAAIgG,EACF,OAAOA,KAGX,OAAOyH,EAAU1Q,uBAAuBllB,EAAMmuB,EAAakJ,GAVnC,IAa1BmB,EAASzgC,UAAU6jC,eAAiB,SAAUp3B,GAC5C,IAAIxE,EAAOwE,EAAMxE,KACbmuB,EAAc,KAGlBt2B,KAAK6gC,eAAezP,cAAcjpB,GAAM,SAAUk6B,EAAiBC,GACjE,IAAIhS,EAAennB,EAAgBk5B,EAAiBl6B,GACpDmuB,EAAcA,GAAegM,EAAGpI,uBAAuB5J,MAEzD,IAAIiS,EAAYviC,KAAK6gC,eAAepgC,IAAI0H,GAEnCo6B,EAIHjM,EAAcA,GAAeiM,EAAUrI,uBAAuBjyB,MAH9Ds6B,EAAY,IAAIrH,GAChBl7B,KAAK6gC,eAAiB7gC,KAAK6gC,eAAe1gC,IAAIgI,EAAMo6B,IAKtD,IAAIhH,EAAqC,MAAfjF,EACtB0N,EAAkBzI,EAAsB,IAAIvJ,GAAUsE,GAAa,GAAM,GAAS,KAClFtB,EAAch1B,KAAK8gC,kBAAkBzC,YAAY1xB,EAAMxE,MAE3D,OADWo6B,EAAUjH,QAAQ3uB,EAAOqoB,EAAauG,EAAsByI,EAAgBzR,UAAY3U,GAAaxI,WAAYmmB,GAChHtB,mBAQd0G,EAASzgC,UAAUijC,gCAAkC,SAAUjT,GAC7D,OAAOA,EAAQW,MAAK,SAAUP,EAAc2T,EAAqBC,GAC/D,GAAID,GAAuBA,EAAoBrI,kBAE7C,MAAO,CADYqI,EAAoB1H,mBAIvC,IAAI4H,EAAU,GASd,OAPIF,IACFE,EAAUF,EAAoBhI,iBAGhC12B,EAAK2+B,GAAU,SAAUE,EAAMC,GAC7BF,EAAUA,EAAQxJ,OAAO0J,MAEpBF,MAKbxD,EAASzgC,UAAU4jC,YAAc,SAAUQ,GACzC,IAAK,IAAIt6B,EAAI,EAAGA,EAAIs6B,EAAQhiC,SAAU0H,EAAG,CACvC,IAAIu6B,EAAeD,EAAQt6B,GAE3B,IAAKu6B,EAAa3hB,iBAAiB8F,eAAgB,CAEjD,IAAI8b,EAAkB7D,EAAS+B,cAAc6B,GACzCE,EAAkBzkC,KAAKghC,cAAcvgC,IAAI+jC,GAC7CxkC,KAAKghC,cAAc7R,OAAOqV,GAC1BxkC,KAAK+gC,cAAc5R,OAAOsV,MAWhC9D,EAAS6C,mBAAqB,SAAU72B,GACtC,OAAIA,EAAMiW,iBAAiB8F,iBAAmB/b,EAAMiW,iBAAiB+F,YAI5Dhc,EAAMgV,SAENhV,GAUXg0B,EAASzgC,UAAU0iC,eAAiB,SAAUj2B,EAAO0uB,GACnD,IAAIlzB,EAAOwE,EAAMxE,KACbw5B,EAAM3hC,KAAKyjC,aAAa92B,GACxB02B,EAAWrjC,KAAKsjC,uBAAuBjI,GACvCzC,EAAS54B,KAAK4gC,gBAAgB2C,eAAe5C,EAAS6C,mBAAmB72B,GAAQg1B,EAAK0B,EAASK,OAAQL,EAAS9xB,YAChH2e,EAAUlwB,KAAK6gC,eAAe3Q,QAAQ/nB,GAG1C,GAAIw5B,EACF,aAAQzR,EAAQ7vB,MAAMu7B,kBAAmB,0DAuBzC,IApBA,IAAI8I,EAAgBxU,EAAQW,MAAK,SAAUP,EAAc2T,EAAqBC,GAC5E,IAAKh7B,EAAYonB,IAAiB2T,GAAuBA,EAAoBrI,kBAC3E,MAAO,CAACqI,EAAoB1H,kBAAkBvC,YAG9C,IAAI2K,EAAY,GAWhB,OATIV,IACFU,EAAYA,EAAUhK,OAAOsJ,EAAoBhI,gBAAgB2I,KAAI,SAAUvJ,GAC7E,OAAOA,EAAKrB,gBAIhBz0B,EAAK2+B,GAAU,SAAUE,EAAMS,GAC7BF,EAAYA,EAAUhK,OAAOkK,MAExBF,KAIFniC,EAAI,EAAGA,EAAIkiC,EAAcpiC,SAAUE,EAAG,CAC7C,IAAIsiC,EAAcJ,EAAcliC,GAChCxC,KAAK4gC,gBAAgB+C,cAAchD,EAAS6C,mBAAmBsB,GAAc9kC,KAAKyjC,aAAaqB,IAInG,OAAOlM,GAGT+H,EAASzgC,UAAUojC,uBAAyB,SAAUjI,GACpD,IAAIhe,EAAQrd,KAER2M,EAAQ0uB,EAAKrB,WACb2H,EAAM3hC,KAAKyjC,aAAa92B,GAC5B,MAAO,CACL+2B,OAAQ,WAEN,OADYrI,EAAKnI,kBAAoBtV,GAAaxI,YACrCoB,QAEfjF,WAAY,SAAoBwzB,GAC9B,GAAe,OAAXA,EACF,OAAIpD,EACKtkB,EAAM8kB,0BAA0Bx1B,EAAMxE,KAAMw5B,GAE5CtkB,EAAMokB,oBAAoB90B,EAAMxE,MAKzC,IAAI3E,EAp+SW,SAA4BwhC,EAAMr4B,GACzD,IAAIs4B,EAAS,gBAEA,YAATD,EACFC,EAAS,0FACS,sBAATD,EACTC,EAAS,6DACS,gBAATD,IACTC,EAAS,8BAGX,IAAIzhC,EAAQ,IAAIE,MAAMshC,EAAO,OAASr4B,EAAMxE,KAAKrH,WAAa,KAAOmkC,GAGrE,OADAzhC,EAAMwhC,KAAOA,EAAKE,cACX1hC,EAs9Sa2hC,CAAmBJ,EAAQp4B,GACvC,OAAO0Q,EAAMgd,wBAAwB1tB,EAErC,KAAMnJ,MAUdm9B,EAAS+B,cAAgB,SAAU/1B,GACjC,OAAOA,EAAMxE,KAAKrH,WAAa,IAAM6L,EAAMggB,mBAO7CgU,EAASoB,eAAiB,SAAUH,GAClC,IAAIwD,EAAaxD,EAASh2B,QAAQ,KAElC,OADA,aAAuB,IAAhBw5B,GAAqBA,EAAaxD,EAASt/B,OAAS,EAAG,iBACvD,CACLktB,QAASoS,EAAS/6B,OAAOu+B,EAAa,GACtCj9B,KAAM,IAAIV,EAAKm6B,EAAS/6B,OAAO,EAAGu+B,MAQtCzE,EAASzgC,UAAU2hC,gBAAkB,SAAUF,GAC7C,OAAO3hC,KAAK+gC,cAActgC,IAAIkhC,IAOhChB,EAASzgC,UAAUujC,aAAe,SAAU92B,GAC1C,IAAIi1B,EAAWjB,EAAS+B,cAAc/1B,GACtC,OAAO3M,KAAKghC,cAAcvgC,IAAImhC,IAOhCjB,EAASgC,iBAAmB,WAC1B,OAAOhC,EAAS0E,iBAOlB1E,EAASzgC,UAAU+hC,sBAAwB,SAAUD,EAAWjN,GAC9D,IAAIwN,EAAYviC,KAAK6gC,eAAepgC,IAAIuhC,GACxC,YAAOO,EAAW,wDAClB,IAAIvN,EAAch1B,KAAK8gC,kBAAkBzC,YAAY2D,GACrD,OAAOO,EAAU1N,eAAeE,EAAWC,EAE3C,OAiBF2L,EAASzgC,UAAUihC,4BAA8B,SAAUpM,GACzD,OAAO/0B,KAAKslC,sBAAsBvQ,EAAW/0B,KAAK6gC,eAElD,KAAM7gC,KAAK8gC,kBAAkBzC,YAAYp2B,OAO3C04B,EAASzgC,UAAUolC,sBAAwB,SAAUvQ,EAAWwQ,EAAejP,EAAatB,GAC1F,GAAI9rB,EAAY6rB,EAAU5sB,MACxB,OAAOnI,KAAKwlC,iCAAiCzQ,EAAWwQ,EAAejP,EAAatB,GAEpF,IAAIuN,EAAYgD,EAAc9kC,IAAIwH,KAEf,MAAfquB,GAAoC,MAAbiM,IACzBjM,EAAciM,EAAUrI,uBAAuBjyB,MAGjD,IAAI2wB,EAAS,GACTnjB,EAAYvN,EAAa6sB,EAAU5sB,MACnCs9B,EAAiB1Q,EAAU9E,kBAAkBxa,GAC7CmG,EAAY2pB,EAAc9W,SAAShuB,IAAIgV,GAE3C,GAAImG,GAAa6pB,EAAgB,CAC/B,IAAIC,EAAmBpP,EAAcA,EAAY9gB,kBAAkBC,GAAa,KAC5EkwB,EAAmB3Q,EAAYpqB,MAAM6K,GACzCmjB,EAASA,EAAO+B,OAAO36B,KAAKslC,sBAAsBG,EAAgB7pB,EAAW8pB,EAAkBC,IAOjG,OAJIpD,IACF3J,EAASA,EAAO+B,OAAO4H,EAAU1N,eAAeE,EAAWC,EAAasB,KAGnEsC,GAQX+H,EAASzgC,UAAUslC,iCAAmC,SAAUzQ,EAAWwQ,EAAejP,EAAatB,GACrG,IAAI3X,EAAQrd,KAERuiC,EAAYgD,EAAc9kC,IAAIwH,KAEf,MAAfquB,GAAoC,MAAbiM,IACzBjM,EAAciM,EAAUrI,uBAAuBjyB,MAGjD,IAAI2wB,EAAS,GAeb,OAdA2M,EAAc9W,SAAS9V,kBAAiB,SAAUlD,EAAWmG,GAC3D,IAAI8pB,EAAmBpP,EAAcA,EAAY9gB,kBAAkBC,GAAa,KAC5EkwB,EAAmB3Q,EAAYpqB,MAAM6K,GACrCgwB,EAAiB1Q,EAAU9E,kBAAkBxa,GAE7CgwB,IACF7M,EAASA,EAAO+B,OAAOtd,EAAMmoB,iCAAiCC,EAAgB7pB,EAAW8pB,EAAkBC,QAI3GpD,IACF3J,EAASA,EAAO+B,OAAO4H,EAAU1N,eAAeE,EAAWC,EAAasB,KAGnEsC,GAOT+H,EAAS0E,cAAgB,EAClB1E,EA1pBT,GAkrBIiF,GAEJ,WACE,SAASA,IACP5lC,KAAK6lC,UAAYjoB,GAAaxI,WAWhC,OARAwwB,EAAe1lC,UAAUqyB,QAAU,SAAUpqB,GAC3C,OAAOnI,KAAK6lC,UAAUnwB,SAASvN,IAGjCy9B,EAAe1lC,UAAU4lC,eAAiB,SAAU39B,EAAM49B,GACxD/lC,KAAK6lC,UAAY7lC,KAAK6lC,UAAU7vB,YAAY7N,EAAM49B,IAG7CH,EAbT,GAqCII,GAEJ,WACE,SAASA,IACPhmC,KAAKimC,UAAY,GAmBnB,OAhBAD,EAAgB9lC,UAAUgmC,iBAAmB,SAAUrlC,EAAMslC,QAC5C,IAAXA,IACFA,EAAS,GAGN,YAASnmC,KAAKimC,UAAWplC,KAC5Bb,KAAKimC,UAAUplC,GAAQ,GAGzBb,KAAKimC,UAAUplC,IAASslC,GAG1BH,EAAgB9lC,UAAUO,IAAM,WAC9B,OAAO,YAAST,KAAKimC,YAGhBD,EArBT,GAyCII,GAEJ,WACE,SAASA,KAwBT,OAtBAA,EAAaC,cAAgB,SAAU/4B,GACrC,IAAIg5B,EAAah5B,EAASxM,WAM1B,OAJKd,KAAKumC,aAAaD,KACrBtmC,KAAKumC,aAAaD,GAAc,IAAIN,IAG/BhmC,KAAKumC,aAAaD,IAG3BF,EAAaI,oBAAsB,SAAUl5B,EAAUm5B,GACrD,IAAIH,EAAah5B,EAASxM,WAM1B,OAJKd,KAAK0mC,WAAWJ,KACnBtmC,KAAK0mC,WAAWJ,GAAcG,KAGzBzmC,KAAK0mC,WAAWJ,IAGzBF,EAAaG,aAAe,GAC5BH,EAAaM,WAAa,GACnBN,EAzBT,GAmDIO,GAEJ,WACE,SAASA,EAAcC,GACrB5mC,KAAK4mC,YAAcA,EACnB5mC,KAAK6mC,MAAQ,KAkBf,OAfAF,EAAczmC,UAAUO,IAAM,WAC5B,IAAIqmC,EAAW9mC,KAAK4mC,YAAYnmC,MAE5ButB,EAAQ,YAAS,GAAI8Y,GASzB,OAPI9mC,KAAK6mC,OACPthC,EAAKvF,KAAK6mC,OAAO,SAAUE,EAAM1mC,GAC/B2tB,EAAM+Y,GAAQ/Y,EAAM+Y,GAAQ1mC,KAIhCL,KAAK6mC,MAAQC,EACN9Y,GAGF2Y,EArBT,GAiDIK,GAEJ,WAKE,SAASA,EAAcC,EAAYC,GACjClnC,KAAKknC,QAAUA,EACflnC,KAAKmnC,eAAiB,GACtBnnC,KAAKonC,eAAiB,IAAIT,GAAcM,GACxC,IAAIz/B,EAhBmB,IAgBc,IAAgDxB,KAAK2M,SAC1FrL,EAAsBtH,KAAKqnC,aAAahkC,KAAKrD,MAAOgG,KAAKI,MAAMoB,IA4BjE,OAzBAw/B,EAAc9mC,UAAUonC,YAAc,SAAUP,GAC9C/mC,KAAKmnC,eAAeJ,IAAQ,GAG9BC,EAAc9mC,UAAUmnC,aAAe,WACrC,IAAIhqB,EAAQrd,KAERunC,EAAQvnC,KAAKonC,eAAe3mC,MAC5B+mC,EAAgB,GAChBC,GAAoB,EACxBliC,EAAKgiC,GAAO,SAAUR,EAAM1mC,GACtBA,EAAQ,GAAK,YAASgd,EAAM8pB,eAAgBJ,KAC9CS,EAAcT,GAAQ1mC,EACtBonC,GAAoB,MAIpBA,GACFznC,KAAKknC,QAAQQ,YAAYF,GAI3BlgC,EAAsBtH,KAAKqnC,aAAahkC,KAAKrD,MAAOgG,KAAKI,MAAsB,EAAhBJ,KAAK2M,SAvC5C,OA0CnBq0B,EAtCT,GAwEIW,GAGF,WACE3nC,KAAK4nC,YAAc,GAKnB5nC,KAAK6nC,gBAAkB,GAU3B,SAASC,GAAsBC,EAAYC,GAIzC,IAFA,IAAIC,EAAW,KAENzlC,EAAI,EAAGA,EAAIwlC,EAAc1lC,OAAQE,IAAK,CAC7C,IAAIqB,EAAOmkC,EAAcxlC,GACrB2F,EAAOtE,EAAKke,UAEC,OAAbkmB,GAAsBn+B,EAAW3B,EAAM8/B,EAAS9/B,QAClD4/B,EAAWH,YAAY7iC,KAAKkjC,GAC5BA,EAAW,MAGI,OAAbA,IACFA,EAAW,CACTrP,OAAQ,GACRzwB,KAAMA,IAIV8/B,EAASrP,OAAO7zB,KAAKlB,GAGnBokC,GACFF,EAAWH,YAAY7iC,KAAKkjC,GAchC,SAASC,GAA4BH,EAAY5/B,EAAM6/B,GACrDF,GAAsBC,EAAYC,GAClCG,GAA6CJ,GAAY,SAAUK,GACjE,OAAOt+B,EAAWs+B,EAAWjgC,MAcjC,SAASkgC,GAAoCN,EAAYO,EAAaN,GACpEF,GAAsBC,EAAYC,GAClCG,GAA6CJ,GAAY,SAAUK,GACjE,OAAOn+B,GAAam+B,EAAWE,IAAgBr+B,GAAaq+B,EAAaF,MAI7E,SAASD,GAA6CJ,EAAYxX,GAChEwX,EAAWF,kBAGX,IAFA,IAAIU,GAAU,EAEL/lC,EAAI,EAAGA,EAAIulC,EAAWH,YAAYtlC,OAAQE,IAAK,CACtD,IAAIgmC,EAAYT,EAAWH,YAAYplC,GAEvC,GAAIgmC,EAGEjY,EAFYiY,EAAUrgC,OAGxBsgC,GAAeV,EAAWH,YAAYplC,IACtCulC,EAAWH,YAAYplC,GAAK,MAE5B+lC,GAAU,EAKZA,IACFR,EAAWH,YAAc,IAG3BG,EAAWF,kBAOb,SAASY,GAAeD,GACtB,IAAK,IAAIhmC,EAAI,EAAGA,EAAIgmC,EAAU5P,OAAOt2B,OAAQE,IAAK,CAChD,IAAIugB,EAAYylB,EAAU5P,OAAOp2B,GAEjC,GAAkB,OAAdugB,EAAoB,CACtBylB,EAAU5P,OAAOp2B,GAAK,KACtB,IAAIkmC,EAAU3lB,EAAUZ,iBAEpBtf,GACFO,EAAI,UAAY2f,EAAUjiB,YAG5BqG,EAAeuhC,KA2BrB,IAAIC,GAEJ,WACE,SAASA,EAAaC,GACpB5oC,KAAK4oC,eAAiBA,EACtB5oC,KAAK6oC,WAAa,GAClB,YAAOnmC,MAAMC,QAAQimC,IAAmBA,EAAetmC,OAAS,EAAG,8BAwDrE,OAjDAqmC,EAAazoC,UAAU4oC,QAAU,SAAUn4B,GAGzC,IAFA,IAAIxO,EAAU,GAELC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCD,EAAQC,EAAK,GAAKC,UAAUD,GAG9B,GAAIM,MAAMC,QAAQ3C,KAAK6oC,WAAWl4B,IAIhC,IAFA,IAAIo4B,EAAY,YAAS/oC,KAAK6oC,WAAWl4B,IAEhCnO,EAAI,EAAGA,EAAIumC,EAAUzmC,OAAQE,IACpCumC,EAAUvmC,GAAG4nB,SAASxnB,MAAMmmC,EAAUvmC,GAAG8nB,QAASnoB,IAKxDwmC,EAAazoC,UAAUiqB,GAAK,SAAUxZ,EAAWyZ,EAAUE,GACzDtqB,KAAKgpC,mBAAmBr4B,GACxB3Q,KAAK6oC,WAAWl4B,GAAa3Q,KAAK6oC,WAAWl4B,IAAc,GAC3D3Q,KAAK6oC,WAAWl4B,GAAW5L,KAAK,CAC9BqlB,SAAUA,EACVE,QAASA,IAEX,IAAIvH,EAAY/iB,KAAKipC,gBAAgBt4B,GAEjCoS,GACFqH,EAASxnB,MAAM0nB,EAASvH,IAI5B4lB,EAAazoC,UAAU6qB,IAAM,SAAUpa,EAAWyZ,EAAUE,GAC1DtqB,KAAKgpC,mBAAmBr4B,GAGxB,IAFA,IAAIo4B,EAAY/oC,KAAK6oC,WAAWl4B,IAAc,GAErCnO,EAAI,EAAGA,EAAIumC,EAAUzmC,OAAQE,IACpC,GAAIumC,EAAUvmC,GAAG4nB,WAAaA,KAAcE,GAAWA,IAAYye,EAAUvmC,GAAG8nB,SAE9E,YADAye,EAAU/J,OAAOx8B,EAAG,IAM1BmmC,EAAazoC,UAAU8oC,mBAAqB,SAAUr4B,GACpD,YAAO3Q,KAAK4oC,eAAeja,MAAK,SAAUua,GACxC,OAAOA,IAAOv4B,KACZ,kBAAoBA,IAGnBg4B,EA5DT,GAgFIQ,GAEJ,SAAUl1B,GAGR,SAASk1B,IACP,IAEIC,EACAC,EAHAhsB,EAAQpJ,EAAOlF,KAAK/O,KAAM,CAAC,aAAeA,KAwC9C,MAnCwB,oBAAbspC,eAAiE,IAA9BA,SAASC,wBACnB,IAAvBD,SAAiB,QAE1BD,EAAmB,mBACnBD,EAAS,eACiC,IAA1BE,SAAoB,WACpCD,EAAmB,sBACnBD,EAAS,kBACgC,IAAzBE,SAAmB,UACnCD,EAAmB,qBACnBD,EAAS,iBACoC,IAA7BE,SAAuB,eACvCD,EAAmB,yBACnBD,EAAS,iBAQb/rB,EAAMmsB,UAAW,EAEbH,GACFC,SAASC,iBAAiBF,GAAkB,WAC1C,IAAI5K,GAAW6K,SAASF,GAEpB3K,IAAYphB,EAAMmsB,WACpBnsB,EAAMmsB,SAAW/K,EAEjBphB,EAAMyrB,QAAQ,UAAWrK,OAE1B,GAGEphB,EAYT,OAvDA,YAAU8rB,EAAmBl1B,GA8C7Bk1B,EAAkBM,YAAc,WAC9B,OAAO,IAAIN,GAGbA,EAAkBjpC,UAAU+oC,gBAAkB,SAAUt4B,GAEtD,OADA,YAAqB,YAAdA,EAAyB,uBAAyBA,GAClD,CAAC3Q,KAAKwpC,WAGRL,EAxDT,CAyDER,IA2BEe,GAEJ,SAAUz1B,GAGR,SAASy1B,IACP,IAAIrsB,EAAQpJ,EAAOlF,KAAK/O,KAAM,CAAC,YAAcA,KAwB7C,OAtBAqd,EAAMssB,SAAU,EAKM,oBAAXvoC,aAA6D,IAA5BA,OAAOmoC,kBAAqC,gBACtFnoC,OAAOmoC,iBAAiB,UAAU,WAC3BlsB,EAAMssB,UACTtsB,EAAMssB,SAAU,EAEhBtsB,EAAMyrB,QAAQ,UAAU,OAEzB,GACH1nC,OAAOmoC,iBAAiB,WAAW,WAC7BlsB,EAAMssB,UACRtsB,EAAMssB,SAAU,EAEhBtsB,EAAMyrB,QAAQ,UAAU,OAEzB,IAGEzrB,EAgBT,OA3CA,YAAUqsB,EAAez1B,GA8BzBy1B,EAAcD,YAAc,WAC1B,OAAO,IAAIC,GAGbA,EAAcxpC,UAAU+oC,gBAAkB,SAAUt4B,GAElD,OADA,YAAqB,WAAdA,EAAwB,uBAAyBA,GACjD,CAAC3Q,KAAK2pC,UAGfD,EAAcxpC,UAAU0pC,gBAAkB,WACxC,OAAO5pC,KAAK2pC,SAGPD,EA5CT,CA6CEf,IAwBEkB,GAEJ,WAIE,SAASA,EAAeC,GACtB9pC,KAAK8pC,WAAaA,EAClB9pC,KAAK+pC,iBAAmB,GACxB/pC,KAAKgqC,mBAAqB,EAC1BhqC,KAAKiqC,oBAAsB,EAC3BjqC,KAAKkqC,QAAU,KA6DjB,OA1DAL,EAAe3pC,UAAUiqC,WAAa,SAAUC,EAAahgB,GAC3DpqB,KAAKiqC,mBAAqBG,EAC1BpqC,KAAKkqC,QAAU9f,EAEXpqB,KAAKiqC,mBAAqBjqC,KAAKgqC,qBACjChqC,KAAKkqC,UACLlqC,KAAKkqC,QAAU,OAUnBL,EAAe3pC,UAAUmqC,eAAiB,SAAUC,EAAYzmC,GAC9D,IAAIwZ,EAAQrd,KAEZA,KAAK+pC,iBAAiBO,GAAczmC,EAgCpC,IA9BA,IAAI0mC,EAAU,WACZ,IAAIC,EAAYC,EAAOV,iBAAiBU,EAAOT,2BACxCS,EAAOV,iBAAiBU,EAAOT,oBAUtC,IARA,IAAIU,EAAU,SAAiBloC,GACzBgoC,EAAUhoC,IACZ2E,GAAe,WACbkW,EAAMysB,WAAWU,EAAUhoC,QAKxBA,EAAI,EAAGA,EAAIgoC,EAAUloC,SAAUE,EACtCkoC,EAAQloC,GAGV,GAAIioC,EAAOT,qBAAuBS,EAAOR,mBAMvC,OALIQ,EAAOP,UACTO,EAAOP,UACPO,EAAOP,QAAU,MAGZ,QAGTO,EAAOT,sBAGLS,EAASzqC,KAENA,KAAK+pC,iBAAiB/pC,KAAKgqC,qBAAqB,CAGrD,GAAgB,UAFFO,IAEW,QAItBV,EAtET,GA8HIc,GAEJ,WAUE,SAASA,EAAsBC,EAAQt9B,EAAUu9B,EAAeC,EAAoBC,GAClF/qC,KAAK4qC,OAASA,EACd5qC,KAAKsN,SAAWA,EAChBtN,KAAK6qC,cAAgBA,EACrB7qC,KAAK8qC,mBAAqBA,EAC1B9qC,KAAK+qC,cAAgBA,EACrB/qC,KAAKgrC,UAAY,EACjBhrC,KAAKirC,cAAgB,EACrBjrC,KAAKkrC,gBAAiB,EACtBlrC,KAAKmrC,KAAO7nC,EAAWsnC,GACvB5qC,KAAKorC,OAAShF,GAAaC,cAAc/4B,GAEzCtN,KAAKqrC,MAAQ,SAAU/+B,GACrB,OAAOgB,EAASlB,cA18TH,eA08T+BE,IA4RhD,OAnRAq+B,EAAsBzqC,UAAUorC,KAAO,SAAUC,EAAWC,GAC1D,IAAInuB,EAAQrd,KAEZA,KAAKyrC,cAAgB,EACrBzrC,KAAK0rC,cAAgBF,EACrBxrC,KAAK2rC,gBAAkB,IAAI9B,GAAe0B,GAC1CvrC,KAAK4rC,WAAY,EACjB5rC,KAAK6rC,qBAAuBzkC,YAAW,WACrCiW,EAAM8tB,KAAK,gCAGX9tB,EAAMyuB,YAENzuB,EAAMwuB,qBAAuB,OAC5B7lC,KAAKI,MArDa,MArqVC,SAA6BZ,GACrD,GAAI,eAAuC,aAAxB8jC,SAASyC,WAC1BvmC,QACK,CAGL,IAAIwmC,GAAW,EAEXC,EAAc,SAASA,IACpB3C,SAAS4C,KAKTF,IACHA,GAAW,EACXxmC,KANA4B,WAAW6kC,EAAajmC,KAAKI,MAAM,MAUnCkjC,SAASC,kBACXD,SAASC,iBAAiB,mBAAoB0C,GAAa,GAE3D7qC,OAAOmoC,iBAAiB,OAAQ0C,GAAa,IACpC3C,SAAS6C,cAGlB7C,SAAS6C,YAAY,sBAAsB,WACb,aAAxB7C,SAASyC,YACXE,OAKJ7qC,OAAO+qC,YAAY,SAAUF,KA0rV/BG,EAAoB,WAClB,IAAI/uB,EAAMuuB,UAAV,CAKAvuB,EAAMgvB,gBAAkB,IAAIC,IAA2B,WAGrD,IAFA,IAAIC,EAAO,GAEFnqC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCmqC,EAAKnqC,GAAMC,UAAUD,GAGvB,IAAIgM,EAAK,YAAOm+B,EAAM,GAClBC,EAAUp+B,EAAG,GACbq+B,EAAOr+B,EAAG,GACVs+B,EAAOt+B,EAAG,GACHA,EAAG,GACHA,EAAG,GAId,GAFAiP,EAAMsvB,wBAAwBJ,GAEzBlvB,EAAMgvB,gBAWX,GAPIhvB,EAAMwuB,uBACRe,aAAavvB,EAAMwuB,sBACnBxuB,EAAMwuB,qBAAuB,MAG/BxuB,EAAM6tB,gBAAiB,EApHK,UAsHxBsB,EACFnvB,EAAMxd,GAAK4sC,EACXpvB,EAAMwvB,SAAWH,MACZ,IAxHuB,UAwHnBF,EAeT,MAAM,IAAI9oC,MAAM,kCAAoC8oC,GAbhDC,GAGFpvB,EAAMgvB,gBAAgBS,cAAe,EAGrCzvB,EAAMsuB,gBAAgBxB,WAAWsC,GAAM,WACrCpvB,EAAMyuB,gBAGRzuB,EAAMyuB,gBAKT,WAGD,IAFA,IAAIS,EAAO,GAEFnqC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCmqC,EAAKnqC,GAAMC,UAAUD,GAGvB,IAAIgM,EAAK,YAAOm+B,EAAM,GAClBQ,EAAK3+B,EAAG,GACRvK,EAAOuK,EAAG,GAEdiP,EAAMsvB,wBAAwBJ,GAE9BlvB,EAAMsuB,gBAAgBtB,eAAe0C,EAAIlpC,MACxC,WACDwZ,EAAMyuB,cACLzuB,EAAMguB,OAGT,IAAI2B,EAAY,CAChB,MAA2C,KAC3CA,EAAwC,IAAIhnC,KAAKI,MAAsB,IAAhBJ,KAAK2M,UAExD0K,EAAMgvB,gBAAgBY,2BACxBD,EAA6C,GAAI3vB,EAAMgvB,gBAAgBY,0BAGzED,EAAuB,EA9jUN,IAgkUb3vB,EAAMytB,qBACRkC,EAAiC,EAAI3vB,EAAMytB,oBAGzCztB,EAAM0tB,gBACRiC,EAA4B,GAAI3vB,EAAM0tB,eAGpC1tB,EAAMwtB,gBACRmC,EAA8B,EAAI3vB,EAAMwtB,eAGlB,oBAAbz9B,UAA4BA,SAAS8/B,UAAYhiC,GAAgBjE,KAAKmG,SAAS8/B,YACxFF,EAAuB,EAzkUf,KA4kUV,IAAIG,EAAa9vB,EAAMguB,MAAM2B,GAE7B3vB,EAAM8tB,KAAK,+BAAiCgC,GAE5C9vB,EAAMgvB,gBAAgBe,OAAOD,GAAY,oBAU7CxC,EAAsBzqC,UAAUmtC,MAAQ,WACtCrtC,KAAKqsC,gBAAgBiB,cAActtC,KAAKH,GAAIG,KAAK6sC,UACjD7sC,KAAKutC,uBAAuBvtC,KAAKH,GAAIG,KAAK6sC,WAO5ClC,EAAsB6C,WAAa,WACjC7C,EAAsB8C,aAAc,GAOtC9C,EAAsB+C,cAAgB,WACpC/C,EAAsBgD,gBAAiB,GAIzChD,EAAsBiD,YAAc,WAClC,OAAI,kBAEOjD,EAAsB8C,eAKvB9C,EAAsBgD,gBAAsC,oBAAbrE,UAAsD,MAA1BA,SAASuE,eAlnVpE,iBAAXzsC,QAAuBA,OAAe,QAAKA,OAAe,OAAa,YAAM,UAAU6F,KAAK7F,OAAOgM,SAAS0gC,OASnG,iBAAZC,SAA8C,iBAAfA,QAAQC,MAinVrDrD,EAAsBzqC,UAAU+tC,sBAAwB,aAMxDtD,EAAsBzqC,UAAUguC,UAAY,WAC1CluC,KAAK4rC,WAAY,EAEb5rC,KAAKqsC,kBACPrsC,KAAKqsC,gBAAgB8B,QACrBnuC,KAAKqsC,gBAAkB,MAIrBrsC,KAAKouC,iBACP9E,SAAS4C,KAAKmC,YAAYruC,KAAKouC,gBAC/BpuC,KAAKouC,eAAiB,MAGpBpuC,KAAK6rC,uBACPe,aAAa5sC,KAAK6rC,sBAClB7rC,KAAK6rC,qBAAuB,OAQhClB,EAAsBzqC,UAAU4rC,UAAY,WACrC9rC,KAAK4rC,YACR5rC,KAAKmrC,KAAK,8BACVnrC,KAAKkuC,YAEDluC,KAAK0rC,gBACP1rC,KAAK0rC,cAAc1rC,KAAKkrC,gBACxBlrC,KAAK0rC,cAAgB,QAU3Bf,EAAsBzqC,UAAUiuC,MAAQ,WACjCnuC,KAAK4rC,YACR5rC,KAAKmrC,KAAK,6BACVnrC,KAAKkuC,cAUTvD,EAAsBzqC,UAAUouC,KAAO,SAAUzqC,GAC/C,IAAI0qC,EAAU,YAAU1qC,GACxB7D,KAAKgrC,WAAauD,EAAQjsC,OAC1BtC,KAAKorC,OAAOlF,iBAAiB,aAAcqI,EAAQjsC,QAQnD,IANA,IAAIksC,EAAa,YAAaD,GAG1BnpC,EAAWH,EAAkBupC,EA7RdC,MAgSVjsC,EAAI,EAAGA,EAAI4C,EAAS9C,OAAQE,IACnCxC,KAAKqsC,gBAAgBqC,eAAe1uC,KAAKyrC,cAAermC,EAAS9C,OAAQ8C,EAAS5C,IAClFxC,KAAKyrC,iBAUTd,EAAsBzqC,UAAUqtC,uBAAyB,SAAU1tC,EAAI8uC,GACrE,IAAI,cAAJ,CAIA3uC,KAAKouC,eAAiB9E,SAASuE,cAAc,UAC7C,IAAIb,EAAY,CAChB,OAA2D,KAC3DA,EAAoC,GAAIntC,EACxCmtC,EAAoC,GAAI2B,EACxC3uC,KAAKouC,eAAeQ,IAAM5uC,KAAKqrC,MAAM2B,GACrChtC,KAAKouC,eAAeS,MAAMC,QAAU,OACpCxF,SAAS4C,KAAK6C,YAAY/uC,KAAKouC,kBAOjCzD,EAAsBzqC,UAAUysC,wBAA0B,SAAUJ,GAElE,IAAItB,EAAgB,YAAUsB,GAAMjqC,OACpCtC,KAAKirC,eAAiBA,EACtBjrC,KAAKorC,OAAOlF,iBAAiB,iBAAkB+E,IAG1CN,EAnTT,GA0TI2B,GAEJ,WAOE,SAASA,EAA2B0C,EAAWC,EAAazD,EAAcH,GAkBxE,GAjBArrC,KAAKwrC,aAAeA,EACpBxrC,KAAKqrC,MAAQA,EAGbrrC,KAAKkvC,oBAAsB,IAAIC,IAE/BnvC,KAAKovC,YAAc,GAMnBpvC,KAAKqvC,cAAgBrpC,KAAKI,MAAsB,IAAhBJ,KAAK2M,UAGrC3S,KAAK8sC,cAAe,EAEf,cAmCH9sC,KAAKgvC,UAAYA,EACjBhvC,KAAKivC,YAAcA,MApCH,CAKhBjvC,KAAKitC,yBAA2BvrC,IAChCN,OA9XkC,aA8XSpB,KAAKitC,0BAA4B+B,EAC5E5tC,OA9X+B,UA8XSpB,KAAKitC,0BAA4BgC,EAEzEjvC,KAAKsvC,SAAWhD,EAA2BiD,gBAE3C,IAAIC,EAAS,GAGb,GAAIxvC,KAAKsvC,SAASV,KAA6D,gBAAtD5uC,KAAKsvC,SAASV,IAAI/nC,OAAO,EAAG,cAAcvE,QAEjEktC,EAAS,4BADWlG,SAAS39B,OAC0B,eAGzD,IAAI8jC,EAAiB,eAAiBD,EAAS,iBAE/C,IACExvC,KAAKsvC,SAASI,IAAIpE,OAClBtrC,KAAKsvC,SAASI,IAAI/P,MAAM8P,GACxBzvC,KAAKsvC,SAASI,IAAIvB,QAClB,MAAO7sC,GACP8B,EAAI,2BAEA9B,EAAE+F,OACJjE,EAAI9B,EAAE+F,OAGRjE,EAAI9B,KA+PV,OAlPAgrC,EAA2BiD,cAAgB,WACzC,IAAII,EAASrG,SAASuE,cAAc,UAGpC,GAFA8B,EAAOd,MAAMC,QAAU,QAEnBxF,SAAS4C,KAoBX,KAAM,oGAnBN5C,SAAS4C,KAAK6C,YAAYY,GAE1B,IAIUA,EAAOC,cAActG,UAI3BlmC,EAAI,iCAEN,MAAO9B,GACP,IAAIqK,EAAS29B,SAAS39B,OACtBgkC,EAAOf,IAAM,gEAAkEjjC,EAAS,2BAmB5F,OAVIgkC,EAAOE,gBACTF,EAAOD,IAAMC,EAAOE,gBACXF,EAAOC,cAChBD,EAAOD,IAAMC,EAAOC,cAActG,SAEzBqG,EAAOrG,WAEhBqG,EAAOD,IAAMC,EAAOrG,UAGfqG,GAOTrD,EAA2BpsC,UAAUiuC,MAAQ,WAC3C,IAAI9wB,EAAQrd,KAGZA,KAAK8vC,OAAQ,EAET9vC,KAAKsvC,WAIPtvC,KAAKsvC,SAASI,IAAIxD,KAAK6D,UAAY,GACnC3oC,YAAW,WACc,OAAnBiW,EAAMiyB,WACRhG,SAAS4C,KAAKmC,YAAYhxB,EAAMiyB,UAChCjyB,EAAMiyB,SAAW,QAElBtpC,KAAKI,MAAM,KAIhB,IAAIolC,EAAexrC,KAAKwrC,aAEpBA,IACFxrC,KAAKwrC,aAAe,KACpBA,MAUJc,EAA2BpsC,UAAUotC,cAAgB,SAAUztC,EAAI8uC,GAKjE,IAJA3uC,KAAKgwC,KAAOnwC,EACZG,KAAKiwC,KAAOtB,EACZ3uC,KAAK8vC,OAAQ,EAEN9vC,KAAKkwC,kBAWd5D,EAA2BpsC,UAAUgwC,YAAc,WAIjD,GAAIlwC,KAAK8vC,OAAS9vC,KAAK8sC,cAAgB9sC,KAAKkvC,oBAAoBtgB,MAAQ5uB,KAAKovC,YAAY9sC,OAAS,EAAI,EAAI,GAAI,CAE5GtC,KAAKqvC,gBACL,IAAIrC,EAAY,GAChBA,EAAoC,GAAIhtC,KAAKgwC,KAC7ChD,EAAoC,GAAIhtC,KAAKiwC,KAC7CjD,EAAwC,IAAIhtC,KAAKqvC,cAMjD,IALA,IAAIc,EAASnwC,KAAKqrC,MAAM2B,GAEpBoD,EAAgB,GAChB5tC,EAAI,EAEDxC,KAAKovC,YAAY9sC,OAAS,GAAG,CAIlC,KAFctC,KAAKovC,YAAY,GAEnBiB,EAAE/tC,OA1gBA,GA0gB2B8tC,EAAc9tC,QA3gBvC,MAihBd,MAJA,IAAIguC,EAAStwC,KAAKovC,YAAYmB,QAC9BH,EAAgBA,SAA4D5tC,EAAI,IAAM8tC,EAAOE,IAA7EJ,MAAgI5tC,EAAI,IAAM8tC,EAAOG,GAAjJL,KAA2L5tC,EAAI,IAAM8tC,EAAOD,EAC5N7tC,IAQJ,OAFA2tC,GAAkBC,EAClBpwC,KAAK0wC,gBAAgBP,EAAQnwC,KAAKqvC,gBAC3B,EAEP,OAAO,GAWX/C,EAA2BpsC,UAAUwuC,eAAiB,SAAUiC,EAAQC,EAAW/sC,GAEjF7D,KAAKovC,YAAYrqC,KAAK,CACpByrC,IAAKG,EACLF,GAAIG,EACJP,EAAGxsC,IAID7D,KAAK8vC,OACP9vC,KAAKkwC,eAUT5D,EAA2BpsC,UAAUwwC,gBAAkB,SAAUG,EAAKC,GACpE,IAAIzzB,EAAQrd,KAGZA,KAAKkvC,oBAAoB6B,IAAID,GAE7B,IAAIE,EAAe,WACjB3zB,EAAM6xB,oBAAoB/f,OAAO2hB,GAEjCzzB,EAAM6yB,eAKJe,EAAmB7pC,WAAW4pC,EAAchrC,KAAKI,MA5jBxB,OAqkB7BpG,KAAKotC,OAAOyD,GAPO,WAEjBjE,aAAaqE,GAEbD,QAYJ1E,EAA2BpsC,UAAUktC,OAAS,SAAUyD,EAAKK,GAC3D,IAAI7zB,EAAQrd,KAER,cAEFA,KAAKmxC,eAAeN,EAAKK,GAEzB9pC,YAAW,WACT,IAEE,IAAKiW,EAAMyvB,aACT,OAGF,IAAIsE,EAAc/zB,EAAMiyB,SAASI,IAAI7B,cAAc,UAEnDuD,EAAY/kC,KAAO,kBACnB+kC,EAAYC,OAAQ,EACpBD,EAAYxC,IAAMiC,EAElBO,EAAYE,OAASF,EAAYG,mBAAqB,WAEpD,IAAIC,EAASJ,EAAYrF,WAEpByF,GAAqB,WAAXA,GAAkC,aAAXA,IAEpCJ,EAAYE,OAASF,EAAYG,mBAAqB,KAElDH,EAAYK,YACdL,EAAYK,WAAWpD,YAAY+C,GAGrCF,MAIJE,EAAYM,QAAU,WACpBtuC,EAAI,oCAAsCytC,GAC1CxzB,EAAMyvB,cAAe,EAErBzvB,EAAM8wB,SAGR9wB,EAAMiyB,SAASI,IAAIxD,KAAK6C,YAAYqC,GACpC,MAAO9vC,OAER0E,KAAKI,MAAM,KAIXkmC,EAxTT,GA8UIqF,GAAc,GAElB,SAASC,GAAcC,GACrBF,GAAcE,EAoBhB,IAEIC,GAAgB,KAEQ,oBAAjBC,aACTD,GAAgBC,aACc,oBAAdC,YAChBF,GAAgBE,WAOlB,IAokFIC,GApkFAC,GAEJ,WASE,SAASA,EAAoBtH,EAAQt9B,EAAUu9B,EAAeC,EAAoBC,GAChF/qC,KAAK4qC,OAASA,EACd5qC,KAAK6qC,cAAgBA,EACrB7qC,KAAKmyC,eAAiB,KACtBnyC,KAAKoyC,OAAS,KACdpyC,KAAKqyC,YAAc,EACnBryC,KAAKgrC,UAAY,EACjBhrC,KAAKirC,cAAgB,EACrBjrC,KAAKmrC,KAAO7nC,EAAWtD,KAAK4qC,QAC5B5qC,KAAKorC,OAAShF,GAAaC,cAAc/4B,GACzCtN,KAAKuM,QAAU2lC,EAAoBI,eAAehlC,EAAUw9B,EAAoBC,GAChF/qC,KAAKwL,UAAY8B,EAAS9B,UAoV5B,OAzUA0mC,EAAoBI,eAAiB,SAAUhlC,EAAUw9B,EAAoBC,GAC3E,IAAIiC,EAAY,CAChB,EAhpVmB,KA8pVnB,OAZK,eAAmC,oBAAb5/B,UAA4BA,SAAS8/B,UAAYhiC,GAAgBjE,KAAKmG,SAAS8/B,YACxGF,EAAuB,EA/oVb,KAkpVRlC,IACFkC,EAAiC,EAAIlC,GAGnCC,IACFiC,EAA4B,GAAIjC,GAG3Bz9B,EAASlB,cAppVJ,YAopV6B4gC,IAQ3CkF,EAAoBhyC,UAAUorC,KAAO,SAAUC,EAAWC,GACxD,IAAInuB,EAAQrd,KAEZA,KAAKwrC,aAAeA,EACpBxrC,KAAKurC,UAAYA,EACjBvrC,KAAKmrC,KAAK,2BAA6BnrC,KAAKuM,SAC5CvM,KAAKkrC,gBAAiB,EAEtB3pC,EAAkBpB,IAAI,8BAA8B,GAEpD,IACE,GAAI,cAAa,CACf,IAAIoyC,EAASvyC,KAAKwL,UAAY,YAAc,OAExCgnC,EAAU,CACZC,QAAS,CACP,aAAc,cAAuCd,GAAc,IAAMe,EAAQC,SAAW,IAAMJ,EAClG,mBAAoBvyC,KAAK6qC,eAAiB,KAI1C+H,EAAM,GACNC,EAA2C,IAAnC7yC,KAAKuM,QAAQX,QAAQ,UAAkBgnC,EAAiB,aAAKA,EAAiB,YAAIA,EAAgB,YAAKA,EAAgB,WAE/HC,IACFL,EAAe,MAAI,CACjBM,OAAQD,IAIZ7yC,KAAK+yC,OAAS,IAAIjB,GAAc9xC,KAAKuM,QAAS,GAAIimC,OAC7C,CACDA,EAAU,CACZC,QAAS,CACP,mBAAoBzyC,KAAK6qC,eAAiB,KAG9C7qC,KAAK+yC,OAAS,IAAIjB,GAAc9xC,KAAKuM,QAAS,GAAIimC,IAEpD,MAAOlxC,GACPtB,KAAKmrC,KAAK,kCACV,IAAI3nC,EAAQlC,EAAEiB,SAAWjB,EAAEuC,KAO3B,OALIL,GACFxD,KAAKmrC,KAAK3nC,QAGZxD,KAAK8rC,YAIP9rC,KAAK+yC,OAAOC,OAAS,WACnB31B,EAAM8tB,KAAK,wBAEX9tB,EAAM6tB,gBAAiB,GAGzBlrC,KAAK+yC,OAAOE,QAAU,WACpB51B,EAAM8tB,KAAK,0CAEX9tB,EAAM01B,OAAS,KAEf11B,EAAMyuB,aAGR9rC,KAAK+yC,OAAOG,UAAY,SAAUC,GAChC91B,EAAM+1B,oBAAoBD,IAG5BnzC,KAAK+yC,OAAOrB,QAAU,SAAUpwC,GAC9B+b,EAAM8tB,KAAK,yCAGX,IAAI3nC,EAAQlC,EAAEiB,SAAWjB,EAAEuC,KAEvBL,GACF6Z,EAAM8tB,KAAK3nC,GAGb6Z,EAAMyuB,cAQVoG,EAAoBhyC,UAAUmtC,MAAQ,aAEtC6E,EAAoBxE,cAAgB,WAClCwE,EAAoBvE,gBAAiB,GAGvCuE,EAAoBtE,YAAc,WAChC,IAAIyF,GAAe,EAEnB,GAAyB,oBAAdC,WAA6BA,UAAUC,UAAW,CAC3D,IACIC,EAAkBF,UAAUC,UAAUE,MADpB,kCAGlBD,GAAmBA,EAAgBlxC,OAAS,GAC1CoxC,WAAWF,EAAgB,IAAM,MACnCH,GAAe,GAKrB,OAAQA,GAAkC,OAAlBvB,KAA2BI,EAAoBvE,gBAOzEuE,EAAoByB,iBAAmB,WAGrC,OAAOpyC,EAAkBN,oBAA6E,IAAxDM,EAAkBd,IAAI,+BAGtEyxC,EAAoBhyC,UAAU+tC,sBAAwB,WACpD1sC,EAAkBX,OAAO,+BAG3BsxC,EAAoBhyC,UAAU0zC,aAAe,SAAU/vC,GAGrD,GAFA7D,KAAKoyC,OAAOrtC,KAAKlB,GAEb7D,KAAKoyC,OAAO9vC,SAAWtC,KAAKqyC,YAAa,CAC3C,IAAIwB,EAAW7zC,KAAKoyC,OAAO3rC,KAAK,IAChCzG,KAAKoyC,OAAS,KACd,IAAI0B,EAAW,YAASD,GAExB7zC,KAAKurC,UAAUuI,KAQnB5B,EAAoBhyC,UAAU6zC,qBAAuB,SAAUC,GAC7Dh0C,KAAKqyC,YAAc2B,EACnBh0C,KAAKoyC,OAAS,IAQhBF,EAAoBhyC,UAAU+zC,mBAAqB,SAAUpwC,GAI3D,GAHA,YAAuB,OAAhB7D,KAAKoyC,OAAiB,kCAGzBvuC,EAAKvB,QAAU,EAAG,CACpB,IAAI0xC,EAAalwC,OAAOD,GAExB,IAAKqwC,MAAMF,GAET,OADAh0C,KAAK+zC,qBAAqBC,GACnB,KAKX,OADAh0C,KAAK+zC,qBAAqB,GACnBlwC,GAQTquC,EAAoBhyC,UAAUkzC,oBAAsB,SAAUe,GAC5D,GAAoB,OAAhBn0C,KAAK+yC,OAAT,CAIA,IAAIlvC,EAAOswC,EAAW,KAKtB,GAJAn0C,KAAKirC,eAAiBpnC,EAAKvB,OAC3BtC,KAAKorC,OAAOlF,iBAAiB,iBAAkBriC,EAAKvB,QACpDtC,KAAKo0C,iBAEe,OAAhBp0C,KAAKoyC,OAEPpyC,KAAK4zC,aAAa/vC,OACb,CAEL,IAAIwwC,EAAgBr0C,KAAKi0C,mBAAmBpwC,GAEtB,OAAlBwwC,GACFr0C,KAAK4zC,aAAaS,MAUxBnC,EAAoBhyC,UAAUouC,KAAO,SAAUzqC,GAC7C7D,KAAKo0C,iBACL,IAAI7F,EAAU,YAAU1qC,GACxB7D,KAAKgrC,WAAauD,EAAQjsC,OAC1BtC,KAAKorC,OAAOlF,iBAAiB,aAAcqI,EAAQjsC,QAGnD,IAAI8C,EAAWH,EAAkBspC,EAtRN,OAwRvBnpC,EAAS9C,OAAS,GACpBtC,KAAKs0C,YAAY7rC,OAAOrD,EAAS9C,SAInC,IAAK,IAAIE,EAAI,EAAGA,EAAI4C,EAAS9C,OAAQE,IACnCxC,KAAKs0C,YAAYlvC,EAAS5C,KAI9B0vC,EAAoBhyC,UAAUguC,UAAY,WACxCluC,KAAK4rC,WAAY,EAEb5rC,KAAKmyC,iBACPoC,cAAcv0C,KAAKmyC,gBACnBnyC,KAAKmyC,eAAiB,MAGpBnyC,KAAK+yC,SACP/yC,KAAK+yC,OAAO5E,QACZnuC,KAAK+yC,OAAS,OAIlBb,EAAoBhyC,UAAU4rC,UAAY,WACnC9rC,KAAK4rC,YACR5rC,KAAKmrC,KAAK,+BACVnrC,KAAKkuC,YAEDluC,KAAKwrC,eACPxrC,KAAKwrC,aAAaxrC,KAAKkrC,gBACvBlrC,KAAKwrC,aAAe,QAU1B0G,EAAoBhyC,UAAUiuC,MAAQ,WAC/BnuC,KAAK4rC,YACR5rC,KAAKmrC,KAAK,6BACVnrC,KAAKkuC,cASTgE,EAAoBhyC,UAAUk0C,eAAiB,WAC7C,IAAI/2B,EAAQrd,KAEZu0C,cAAcv0C,KAAKmyC,gBACnBnyC,KAAKmyC,eAAiBqC,aAAY,WAE5Bn3B,EAAM01B,QACR11B,EAAMi3B,YAAY,KAGpBj3B,EAAM+2B,mBAELpuC,KAAKI,MAxVuB,QAiWjC8rC,EAAoBhyC,UAAUo0C,YAAc,SAAU1yC,GAIpD,IACE5B,KAAK+yC,OAAOzE,KAAK1sC,GACjB,MAAON,GACPtB,KAAKmrC,KAAK,0CAA2C7pC,EAAEiB,SAAWjB,EAAEuC,KAAM,uBAC1EuD,WAAWpH,KAAK8rC,UAAUzoC,KAAKrD,MAAO,KAQ1CkyC,EAAoBuC,6BAA+B,EAKnDvC,EAAoBwC,eAAiB,IAC9BxC,EAxWT,GAoYIyC,GAEJ,WAIE,SAASA,EAAiBrnC,GACxBtN,KAAK40C,gBAAgBtnC,GA4EvB,OAzEA9C,OAAOC,eAAekqC,EAAkB,iBAAkB,CACxDl0C,IAAK,WACH,MAAO,CAACkqC,GAAuBuH,KAEjCxnC,YAAY,EACZC,cAAc,IAGhBgqC,EAAiBz0C,UAAU00C,gBAAkB,SAAUtnC,GACrD,IAAIa,EAAKC,EAELymC,EAAwB3C,IAAuBA,GAAiC,cAChF4C,EAAuBD,IAA0B3C,GAAoByB,mBAUzE,GARIrmC,EAAS/B,gBACNspC,GACHlxC,EAAK,mFAGPmxC,GAAuB,GAGrBA,EACF90C,KAAK+0C,YAAc,CAAC7C,QACf,CACL,IAAI8C,EAAah1C,KAAK+0C,YAAc,GAEpC,IACE,IAAK,IAAIxmC,EAAK,YAASomC,EAAiBM,gBAAiBzmC,EAAKD,EAAGE,QAASD,EAAGE,KAAMF,EAAKD,EAAGE,OAAQ,CACjG,IAAIymC,EAAY1mC,EAAGnO,MAEf60C,GAAaA,EAAuB,eACtCF,EAAWjwC,KAAKmwC,IAGpB,MAAOrmC,GACPV,EAAM,CACJ3K,MAAOqL,GAET,QACA,IACML,IAAOA,EAAGE,OAASN,EAAKG,EAAGO,SAASV,EAAGW,KAAKR,GAChD,QACA,GAAIJ,EAAK,MAAMA,EAAI3K,UAU3BmxC,EAAiBz0C,UAAUi1C,iBAAmB,WAC5C,GAAIn1C,KAAK+0C,YAAYzyC,OAAS,EAC5B,OAAOtC,KAAK+0C,YAAY,GAExB,MAAM,IAAIrxC,MAAM,4BAQpBixC,EAAiBz0C,UAAUk1C,iBAAmB,WAC5C,OAAIp1C,KAAK+0C,YAAYzyC,OAAS,EACrBtC,KAAK+0C,YAAY,GAEjB,MAIJJ,EAjFT,GA8HIU,GAEJ,WAWE,SAASA,EAAWx1C,EAAIy1C,EAAWC,EAAgBzL,EAAY0L,EAAU9J,EAAe+J,EAAS1K,GAC/F/qC,KAAKH,GAAKA,EACVG,KAAKs1C,UAAYA,EACjBt1C,KAAKu1C,eAAiBA,EACtBv1C,KAAK8pC,WAAaA,EAClB9pC,KAAKw1C,SAAWA,EAChBx1C,KAAK0rC,cAAgBA,EACrB1rC,KAAKy1C,QAAUA,EACfz1C,KAAK+qC,cAAgBA,EACrB/qC,KAAK01C,gBAAkB,EACvB11C,KAAK21C,oBAAsB,GAC3B31C,KAAK41C,OAAS,EAGd51C,KAAKmrC,KAAO7nC,EAAW,KAAOtD,KAAKH,GAAK,KACxCG,KAAK61C,kBAAoB,IAAIlB,GAAiBW,GAC9Ct1C,KAAKmrC,KAAK,sBACVnrC,KAAK81C,SAieP,OA1dAT,EAAWn1C,UAAU41C,OAAS,WAC5B,IAAIz4B,EAAQrd,KAER+1C,EAAO/1C,KAAK61C,kBAAkBV,mBAClCn1C,KAAKg2C,MAAQ,IAAID,EAAK/1C,KAAKi2C,mBAAoBj2C,KAAKs1C,UAAWt1C,KAAKu1C,oBAAgB1lC,EAAW7P,KAAK+qC,eAGpG/qC,KAAKk2C,0BAA4BH,EAAmC,8BAAK,EACzE,IAAII,EAAoBn2C,KAAKo2C,cAAcp2C,KAAKg2C,OAC5CK,EAAmBr2C,KAAKs2C,iBAAiBt2C,KAAKg2C,OAClDh2C,KAAKu2C,IAAMv2C,KAAKg2C,MAChBh2C,KAAKw2C,IAAMx2C,KAAKg2C,MAChBh2C,KAAKy2C,eAAiB,KACtBz2C,KAAK02C,YAAa,EAQlBtvC,YAAW,WAETiW,EAAM24B,OAAS34B,EAAM24B,MAAM1K,KAAK6K,EAAmBE,KAClDrwC,KAAKI,MAAM,IACd,IAAIuwC,EAAmBZ,EAAqB,gBAAK,EAE7CY,EAAmB,IACrB32C,KAAK42C,gBAAkBtvC,GAAsB,WAC3C+V,EAAMu5B,gBAAkB,KAEnBv5B,EAAMq5B,aACLr5B,EAAM24B,OAAS34B,EAAM24B,MAAM/K,cArFH,QAsF1B5tB,EAAM8tB,KAAK,wDAA0D9tB,EAAM24B,MAAM/K,cAAgB,wCAEjG5tB,EAAMq5B,YAAa,EAEnBr5B,EAAM24B,MAAM/H,yBACH5wB,EAAM24B,OAAS34B,EAAM24B,MAAMhL,UA5Fd,MA6FtB3tB,EAAM8tB,KAAK,oDAAsD9tB,EAAM24B,MAAMhL,UAAY,uCAIzF3tB,EAAM8tB,KAAK,+CAEX9tB,EAAM8wB,YAITnoC,KAAKI,MAAMuwC,MAIlBtB,EAAWn1C,UAAU+1C,iBAAmB,WACtC,MAAO,KAAOj2C,KAAKH,GAAK,IAAMG,KAAK01C,mBAGrCL,EAAWn1C,UAAUo2C,iBAAmB,SAAUP,GAChD,IAAI14B,EAAQrd,KAEZ,OAAO,SAAU62C,GACXd,IAAS14B,EAAM24B,MACjB34B,EAAMy5B,kBAAkBD,GACfd,IAAS14B,EAAMo5B,gBACxBp5B,EAAM8tB,KAAK,8BAEX9tB,EAAM05B,8BAEN15B,EAAM8tB,KAAK,+BAKjBkK,EAAWn1C,UAAUk2C,cAAgB,SAAUL,GAC7C,IAAI14B,EAAQrd,KAEZ,OAAO,SAAUuC,GACM,IAAjB8a,EAAMu4B,SAGFG,IAAS14B,EAAMm5B,IACjBn5B,EAAM25B,0BAA0Bz0C,GACvBwzC,IAAS14B,EAAMo5B,eACxBp5B,EAAM45B,4BAA4B10C,GAElC8a,EAAM8tB,KAAK,gCAUrBkK,EAAWn1C,UAAUg3C,YAAc,SAAUC,GAE3C,IAAIC,EAAM,CACRC,EAAG,IACHhH,EAAG8G,GAELn3C,KAAKs3C,UAAUF,IAGjB/B,EAAWn1C,UAAUq3C,qBAAuB,WACtCv3C,KAAKu2C,MAAQv2C,KAAKy2C,gBAAkBz2C,KAAKw2C,MAAQx2C,KAAKy2C,iBACxDz2C,KAAKmrC,KAAK,2CAA6CnrC,KAAKy2C,eAAe7L,QAC3E5qC,KAAKg2C,MAAQh2C,KAAKy2C,eAClBz2C,KAAKy2C,eAAiB,OAI1BpB,EAAWn1C,UAAUs3C,oBAAsB,SAAUC,GACnD,GArKe,MAqKKA,EAAa,CAC/B,IAAIC,EAAMD,EAAwB,EAhKvB,MAkKPC,EACF13C,KAAK23C,6BAtKO,MAuKHD,GAET13C,KAAKmrC,KAAK,wCACVnrC,KAAKy2C,eAAetI,QAEhBnuC,KAAKu2C,MAAQv2C,KAAKy2C,gBAAkBz2C,KAAKw2C,MAAQx2C,KAAKy2C,gBACxDz2C,KAAKmuC,SA3KI,MA6KFuJ,IACT13C,KAAKmrC,KAAK,0BACVnrC,KAAK43C,8BACL53C,KAAK23C,gCAKXtC,EAAWn1C,UAAU+2C,4BAA8B,SAAUY,GAC3D,IAAIC,EAAQpzC,EAAW,IAAKmzC,GACxBh0C,EAAOa,EAAW,IAAKmzC,GAE3B,GAAc,MAAVC,EACF93C,KAAKw3C,oBAAoB3zC,OACpB,IAAc,MAAVi0C,EAIT,MAAM,IAAIp0C,MAAM,2BAA6Bo0C,GAF7C93C,KAAK21C,oBAAoB5wC,KAAKlB,KAMlCwxC,EAAWn1C,UAAUy3C,2BAA6B,WAC5C33C,KAAK43C,6BAA+B,GACtC53C,KAAKmrC,KAAK,oCACVnrC,KAAK02C,YAAa,EAClB12C,KAAKy2C,eAAexI,wBACpBjuC,KAAK+3C,wBAGL/3C,KAAKmrC,KAAK,8BACVnrC,KAAKy2C,eAAenI,KAAK,CACvB+I,EAAG,IACHhH,EAAG,CACDgH,EA5MC,IA6MDhH,EAAG,QAMXgF,EAAWn1C,UAAU63C,oBAAsB,WAEzC/3C,KAAKy2C,eAAepJ,QAEpBrtC,KAAKmrC,KAAK,mCACVnrC,KAAKy2C,eAAenI,KAAK,CACvB+I,EAAG,IACHhH,EAAG,CACDgH,EA7NS,IA8NThH,EAAG,MAKPrwC,KAAKmrC,KAAK,kCACVnrC,KAAKg2C,MAAM1H,KAAK,CACd+I,EAAG,IACHhH,EAAG,CACDgH,EAtOe,IAuOfhH,EAAG,MAGPrwC,KAAKu2C,IAAMv2C,KAAKy2C,eAChBz2C,KAAKu3C,wBAGPlC,EAAWn1C,UAAU82C,0BAA4B,SAAUa,GAEzD,IAAIC,EAAQpzC,EAAW,IAAKmzC,GACxBh0C,EAAOa,EAAW,IAAKmzC,GAEb,MAAVC,EACF93C,KAAKg4C,WAAWn0C,GACG,MAAVi0C,GACT93C,KAAKi4C,eAAep0C,IAIxBwxC,EAAWn1C,UAAU+3C,eAAiB,SAAU11C,GAC9CvC,KAAKk4C,qBAELl4C,KAAK8pC,WAAWvnC,IAGlB8yC,EAAWn1C,UAAUg4C,mBAAqB,WACnCl4C,KAAK02C,aACR12C,KAAKk2C,4BAEDl2C,KAAKk2C,2BAA6B,IACpCl2C,KAAKmrC,KAAK,kCACVnrC,KAAK02C,YAAa,EAClB12C,KAAKg2C,MAAM/H,2BAKjBoH,EAAWn1C,UAAU83C,WAAa,SAAUP,GAC1C,IAAIC,EAAMhzC,EApRK,IAoRoB+yC,GAEnC,GArRe,MAqRKA,EAAa,CAC/B,IAAIU,EAAUV,EAAwB,EAEtC,GAhRa,MAgRTC,EACF13C,KAAKo4C,aAAaD,QACb,GApRU,MAoRNT,EAA0B,CACnC13C,KAAKmrC,KAAK,qCACVnrC,KAAKw2C,IAAMx2C,KAAKy2C,eAEhB,IAAK,IAAIj0C,EAAI,EAAGA,EAAIxC,KAAK21C,oBAAoBrzC,SAAUE,EACrDxC,KAAKi4C,eAAej4C,KAAK21C,oBAAoBnzC,IAG/CxC,KAAK21C,oBAAsB,GAC3B31C,KAAKu3C,2BAlSU,MAmSNG,EAGT13C,KAAKq4C,sBAAsBF,GArSf,MAsSHT,EAET13C,KAAKs4C,SAASH,GAvSF,MAwSHT,EACTl0C,EAAM,iBAAmB20C,GAxSd,MAySFT,GACT13C,KAAKmrC,KAAK,wBACVnrC,KAAKk4C,qBACLl4C,KAAKu4C,iCAEL/0C,EAAM,mCAAqCk0C,KASjDrC,EAAWn1C,UAAUk4C,aAAe,SAAUI,GAC5C,IAAIC,EAAYD,EAAU/H,GACtBoB,EAAU2G,EAAU7yC,EACpByF,EAAOotC,EAAUE,EACrB14C,KAAK24C,UAAYH,EAAU5yC,EAC3B5F,KAAKs1C,UAAUppC,WAAWd,GAEN,IAAhBpL,KAAK41C,SAGL51C,KAAKg2C,MAAM3I,QACXrtC,KAAK44C,yBAAyB54C,KAAKg2C,MAAOyC,GA36W3B,MA66WU5G,GACvBluC,EAAK,sCAIP3D,KAAK64C,qBAIXxD,EAAWn1C,UAAU24C,iBAAmB,WACtC,IAAI9C,EAAO/1C,KAAK61C,kBAAkBT,mBAE9BW,GACF/1C,KAAK84C,cAAc/C,IAIvBV,EAAWn1C,UAAU44C,cAAgB,SAAU/C,GAC7C,IAAI14B,EAAQrd,KAEZA,KAAKy2C,eAAiB,IAAIV,EAAK/1C,KAAKi2C,mBAAoBj2C,KAAKs1C,UAAWt1C,KAAKu1C,eAAgBv1C,KAAK24C,WAGlG34C,KAAK43C,4BAA8B7B,EAAmC,8BAAK,EAC3E,IAAIxK,EAAYvrC,KAAKo2C,cAAcp2C,KAAKy2C,gBACpCjL,EAAexrC,KAAKs2C,iBAAiBt2C,KAAKy2C,gBAC9Cz2C,KAAKy2C,eAAenL,KAAKC,EAAWC,GAEpClkC,GAAsB,WAChB+V,EAAMo5B,iBACRp5B,EAAM8tB,KAAK,gCAEX9tB,EAAMo5B,eAAetI,WAEtBnoC,KAAKI,MApXU,OAuXpBivC,EAAWn1C,UAAUo4C,SAAW,SAAUltC,GACxCpL,KAAKmrC,KAAK,qCAAuC//B,GACjDpL,KAAKs1C,UAAUppC,WAAWd,GAGN,IAAhBpL,KAAK41C,OAGL51C,KAAKmuC,SAGPnuC,KAAK+4C,oBACL/4C,KAAK81C,WAITT,EAAWn1C,UAAU04C,yBAA2B,SAAU7C,EAAM0C,GAC9D,IAAIp7B,EAAQrd,KAEZA,KAAKmrC,KAAK,oCACVnrC,KAAKg2C,MAAQD,EACb/1C,KAAK41C,OAAS,EAIV51C,KAAKw1C,WACPx1C,KAAKw1C,SAASiD,EAAWz4C,KAAK24C,WAC9B34C,KAAKw1C,SAAW,MAKqB,IAAnCx1C,KAAKk2C,2BACPl2C,KAAKmrC,KAAK,kCACVnrC,KAAK02C,YAAa,GAElBpvC,GAAsB,WACpB+V,EAAMk7B,kCACLvyC,KAAKI,MA1Z4B,OA8ZxCivC,EAAWn1C,UAAUq4C,8BAAgC,WAE9Cv4C,KAAK02C,YAA8B,IAAhB12C,KAAK41C,SAGzB51C,KAAKmrC,KAAK,4BACVnrC,KAAKs3C,UAAU,CACbD,EAAG,IACHhH,EAAG,CACDgH,EAzZD,IA0ZChH,EAAG,QAMbgF,EAAWn1C,UAAU62C,2BAA6B,WAChD,IAAIhB,EAAO/1C,KAAKy2C,eAChBz2C,KAAKy2C,eAAiB,KAElBz2C,KAAKu2C,MAAQR,GAAQ/1C,KAAKw2C,MAAQT,GAEpC/1C,KAAKmuC,SASTkH,EAAWn1C,UAAU42C,kBAAoB,SAAUD,GACjD72C,KAAKg2C,MAAQ,KAGRa,GAAiC,IAAhB72C,KAAK41C,OAUE,IAAhB51C,KAAK41C,QAGd51C,KAAKmrC,KAAK,8BAVVnrC,KAAKmrC,KAAK,+BAENnrC,KAAKs1C,UAAUtpC,oBACjBzK,EAAkBX,OAAO,QAAUZ,KAAKs1C,UAAUlqC,MAElDpL,KAAKs1C,UAAUzpC,aAAe7L,KAAKs1C,UAAUlqC,OAQnDpL,KAAKmuC,SAGPkH,EAAWn1C,UAAUm4C,sBAAwB,SAAUpT,GACrDjlC,KAAKmrC,KAAK,0DAENnrC,KAAKy1C,UACPz1C,KAAKy1C,QAAQxQ,GACbjlC,KAAKy1C,QAAU,MAKjBz1C,KAAK0rC,cAAgB,KACrB1rC,KAAKmuC,SAGPkH,EAAWn1C,UAAUo3C,UAAY,SAAUzzC,GACzC,GAAoB,IAAhB7D,KAAK41C,OAGL,KAAM,8BAER51C,KAAKu2C,IAAIjI,KAAKzqC,IAQlBwxC,EAAWn1C,UAAUiuC,MAAQ,WACP,IAAhBnuC,KAAK41C,SAGL51C,KAAKmrC,KAAK,gCACVnrC,KAAK41C,OAAS,EAGd51C,KAAK+4C,oBAED/4C,KAAK0rC,gBACP1rC,KAAK0rC,gBACL1rC,KAAK0rC,cAAgB,QAK7B2J,EAAWn1C,UAAU64C,kBAAoB,WACvC/4C,KAAKmrC,KAAK,iCAENnrC,KAAKg2C,QACPh2C,KAAKg2C,MAAM7H,QACXnuC,KAAKg2C,MAAQ,MAGXh2C,KAAKy2C,iBACPz2C,KAAKy2C,eAAetI,QACpBnuC,KAAKy2C,eAAiB,MAGpBz2C,KAAK42C,kBACPhK,aAAa5sC,KAAK42C,iBAClB52C,KAAK42C,gBAAkB,OAIpBvB,EA7fT,GAwhBI2D,GAEJ,WACE,SAASA,KAqBT,OAnBAA,EAAc94C,UAAU+4C,IAAM,SAAUjxC,EAAYnE,EAAM0N,EAAYiF,KAEtEwiC,EAAc94C,UAAUs1B,MAAQ,SAAUxtB,EAAYnE,EAAM0N,EAAYiF,KAOxEwiC,EAAc94C,UAAUg5C,iBAAmB,SAAUC,KAErDH,EAAc94C,UAAUk5C,gBAAkB,SAAUpxC,EAAYnE,EAAM0N,KAEtEynC,EAAc94C,UAAUm5C,kBAAoB,SAAUrxC,EAAYnE,EAAM0N,KAExEynC,EAAc94C,UAAUuR,mBAAqB,SAAUzJ,EAAYuJ,KAEnEynC,EAAc94C,UAAUwnC,YAAc,SAAUH,KAEzCyR,EAtBT,GA6DIM,GAEJ,SAAUrlC,GASR,SAASqlC,EAAqBhE,EAAWC,EAAgBgE,EAAeC,EAAkBC,EAAqBC,EAAoBC,GACjI,IAAIt8B,EAAQpJ,EAAOlF,KAAK/O,OAASA,KAuCjC,GArCAqd,EAAMi4B,UAAYA,EAClBj4B,EAAMk4B,eAAiBA,EACvBl4B,EAAMk8B,cAAgBA,EACtBl8B,EAAMm8B,iBAAmBA,EACzBn8B,EAAMo8B,oBAAsBA,EAC5Bp8B,EAAMq8B,mBAAqBA,EAC3Br8B,EAAMs8B,cAAgBA,EAEtBt8B,EAAMxd,GAAKy5C,EAAqBM,8BAChCv8B,EAAM8tB,KAAO7nC,EAAW,KAAO+Z,EAAMxd,GAAK,KAC1Cwd,EAAMw8B,kBAAoB,GAG1Bx8B,EAAMy8B,QAAU,IAAIprB,IACpBrR,EAAM08B,iBAAmB,GACzB18B,EAAM28B,iBAAmB,GACzB38B,EAAM48B,qBAAuB,EAC7B58B,EAAM68B,qBAAuB,EAC7B78B,EAAM88B,0BAA4B,GAClC98B,EAAM+8B,YAAa,EACnB/8B,EAAMg9B,gBArDgB,IAsDtBh9B,EAAMi9B,mBArDwB,IAsD9Bj9B,EAAMk9B,uBAAyB,KAC/Bl9B,EAAM0tB,cAAgB,KACtB1tB,EAAMm9B,0BAA4B,KAClCn9B,EAAMmsB,UAAW,EAEjBnsB,EAAMo9B,eAAiB,GACvBp9B,EAAMq9B,eAAiB,EACvBr9B,EAAMs9B,UAAY,KAClBt9B,EAAMu9B,WAAa,KACnBv9B,EAAMw9B,oBAAqB,EAC3Bx9B,EAAMy9B,uBAAyB,EAC/Bz9B,EAAM09B,kBAAmB,EACzB19B,EAAM29B,2BAA6B,KACnC39B,EAAM49B,+BAAiC,KAEnCtB,IAAkB,cACpB,MAAM,IAAIj2C,MAAM,kFAWlB,OARA2Z,EAAM69B,iBAAiB,GAEvB/R,GAAkBM,cAActf,GAAG,UAAW9M,EAAM89B,WAAY99B,IAErB,IAAvCi4B,EAAUlqC,KAAKQ,QAAQ,YACzB89B,GAAcD,cAActf,GAAG,SAAU9M,EAAM+9B,UAAW/9B,GAGrDA,EA+5BT,OA39BA,YAAUi8B,EAAsBrlC,GA+DhCqlC,EAAqBp5C,UAAUg3C,YAAc,SAAU7gC,EAAQ61B,EAAMmP,GACnE,IAAIC,IAAct7C,KAAK06C,eACnBtD,EAAM,CACRtV,EAAGwZ,EACHl3C,EAAGiS,EACHhS,EAAG6nC,GAELlsC,KAAKmrC,KAAK,YAAUiM,IACpB,YAAOp3C,KAAKo6C,WAAY,0DACxBp6C,KAAK26C,UAAUzD,YAAYE,GAEvBiE,IACFr7C,KAAKy6C,eAAea,GAAaD,IAIrC/B,EAAqBp5C,UAAUO,IAAM,SAAUkM,GAC7C,IAAI0Q,EAAQrd,KAERwR,EAAW,IAAI,IACf+pC,EAAU,CACZC,EAAG7uC,EAAMxE,KAAKrH,WACd26C,EAAG9uC,EAAM6f,eAEPkvB,EAAiB,CACnBrlC,OAAQ,IACRklC,QAASA,EACThqC,WAAY,SAAoBhP,GAC9B,IAAI41C,EAAU51C,EAAW,EAEJ,OAAjBA,EAAW,GACb8a,EAAMk8B,cAAcgC,EAAW,EAAGpD,GAElC,EAEA,MAEA3mC,EAASga,QAAQ2sB,IAEjB3mC,EAASka,OAAOysB,KAItBn4C,KAAKg6C,iBAAiBj1C,KAAK22C,GAC3B17C,KAAKk6C,uBACL,IAAI9jC,EAAQpW,KAAKg6C,iBAAiB13C,OAAS,EA2B3C,OAzBKtC,KAAKo6C,YACRhzC,YAAW,WACT,IAAI3G,EAAM4c,EAAM28B,iBAAiB5jC,QAErBvG,IAARpP,GAAqBi7C,IAAmBj7C,WAIrC4c,EAAM28B,iBAAiB5jC,GAC9BiH,EAAM68B,uBAE6B,IAA/B78B,EAAM68B,uBACR78B,EAAM28B,iBAAmB,IAG3B38B,EAAM8tB,KAAK,OAAS/0B,EAAQ,4BAE5B5E,EAASka,OAAO,IAAIhoB,MAAM,0BAlJR,KAsJlB1D,KAAKo6C,YACPp6C,KAAK27C,SAASvlC,GAGT5E,EAASG,SAOlB2nC,EAAqBp5C,UAAU07C,OAAS,SAAUjvC,EAAOkvC,EAAela,EAAKpwB,GAC3E,IAAIie,EAAU7iB,EAAMggB,kBAChB3kB,EAAa2E,EAAMxE,KAAKrH,WAC5Bd,KAAKmrC,KAAK,qBAAuBnjC,EAAa,IAAMwnB,GAE/CxvB,KAAK85C,QAAQjrB,IAAI7mB,IACpBhI,KAAK85C,QAAQ35C,IAAI6H,EAAY,IAAI0mB,KAGnC,YAAO/hB,EAAMiW,iBAAiB+F,cAAgBhc,EAAMiW,iBAAiB8F,eAAgB,sDACrF,aAAQ1oB,KAAK85C,QAAQr5C,IAAIuH,GAAY6mB,IAAIW,GAAU,gDACnD,IAAIssB,EAAa,CACfvqC,WAAYA,EACZmyB,OAAQmY,EACRlvC,MAAOA,EACPg1B,IAAKA,GAEP3hC,KAAK85C,QAAQr5C,IAAIuH,GAAY7H,IAAIqvB,EAASssB,GAEtC97C,KAAKo6C,YACPp6C,KAAK+7C,YAAYD,IAIrBxC,EAAqBp5C,UAAUy7C,SAAW,SAAUvlC,GAClD,IAAIiH,EAAQrd,KAERS,EAAMT,KAAKg6C,iBAAiB5jC,GAChCpW,KAAKk3C,YAAY,IAAKz2C,EAAI86C,SAAS,SAAUh5C,UACpC8a,EAAM28B,iBAAiB5jC,GAC9BiH,EAAM68B,uBAE6B,IAA/B78B,EAAM68B,uBACR78B,EAAM28B,iBAAmB,IAGvBv5C,EAAI8Q,YACN9Q,EAAI8Q,WAAWhP,OAKrB+2C,EAAqBp5C,UAAU67C,YAAc,SAAUD,GACrD,IAAIz+B,EAAQrd,KAER2M,EAAQmvC,EAAWnvC,MACnB3E,EAAa2E,EAAMxE,KAAKrH,WACxB0uB,EAAU7iB,EAAMggB,kBACpB3sB,KAAKmrC,KAAK,aAAenjC,EAAa,QAAUwnB,GAChD,IAAIwsB,EAAM,CAERR,EAAGxzC,GAID8zC,EAAWna,MACbqa,EAAO,EAAIrvC,EAAM6f,cACjBwvB,EAAO,EAAIF,EAAWna,KAGxBqa,EAEG,EAAIF,EAAWpY,SAClB1jC,KAAKk3C,YAVQ,IAUY8E,GAAK,SAAUz5C,GACtC,IAAI41C,EAAU51C,EAEX,EACCwiC,EAASxiC,EAEV,EAEH+2C,EAAqB2C,sBAAsB9D,EAASxrC,IAE5B0Q,EAAMy8B,QAAQr5C,IAAIuH,IAAeqV,EAAMy8B,QAAQr5C,IAAIuH,GAAYvH,IAAI+uB,MAGjEssB,IACxBz+B,EAAM8tB,KAAK,kBAAmB5oC,GAEf,OAAXwiC,GACF1nB,EAAM6+B,cAAcl0C,EAAYwnB,GAG9BssB,EAAWvqC,YACbuqC,EAAWvqC,WAAWwzB,EAAQoT,QAMtCmB,EAAqB2C,sBAAwB,SAAU9D,EAASxrC,GAC9D,GAAIwrC,GAA8B,iBAAZA,GAAwB,YAASA,EAAS,KAAM,CAEpE,IAAIgE,EAAW,YAAQhE,EAAS,KAEhC,GAAIz1C,MAAMC,QAAQw5C,KAAcA,EAASvwC,QAAQ,YAAa,CAC5D,IAAIwwC,EAAY,gBAAkBzvC,EAAMiW,iBAAiBC,WAAW/hB,WAAa,IAC7Eu7C,EAAY1vC,EAAMxE,KAAKrH,WAC3B6C,EAAK,wGAAgHy4C,EAAY,OAAWC,EAAY,sDAS9J/C,EAAqBp5C,UAAUg5C,iBAAmB,SAAUC,GAC1Dn5C,KAAK46C,WAAazB,EAClBn5C,KAAKmrC,KAAK,wBAENnrC,KAAK46C,WACP56C,KAAKs8C,UAIDt8C,KAAKo6C,YACPp6C,KAAKk3C,YAAY,SAAU,IAAI,eAInCl3C,KAAKu8C,uCAAuCpD,IAG9CG,EAAqBp5C,UAAUq8C,uCAAyC,SAAUC,IAGzDA,GAAoC,KAAtBA,EAAWl6C,QAExB,YAAQk6C,MAC9Bx8C,KAAKmrC,KAAK,iEACVnrC,KAAKs6C,mBAnS0B,MA4SnChB,EAAqBp5C,UAAUo8C,QAAU,WACvC,IAAIj/B,EAAQrd,KAEZ,GAAIA,KAAKo6C,YAAcp6C,KAAK46C,WAAY,CACtC,IAAI6B,EAAUz8C,KAAK46C,WACf8B,EAAa,YAAcD,GAAW,OAAS,QAC/CE,EAAc,CAChBC,KAAMH,GAGmB,OAAvBz8C,KAAK25C,cACPgD,EAAoB,QAAI,EACe,iBAAvB38C,KAAK25C,gBACrBgD,EAAqB,QAAI38C,KAAK25C,eAGhC35C,KAAKk3C,YAAYwF,EAAYC,GAAa,SAAUE,GAClD,IAAI9X,EAAS8X,EAEV,EACCh5C,EAAOg5C,EAER,GAAK,QAEJx/B,EAAMu9B,aAAe6B,IACR,OAAX1X,EACF1nB,EAAMy9B,uBAAyB,EAG/Bz9B,EAAMy/B,eAAe/X,EAAQlhC,SAWvCy1C,EAAqBp5C,UAAU68C,SAAW,SAAUpwC,EAAOg1B,GACzD,IAAI35B,EAAa2E,EAAMxE,KAAKrH,WACxB0uB,EAAU7iB,EAAMggB,kBACpB3sB,KAAKmrC,KAAK,uBAAyBnjC,EAAa,IAAMwnB,GACtD,YAAO7iB,EAAMiW,iBAAiB+F,cAAgBhc,EAAMiW,iBAAiB8F,eAAgB,wDACxE1oB,KAAKk8C,cAAcl0C,EAAYwnB,IAE9BxvB,KAAKo6C,YACjBp6C,KAAKg9C,cAAch1C,EAAYwnB,EAAS7iB,EAAM6f,cAAemV,IAIjE2X,EAAqBp5C,UAAU88C,cAAgB,SAAUh1C,EAAYwnB,EAASytB,EAAUtb,GACtF3hC,KAAKmrC,KAAK,eAAiBnjC,EAAa,QAAUwnB,GAClD,IAAIwsB,EAAM,CAERR,EAAGxzC,GAID25B,IACFqa,EAAO,EAAIiB,EACXjB,EAAO,EAAIra,GAGb3hC,KAAKk3C,YAPQ,IAOY8E,IAO3B1C,EAAqBp5C,UAAUk5C,gBAAkB,SAAUpxC,EAAYnE,EAAM0N,GACvEvR,KAAKo6C,WACPp6C,KAAKk9C,kBAAkB,IAAKl1C,EAAYnE,EAAM0N,GAE9CvR,KAAKm6C,0BAA0Bp1C,KAAK,CAClCiD,WAAYA,EACZqO,OAAQ,IACRxS,KAAMA,EACN0N,WAAYA,KASlB+nC,EAAqBp5C,UAAUm5C,kBAAoB,SAAUrxC,EAAYnE,EAAM0N,GACzEvR,KAAKo6C,WACPp6C,KAAKk9C,kBAAkB,KAAMl1C,EAAYnE,EAAM0N,GAE/CvR,KAAKm6C,0BAA0Bp1C,KAAK,CAClCiD,WAAYA,EACZqO,OAAQ,KACRxS,KAAMA,EACN0N,WAAYA,KASlB+nC,EAAqBp5C,UAAUuR,mBAAqB,SAAUzJ,EAAYuJ,GACpEvR,KAAKo6C,WACPp6C,KAAKk9C,kBAAkB,KAAMl1C,EAAY,KAAMuJ,GAE/CvR,KAAKm6C,0BAA0Bp1C,KAAK,CAClCiD,WAAYA,EACZqO,OAAQ,KACRxS,KAAM,KACN0N,WAAYA,KAKlB+nC,EAAqBp5C,UAAUg9C,kBAAoB,SAAU7mC,EAAQrO,EAAYnE,EAAM0N,GACrF,IAAIgqC,EAAU,CAEZC,EAAGxzC,EAGHqoC,EAAGxsC,GAEL7D,KAAKmrC,KAAK,gBAAkB90B,EAAQklC,GACpCv7C,KAAKk3C,YAAY7gC,EAAQklC,GAAS,SAAU4B,GACtC5rC,GACFnK,YAAW,WACTmK,EAAW4rC,EAER,EAAGA,EAEH,KACFn3C,KAAKI,MAAM,QASpBkzC,EAAqBp5C,UAAU+4C,IAAM,SAAUjxC,EAAYnE,EAAM0N,EAAYiF,GAC3ExW,KAAKo9C,YAAY,IAAKp1C,EAAYnE,EAAM0N,EAAYiF,IAOtD8iC,EAAqBp5C,UAAUs1B,MAAQ,SAAUxtB,EAAYnE,EAAM0N,EAAYiF,GAC7ExW,KAAKo9C,YAAY,IAAKp1C,EAAYnE,EAAM0N,EAAYiF,IAGtD8iC,EAAqBp5C,UAAUk9C,YAAc,SAAU/mC,EAAQrO,EAAYnE,EAAM0N,EAAYiF,GAC3F,IAAI+kC,EAAU,CAEZC,EAAGxzC,EAGHqoC,EAAGxsC,QAGQgM,IAAT2G,IACF+kC,EAEG,EAAI/kC,GAITxW,KAAK+5C,iBAAiBh1C,KAAK,CACzBsR,OAAQA,EACRklC,QAASA,EACThqC,WAAYA,IAEdvR,KAAKi6C,uBACL,IAAI7jC,EAAQpW,KAAK+5C,iBAAiBz3C,OAAS,EAEvCtC,KAAKo6C,WACPp6C,KAAKq9C,SAASjnC,GAEdpW,KAAKmrC,KAAK,kBAAoBnjC,IAIlCsxC,EAAqBp5C,UAAUm9C,SAAW,SAAUjnC,GAClD,IAAIiH,EAAQrd,KAERqW,EAASrW,KAAK+5C,iBAAiB3jC,GAAOC,OACtCklC,EAAUv7C,KAAK+5C,iBAAiB3jC,GAAOmlC,QACvChqC,EAAavR,KAAK+5C,iBAAiB3jC,GAAO7E,WAC9CvR,KAAK+5C,iBAAiB3jC,GAAOknC,OAASt9C,KAAKo6C,WAC3Cp6C,KAAKk3C,YAAY7gC,EAAQklC,GAAS,SAAUh5C,GAC1C8a,EAAM8tB,KAAK90B,EAAS,YAAa9T,UAE1B8a,EAAM08B,iBAAiB3jC,GAC9BiH,EAAM48B,uBAE6B,IAA/B58B,EAAM48B,uBACR58B,EAAM08B,iBAAmB,IAGvBxoC,GACFA,EAAWhP,EAER,EAAGA,EAEH,OAST+2C,EAAqBp5C,UAAUwnC,YAAc,SAAUH,GACrD,IAAIlqB,EAAQrd,KAGZ,GAAIA,KAAKo6C,WAAY,CACnB,IAAImB,EAAU,CAEZl2C,EAAGkiC,GAELvnC,KAAKmrC,KAAK,cAAeoQ,GACzBv7C,KAAKk3C,YAEL,IAAKqE,GAAS,SAAUrjC,GAKtB,GAAe,OAJFA,EAEV,EAEkB,CACnB,IAAIqlC,EAAcrlC,EAEf,EAEHmF,EAAM8tB,KAAK,cAAe,wBAA0BoS,SAM5DjE,EAAqBp5C,UAAU+3C,eAAiB,SAAU11C,GACxD,GAAI,MAAOA,EAAS,CAElBvC,KAAKmrC,KAAK,gBAAkB,YAAU5oC,IACtC,IAAIi7C,EAASj7C,EAAW,EACpB84C,EAAar7C,KAAKy6C,eAAe+C,GAEjCnC,WACKr7C,KAAKy6C,eAAe+C,GAC3BnC,EAAW94C,EAER,QAEA,IAAI,UAAWA,EACpB,KAAM,qCAAuCA,EAAe,MACnD,MAAOA,GAEhBvC,KAAKy9C,YAAYl7C,EAAW,EAAGA,EAAW,KAI9C+2C,EAAqBp5C,UAAUu9C,YAAc,SAAUpnC,EAAQ61B,GAC7DlsC,KAAKmrC,KAAK,sBAAuB90B,EAAQ61B,GAE1B,MAAX71B,EACFrW,KAAKu5C,cAAcrN,EAEhB,EAAGA,EAEH,GAEH,EAAOA,EAAQ,GACK,MAAX71B,EACTrW,KAAKu5C,cAAcrN,EAEhB,EAAGA,EAEH,GAEH,EAAMA,EAAQ,GACM,MAAX71B,EACTrW,KAAK09C,iBAAiBxR,EAEnB,EAAGA,EAEH,GACiB,OAAX71B,EACTrW,KAAK88C,eAAe5Q,EAEjB,EAAGA,EAEH,GACiB,OAAX71B,EACTrW,KAAK29C,uBAAuBzR,GAE5B1oC,EAAM,6CAA+C,YAAU6S,GAAU,uCAI7EijC,EAAqBp5C,UAAUs1C,SAAW,SAAUiD,EAAWE,GAC7D34C,KAAKmrC,KAAK,oBACVnrC,KAAKo6C,YAAa,EAClBp6C,KAAKi7C,gCAAiC,IAAI2C,MAAOC,UACjD79C,KAAK89C,iBAAiBrF,GACtBz4C,KAAK+qC,cAAgB4N,EAEjB34C,KAAK+6C,kBACP/6C,KAAK+9C,oBAGP/9C,KAAKg+C,gBACLh+C,KAAK+6C,kBAAmB,EACxB/6C,KAAKw5C,kBAAiB,IAGxBF,EAAqBp5C,UAAUg7C,iBAAmB,SAAU1zC,GAC1D,IAAI6V,EAAQrd,KAEZ,aAAQA,KAAK26C,UAAW,0DAEpB36C,KAAKw6C,2BACP5N,aAAa5sC,KAAKw6C,2BAKpBx6C,KAAKw6C,0BAA4BpzC,YAAW,WAC1CiW,EAAMm9B,0BAA4B,KAElCn9B,EAAM4gC,yBAELj4C,KAAKI,MAAMoB,KAGhB8xC,EAAqBp5C,UAAUi7C,WAAa,SAAU1c,GAEhDA,IAAYz+B,KAAKwpC,UAAYxpC,KAAKq6C,kBAAoBr6C,KAAKs6C,qBAC7Dt6C,KAAKmrC,KAAK,2CACVnrC,KAAKq6C,gBAzoBe,IA2oBfr6C,KAAK26C,WACR36C,KAAKk7C,iBAAiB,IAI1Bl7C,KAAKwpC,SAAW/K,GAGlB6a,EAAqBp5C,UAAUk7C,UAAY,SAAU8C,GAC/CA,GACFl+C,KAAKmrC,KAAK,wBACVnrC,KAAKq6C,gBAtpBe,IAwpBfr6C,KAAK26C,WACR36C,KAAKk7C,iBAAiB,KAGxBl7C,KAAKmrC,KAAK,8CAENnrC,KAAK26C,WACP36C,KAAK26C,UAAUxM,UAKrBmL,EAAqBp5C,UAAUi+C,sBAAwB,WASrD,GARAn+C,KAAKmrC,KAAK,4BACVnrC,KAAKo6C,YAAa,EAClBp6C,KAAK26C,UAAY,KAEjB36C,KAAKo+C,0BAELp+C,KAAKy6C,eAAiB,GAElBz6C,KAAKq+C,mBAAoB,CAC3B,GAAKr+C,KAAKwpC,UAIH,GAAIxpC,KAAKi7C,+BAAgC,EAEV,IAAI2C,MAAOC,UAAY79C,KAAKi7C,+BA7qBpC,MAgrB1Bj7C,KAAKq6C,gBAvrBW,KA0rBlBr6C,KAAKi7C,+BAAiC,WAXtCj7C,KAAKmrC,KAAK,8CACVnrC,KAAKq6C,gBAAkBr6C,KAAKs6C,mBAC5Bt6C,KAAKg7C,4BAA6B,IAAI4C,MAAOC,UAY/C,IAAIS,GAA8B,IAAIV,MAAOC,UAAY79C,KAAKg7C,2BAC1DuD,EAAiBv4C,KAAKsE,IAAI,EAAGtK,KAAKq6C,gBAAkBiE,GACxDC,EAAiBv4C,KAAK2M,SAAW4rC,EACjCv+C,KAAKmrC,KAAK,0BAA4BoT,EAAiB,MACvDv+C,KAAKk7C,iBAAiBqD,GAEtBv+C,KAAKq6C,gBAAkBr0C,KAAKG,IAAInG,KAAKs6C,mBA7rBV,IA6rB8Bt6C,KAAKq6C,iBAGhEr6C,KAAKw5C,kBAAiB,IAGxBF,EAAqBp5C,UAAU+9C,qBAAuB,WACpD,IAAI5gC,EAAQrd,KAEZ,GAAIA,KAAKq+C,mBAAoB,CAC3Br+C,KAAKmrC,KAAK,+BACVnrC,KAAKg7C,4BAA6B,IAAI4C,MAAOC,UAC7C79C,KAAKi7C,+BAAiC,KACtC,IAAIuD,EAAkBx+C,KAAKi4C,eAAe50C,KAAKrD,MAC3Cy+C,EAAYz+C,KAAKw1C,SAASnyC,KAAKrD,MAC/B0+C,EAAiB1+C,KAAKm+C,sBAAsB96C,KAAKrD,MACjD2+C,EAAW3+C,KAAKH,GAAK,IAAMy5C,EAAqBsF,oBAChD3vB,EAASjvB,KACT6+C,EAAkB7+C,KAAK+qC,cACvB+T,GAAa,EACbC,EAAe,KAEfC,EAAY,WACVD,EACFA,EAAa5Q,SAEb2Q,GAAa,EACbJ,MASJ1+C,KAAK26C,UAAY,CACfxM,MAAO6Q,EACP9H,YAPkB,SAAuBE,GACzC,YAAO2H,EAAc,0DACrBA,EAAa7H,YAAYE,KAO3B,IAAI6H,EAAej/C,KAAK66C,mBACxB76C,KAAK66C,oBAAqB,EAE1B76C,KAAK05C,mBAAmBwF,SAASD,GAAcE,MAAK,SAAUjnC,GACvD4mC,EAUH17C,EAAI,0CATJA,EAAI,8CACJ6rB,EAAO2rB,WAAa1iC,GAAUA,EAAOknC,YACrCL,EAAe,IAAI1J,GAAWsJ,EAAU1vB,EAAOqmB,UAAWrmB,EAAOsmB,eAAgBiJ,EAAiBC,EAAWC,GAE7G,SAAUzZ,GACRthC,EAAKshC,EAAS,KAAOhW,EAAOqmB,UAAUx0C,WAAa,KACnDmuB,EAAOowB,UA7uBgB,iBA8uBtBR,OAIJM,KAAK,MAAM,SAAU37C,GACtByrB,EAAOkc,KAAK,wBAA0B3nC,GAEjCs7C,IACCzhC,EAAMi4B,UAAU9pC,WAIlB7H,EAAKH,GAGPw7C,UAMR1F,EAAqBp5C,UAAUm/C,UAAY,SAAUpa,GACnD7hC,EAAI,uCAAyC6hC,GAC7CjlC,KAAK65C,kBAAkB5U,IAAU,EAE7BjlC,KAAK26C,UACP36C,KAAK26C,UAAUxM,SAEXnuC,KAAKw6C,4BACP5N,aAAa5sC,KAAKw6C,2BAClBx6C,KAAKw6C,0BAA4B,MAG/Bx6C,KAAKo6C,YACPp6C,KAAKm+C,0BAKX7E,EAAqBp5C,UAAUo/C,OAAS,SAAUra,GAChD7hC,EAAI,mCAAqC6hC,UAClCjlC,KAAK65C,kBAAkB5U,GAE1B,YAAQjlC,KAAK65C,qBACf75C,KAAKq6C,gBAnyBe,IAqyBfr6C,KAAK26C,WACR36C,KAAKk7C,iBAAiB,KAK5B5B,EAAqBp5C,UAAU49C,iBAAmB,SAAUrF,GAC1D,IAAIzqB,EAAQyqB,GAAY,IAAImF,MAAOC,UACnC79C,KAAKy5C,oBAAoB,CACvB8F,iBAAkBvxB,KAItBsrB,EAAqBp5C,UAAUk+C,wBAA0B,WACvD,IAAK,IAAI57C,EAAI,EAAGA,EAAIxC,KAAK+5C,iBAAiBz3C,OAAQE,IAAK,CACrD,IAAIy2C,EAAMj5C,KAAK+5C,iBAAiBv3C,GAE5By2C,GAEJ,MAAOA,EAAIsC,SAAWtC,EAAIqE,SACpBrE,EAAI1nC,YACN0nC,EAAI1nC,WAAW,qBAGVvR,KAAK+5C,iBAAiBv3C,GAC7BxC,KAAKi6C,wBAKyB,IAA9Bj6C,KAAKi6C,uBACPj6C,KAAK+5C,iBAAmB,KAI5BT,EAAqBp5C,UAAUw9C,iBAAmB,SAAU11C,EAAY2E,GAEtE,IAAI6iB,EAKFA,EAHG7iB,EAGOA,EAAMi4B,KAAI,SAAU6W,GAC5B,OAAO72C,EAAkB62C,MACxBh1C,KAAK,KAJE,UAOZ,IAAIm1C,EAAS57C,KAAKk8C,cAAcl0C,EAAYwnB,GAExCosB,GAAUA,EAAOrqC,YACnBqqC,EAAOrqC,WAAW,sBAItB+nC,EAAqBp5C,UAAUg8C,cAAgB,SAAUl0C,EAAYwnB,GACnE,IAEIosB,EAFA4D,EAAuB,IAAI/3C,EAAKO,GAAYlH,WAIhD,GAAId,KAAK85C,QAAQjrB,IAAI2wB,GAAuB,CAC1C,IAAI5a,EAAM5kC,KAAK85C,QAAQr5C,IAAI++C,GAC3B5D,EAAShX,EAAInkC,IAAI+uB,GACjBoV,EAAIzV,OAAOK,GAEM,IAAboV,EAAIhW,MACN5uB,KAAK85C,QAAQ3qB,OAAOqwB,QAItB5D,OAAS/rC,EAGX,OAAO+rC,GAGTtC,EAAqBp5C,UAAU48C,eAAiB,SAAU2C,EAAYC,GACpEt8C,EAAI,uBAAyBq8C,EAAa,IAAMC,GAChD1/C,KAAK46C,WAAa,KAClB56C,KAAK66C,oBAAqB,EAC1B76C,KAAK26C,UAAUxM,QAEI,kBAAfsR,GAAiD,sBAAfA,IAIpCz/C,KAAK86C,yBAED96C,KAAK86C,wBAj3BoB,IAm3B3B96C,KAAKq6C,gBA13BwB,IA63B7Br6C,KAAK05C,mBAAmBiG,2BAK9BrG,EAAqBp5C,UAAUy9C,uBAAyB,SAAUzR,GAC5DlsC,KAAKu6C,uBACPv6C,KAAKu6C,uBAAuBrO,GAExB,QAASA,GACX0T,QAAQx8C,IAAI,aAAe8oC,EAAU,IAAEn+B,QAAQ,KAAM,kBAK3DurC,EAAqBp5C,UAAU89C,cAAgB,WAC7C,IAAI7vC,EAAKC,EAAIqtB,EAAKltB,EAGlBvO,KAAKs8C,UAEL,IAGE,IAAK,IAAI9tC,EAAK,YAASxO,KAAK85C,QAAQpmB,UAAWoI,EAAKttB,EAAGC,QAASqtB,EAAGptB,KAAMotB,EAAKttB,EAAGC,OAAQ,CACvF,IAAI61B,EAAUxI,EAAGz7B,MAEjB,IACE,IAAK,IAAIw/C,GAAMpkB,OAAM,EAAQ,YAAS6I,EAAQ5Q,WAAYosB,EAAKD,EAAGpxC,QAASqxC,EAAGpxC,KAAMoxC,EAAKD,EAAGpxC,OAAQ,CAClG,IAAIqtC,EAAagE,EAAGz/C,MACpBL,KAAK+7C,YAAYD,IAEnB,MAAO9f,GACPP,EAAM,CACJj4B,MAAOw4B,GAET,QACA,IACM8jB,IAAOA,EAAGpxC,OAASH,EAAKsxC,EAAG/wC,SAASP,EAAGQ,KAAK8wC,GAChD,QACA,GAAIpkB,EAAK,MAAMA,EAAIj4B,SAIzB,MAAOqL,GACPV,EAAM,CACJ3K,MAAOqL,GAET,QACA,IACMitB,IAAOA,EAAGptB,OAASN,EAAKI,EAAGM,SAASV,EAAGW,KAAKP,GAChD,QACA,GAAIL,EAAK,MAAMA,EAAI3K,OAIvB,IAAK,IAAIhB,EAAI,EAAGA,EAAIxC,KAAK+5C,iBAAiBz3C,OAAQE,IAC5CxC,KAAK+5C,iBAAiBv3C,IACxBxC,KAAKq9C,SAAS76C,GAIlB,KAAOxC,KAAKm6C,0BAA0B73C,QAAQ,CAC5C,IAAIi5C,EAAUv7C,KAAKm6C,0BAA0B5J,QAC7CvwC,KAAKk9C,kBAAkB3B,EAAQllC,OAAQklC,EAAQvzC,WAAYuzC,EAAQ13C,KAAM03C,EAAQhqC,YAGnF,IAAS/O,EAAI,EAAGA,EAAIxC,KAAKg6C,iBAAiB13C,OAAQE,IAC5CxC,KAAKg6C,iBAAiBx3C,IACxBxC,KAAK27C,SAASn5C,IASpB82C,EAAqBp5C,UAAU69C,kBAAoB,WACjD,IAAIxW,EAAQ,GACRwY,EAAa,KAEb,gBAEAA,EADE//C,KAAKs1C,UAAU9pC,UACJ,aAEA,QAIjB+7B,EAAM,OAASwY,EAAa,IAAMpO,GAAY5jC,QAAQ,MAAO,MAAQ,EAEjE,cACFw5B,EAAM,qBAAuB,EACpB,gBACTA,EAAM,yBAA2B,GAGnCvnC,KAAK0nC,YAAYH,IAGnB+R,EAAqBp5C,UAAUm+C,iBAAmB,WAChD,IAAIH,EAASxU,GAAcD,cAAcG,kBACzC,OAAO,YAAQ5pC,KAAK65C,oBAAsBqE,GAG5C5E,EAAqBM,4BAA8B,EAKnDN,EAAqBsF,kBAAoB,EAClCtF,EA59BT,CA69BEN,IAyBEgH,GAEJ,SAAU/rC,GAQR,SAAS+rC,EAAmB1K,EAAWiE,EAAeG,GACpD,IAAIr8B,EAAQpJ,EAAOlF,KAAK/O,OAASA,KAcjC,OAZAqd,EAAMi4B,UAAYA,EAClBj4B,EAAMk8B,cAAgBA,EACtBl8B,EAAMq8B,mBAAqBA,EAG3Br8B,EAAM8tB,KAAO7nC,EAAW,WAMxB+Z,EAAM4iC,SAAW,GACV5iC,EAiKT,OAvLA,YAAU2iC,EAAoB/rC,GAyB9B+rC,EAAmB9/C,UAAUwnC,YAAc,SAAUH,GACnD,MAAM,IAAI7jC,MAAM,4BAGlBs8C,EAAmBE,aAAe,SAAUvzC,EAAOg1B,GACjD,YAAY9xB,IAAR8xB,EACK,OAASA,GAEhB,YAAOh1B,EAAMiW,iBAAiB+F,YAAa,kDACpChc,EAAMxE,KAAKrH,aAMtBk/C,EAAmB9/C,UAAU07C,OAAS,SAAUjvC,EAAOkvC,EAAela,EAAKpwB,GACzE,IAAI8L,EAAQrd,KAERgI,EAAa2E,EAAMxE,KAAKrH,WAC5Bd,KAAKmrC,KAAK,qBAAuBnjC,EAAa,IAAM2E,EAAMggB,mBAE1D,IAAIwzB,EAAWH,EAAmBE,aAAavzC,EAAOg1B,GAClDye,EAAa,GACjBpgD,KAAKigD,SAASE,GAAYC,EAC1B,IAAIC,EAAwBh3B,GAAuC1c,EAAMiW,kBACzE5iB,KAAKsgD,aAAat4C,EAAa,QAASq4C,GAAuB,SAAU78C,EAAO0U,GAC9E,IAAIrU,EAAOqU,GAEG,MAAV1U,IACFK,EAAO,KACPL,EAAQ,MAGI,OAAVA,GACF6Z,EAAMk8B,cAAcvxC,EAAYnE,GAEhC,EAAO89B,GAGL,YAAQtkB,EAAM4iC,SAAUE,KAAcC,IAWxC7uC,EARK/N,EAEgB,MAAVA,EACE,oBAEA,cAAgBA,EAJhB,KAOQ,UAO3Bw8C,EAAmB9/C,UAAU68C,SAAW,SAAUpwC,EAAOg1B,GACvD,IAAIwe,EAAWH,EAAmBE,aAAavzC,EAAOg1B,UAC/C3hC,KAAKigD,SAASE,IAGvBH,EAAmB9/C,UAAUO,IAAM,SAAUkM,GAC3C,IAAI0Q,EAAQrd,KAERqgD,EAAwBh3B,GAAuC1c,EAAMiW,kBACrE5a,EAAa2E,EAAMxE,KAAKrH,WACxB0Q,EAAW,IAAI,IAqBnB,OApBAxR,KAAKsgD,aAAat4C,EAAa,QAASq4C,GAAuB,SAAU78C,EAAO0U,GAC9E,IAAIrU,EAAOqU,EAEG,MAAV1U,IACFK,EAAO,KACPL,EAAQ,MAGI,OAAVA,GACF6Z,EAAMk8B,cAAcvxC,EAAYnE,GAEhC,EAEA,MAEA2N,EAASga,QAAQ3nB,IAEjB2N,EAASka,OAAO,IAAIhoB,MAAMG,OAGvB2N,EAASG,SAKlBquC,EAAmB9/C,UAAUg5C,iBAAmB,SAAUC,KAQ1D6G,EAAmB9/C,UAAUogD,aAAe,SAAUt4C,EAAYq4C,EAAuBj2B,GACvF,IAAI/M,EAAQrd,UAEkB,IAA1BqgD,IACFA,EAAwB,IAG1BA,EAA8B,OAAI,SAClCrgD,KAAK05C,mBAAmBwF,UAExB,GAAOC,MAAK,SAAUoB,GACpB,IAAIC,EAAYD,GAAiBA,EAAcnB,YAE3CoB,IACFH,EAA4B,KAAIG,GAGlC,IAAI3P,GAAOxzB,EAAMi4B,UAAUjqC,OAAS,WAAa,WAAagS,EAAMi4B,UAAUlqC,KAAOpD,EAA3E,OAAsGqV,EAAMi4B,UAAUhqC,UAAY,YAAY+0C,GAExJhjC,EAAM8tB,KAAK,4BAA8B0F,GAEzC,IAAI4P,EAAM,IAAIC,eAEdD,EAAIlP,mBAAqB,WACvB,GAAInnB,GAA+B,IAAnBq2B,EAAI1U,WAAkB,CACpC1uB,EAAM8tB,KAAK,qBAAuB0F,EAAM,qBAAsB4P,EAAI1b,OAAQ,YAAa0b,EAAIE,cAE3F,IAAI9D,EAAM,KAEV,GAAI4D,EAAI1b,QAAU,KAAO0b,EAAI1b,OAAS,IAAK,CACzC,IACE8X,EAAM,YAAS4D,EAAIE,cACnB,MAAOr/C,GACPqC,EAAK,qCAAuCktC,EAAM,KAAO4P,EAAIE,cAG/Dv2B,EAAS,KAAMyyB,QAGI,MAAf4D,EAAI1b,QAAiC,MAAf0b,EAAI1b,QAC5BphC,EAAK,sCAAwCktC,EAAM,YAAc4P,EAAI1b,QAGvE3a,EAASq2B,EAAI1b,QAGf3a,EAAW,OAIfq2B,EAAInV,KAAK,MAAOuF,GAEhB,GACA4P,EAAInS,WAID0R,EAxLT,CAyLEhH,IAuBE4H,GAGF,WAGE5gD,KAAKyuB,SAAW,GAChBzuB,KAAK6gD,WAAa,EAClB7gD,KAAKK,MAAQ,MAYbygD,GAEJ,WAME,SAASA,EAAKC,EAAOC,EAASjgC,QACd,IAAVggC,IACFA,EAAQ,SAGM,IAAZC,IACFA,EAAU,WAGE,IAAVjgC,IACFA,EAAQ,IAAI6/B,IAGd5gD,KAAK+gD,MAAQA,EACb/gD,KAAKghD,QAAUA,EACfhhD,KAAK+gB,MAAQA,EAoNf,OA1MA+/B,EAAK5gD,UAAU+gD,QAAU,SAAUC,GAMjC,IAJA,IAAI/4C,EAAO+4C,aAAmBz5C,EAAOy5C,EAAU,IAAIz5C,EAAKy5C,GACpDt2C,EAAQ5K,KACRyO,EAAOvG,EAAaC,GAER,OAATsG,GAAe,CAEpB7D,EAAQ,IAAIk2C,EAAKryC,EAAM7D,EADP,YAAQA,EAAMmW,MAAM0N,SAAUhgB,IAAS,IAAImyC,IAG3DnyC,EAAOvG,EADPC,EAAOE,EAAaF,IAItB,OAAOyC,GASTk2C,EAAK5gD,UAAUqW,SAAW,WACxB,OAAOvW,KAAK+gB,MAAM1gB,OASpBygD,EAAK5gD,UAAUihD,SAAW,SAAU9gD,GAClC,iBAAwB,IAAVA,EAAuB,iCACrCL,KAAK+gB,MAAM1gB,MAAQA,EACnBL,KAAKohD,kBAOPN,EAAK5gD,UAAU6uB,MAAQ,WACrB/uB,KAAK+gB,MAAM1gB,MAAQ,KACnBL,KAAK+gB,MAAM0N,SAAW,GACtBzuB,KAAK+gB,MAAM8/B,WAAa,EACxB7gD,KAAKohD,kBAOPN,EAAK5gD,UAAUuhB,YAAc,WAC3B,OAAOzhB,KAAK+gB,MAAM8/B,WAAa,GAOjCC,EAAK5gD,UAAU6U,QAAU,WACvB,OAA2B,OAApB/U,KAAKuW,aAAwBvW,KAAKyhB,eAS3Cq/B,EAAK5gD,UAAUiW,aAAe,SAAUE,GACtC,IAAIgH,EAAQrd,KAEZuF,EAAKvF,KAAK+gB,MAAM0N,UAAU,SAAU7jB,EAAOgR,GACzCvF,EAAO,IAAIyqC,EAAKl2C,EAAOyS,EAAOzB,QAclCklC,EAAK5gD,UAAUmhD,kBAAoB,SAAUhrC,EAAQirC,EAAaC,GAC5DD,IAAgBC,GAClBlrC,EAAOrW,MAGTA,KAAKmW,cAAa,SAAUvL,GAC1BA,EAAMy2C,kBAAkBhrC,GAExB,EAAMkrC,MAGJD,GAAeC,GACjBlrC,EAAOrW,OAaX8gD,EAAK5gD,UAAUshD,gBAAkB,SAAUnrC,EAAQirC,GAGjD,IAFA,IAAIluC,EAAOkuC,EAActhD,KAAOA,KAAKyhD,SAErB,OAATruC,GAAe,CACpB,GAAIiD,EAAOjD,GACT,OAAO,EAGTA,EAAOA,EAAKquC,SAGd,OAAO,GAWTX,EAAK5gD,UAAUwhD,oCAAsC,SAAUrrC,GAC7DrW,KAAKmW,cAAa,SAAUvL,GACD,OAArBA,EAAM2L,WACRF,EAAOzL,GAEPA,EAAM82C,oCAAoCrrC,OAShDyqC,EAAK5gD,UAAUiI,KAAO,WACpB,OAAO,IAAIV,EAAsB,OAAjBzH,KAAKghD,QAAmBhhD,KAAK+gD,MAAQ/gD,KAAKghD,QAAQ74C,OAAS,IAAMnI,KAAK+gD,QAOxFD,EAAK5gD,UAAUW,KAAO,WACpB,OAAOb,KAAK+gD,OAOdD,EAAK5gD,UAAUuhD,OAAS,WACtB,OAAOzhD,KAAKghD,SAOdF,EAAK5gD,UAAUkhD,eAAiB,WACT,OAAjBphD,KAAKghD,SACPhhD,KAAKghD,QAAQW,aAAa3hD,KAAK+gD,MAAO/gD,OAW1C8gD,EAAK5gD,UAAUyhD,aAAe,SAAUlsC,EAAW7K,GACjD,IAAIg3C,EAAah3C,EAAMmK,UACnB8sC,EAAc,YAAS7hD,KAAK+gB,MAAM0N,SAAUhZ,GAE5CmsC,GAAcC,UACT7hD,KAAK+gB,MAAM0N,SAAShZ,GAC3BzV,KAAK+gB,MAAM8/B,aACX7gD,KAAKohD,kBACKQ,GAAeC,IACzB7hD,KAAK+gB,MAAM0N,SAAShZ,GAAa7K,EAAMmW,MACvC/gB,KAAK+gB,MAAM8/B,aACX7gD,KAAKohD,mBAIFN,EAzOT,IAuQA,SAAW7O,GAITA,EAAkBA,EAAuB,IAAI,GAAK,MAGlDA,EAAkBA,EAAwB,KAAI,GAAK,OAGnDA,EAAkBA,EAA6B,UAAI,GAAK,YAGxDA,EAAkBA,EAAoC,iBAAI,GAAK,mBAE/DA,EAAkBA,EAA+B,YAAI,GAAK,cAf5D,CAgBGA,KAAsBA,GAAoB,KAM7C,IAAI6P,GAEJ,WACE,SAASA,EAAKxM,EAAWyM,EAAkBC,EAAKtI,GAC9C15C,KAAKs1C,UAAYA,EACjBt1C,KAAK+hD,iBAAmBA,EACxB/hD,KAAKgiD,IAAMA,EACXhiD,KAAK05C,mBAAqBA,EAC1B15C,KAAKiiD,gBAAkB,EACvBjiD,KAAKonC,eAAiB,KACtBpnC,KAAKkiD,YAAc,IAAIva,GACvB3nC,KAAKmiD,aAAe,EACpBniD,KAAKoiD,6BAA+B,KAGpCpiD,KAAK0rC,cAAgB,IAAIld,GAGzBxuB,KAAKqiD,sBAAwB,IAAIvB,GAEjC9gD,KAAKsiD,sBAAwB,KAE7BtiD,KAAKI,IAAMJ,KAAKs1C,UAAU7oC,cA+iC5B,OA5iCAq1C,EAAK5hD,UAAUmtC,MAAQ,WACrB,IAAIhwB,EAAQrd,KAIZ,GAFAA,KAAKorC,OAAShF,GAAaC,cAAcrmC,KAAKs1C,WAE1Ct1C,KAAK+hD,mBArnbuB,iBAAX3gD,QAAuBA,OAAkB,WAAKA,OAAkB,UAAa,WAAK,IAKxFmhD,OAAO,6FAA+F,EAinbnHviD,KAAKknC,QAAU,IAAI8Y,GAAmBhgD,KAAKs1C,UAAWt1C,KAAKu5C,cAAcl2C,KAAKrD,MAAOA,KAAK05C,oBAE1FtyC,WAAWpH,KAAKw5C,iBAAiBn2C,KAAKrD,MAAM,GAAO,OAC9C,CACL,IAAIwiD,EAAexiD,KAAKgiD,IAAIxP,QAAsC,6BAElE,GAAI,MAAOgQ,EAAuD,CAChE,GAA4B,iBAAjBA,EACT,MAAM,IAAI9+C,MAAM,sEAGlB,IACE,YAAU8+C,GACV,MAAOlhD,GACP,MAAM,IAAIoC,MAAM,kCAAoCpC,IAIxDtB,KAAKsiD,sBAAwB,IAAIhJ,GAAqBt5C,KAAKs1C,UAAWt1C,KAAKgiD,IAAIxP,QAAQiQ,MAAOziD,KAAKu5C,cAAcl2C,KAAKrD,MAAOA,KAAKw5C,iBAAiBn2C,KAAKrD,MAAOA,KAAKy5C,oBAAoBp2C,KAAKrD,MAAOA,KAAK05C,mBAAoB8I,GAC7NxiD,KAAKknC,QAAUlnC,KAAKsiD,sBAGtBtiD,KAAK05C,mBAAmBgJ,wBAAuB,SAAUvJ,GACvD97B,EAAM6pB,QAAQgS,iBAAiBC,MAIjCn5C,KAAK2iD,eAAiBvc,GAAaI,oBAAoBxmC,KAAKs1C,WAAW,WACrE,OAAO,IAAItO,GAAc3pB,EAAM+tB,OAAQ/tB,EAAM6pB,YAG/ClnC,KAAK4iD,UAAY,IAAIhd,GACrB5lC,KAAK6iD,cAAgB,IAAIliB,GAAS,CAChC4C,eAAgB,SAAwB52B,EAAOg1B,EAAKka,EAAetqC,GACjE,IAAIuxC,EAAa,GAEb1vC,EAAOiK,EAAMulC,UAAUrwB,QAAQ5lB,EAAMxE,MAWzC,OAPKiL,EAAK2B,YACR+tC,EAAazlC,EAAMwlC,cAActhB,qBAAqB50B,EAAMxE,KAAMiL,GAClEhM,YAAW,WACTmK,EAAW,QACV,IAGEuxC,GAETnf,cAAe,eAEjB3jC,KAAK+iD,YAAY,aAAa,GAC9B/iD,KAAKgjD,gBAAkB,IAAIriB,GAAS,CAClC4C,eAAgB,SAAwB52B,EAAOg1B,EAAKka,EAAetqC,GAOjE,OANA8L,EAAM6pB,QAAQ0U,OAAOjvC,EAAOkvC,EAAela,GAAK,SAAUoD,EAAQlhC,GAChE,IAAI+0B,EAASrnB,EAAWwzB,EAAQlhC,GAChCwkC,GAAoChrB,EAAM6kC,YAAav1C,EAAMxE,KAAMywB,MAI9D,IAET+K,cAAe,SAAuBh3B,EAAOg1B,GAC3CtkB,EAAM6pB,QAAQ6V,SAASpwC,EAAOg1B,OASpCmgB,EAAK5hD,UAAUY,SAAW,WACxB,OAAQd,KAAKs1C,UAAUjqC,OAAS,WAAa,WAAarL,KAAKs1C,UAAUlqC,MAO3E02C,EAAK5hD,UAAUW,KAAO,WACpB,OAAOb,KAAKs1C,UAAUhqC,WAOxBw2C,EAAK5hD,UAAU+iD,WAAa,WAC1B,IACIC,EADaljD,KAAK4iD,UAAUrwB,QAAQ,IAAI9qB,EAAK,2BACzByM,OAAS,EACjC,OAAO,IAAI0pC,MAAOC,UAAYqF,GAOhCpB,EAAK5hD,UAAUijD,qBAAuB,WACpC,OAv2PFzvB,GADmDA,EAw2PvB,CACxB+kB,UAAWz4C,KAAKijD,gBAx2PD,IACD,UAAIvvB,EAAkB,YAAK,IAAIkqB,MAAOC,UACjDnqB,EAHgB,IAA4BA,GAi3PnDouB,EAAK5hD,UAAUq5C,cAAgB,SAAUvxC,EAAYnE,EAAMu/C,EAASzhB,GAElE3hC,KAAKiiD,kBACL,IAAI95C,EAAO,IAAIV,EAAKO,GACpBnE,EAAO7D,KAAKoiD,6BAA+BpiD,KAAKoiD,6BAA6Bp6C,EAAYnE,GAAQA,EACjG,IAAI+0B,EAAS,GAEb,GAAI+I,EACF,GAAIyhB,EAAS,CACX,IAAIC,EAAiB,YAAIx/C,GAAM,SAAUy/C,GACvC,OAAO1jC,GAAe0jC,MAExB1qB,EAAS54B,KAAKgjD,gBAAgB9gB,sBAAsB/5B,EAAMk7C,EAAgB1hB,OACrE,CACL,IAAI4hB,EAAa3jC,GAAe/b,GAChC+0B,EAAS54B,KAAKgjD,gBAAgBthB,0BAA0Bv5B,EAAMo7C,EAAY5hB,QAEvE,GAAIyhB,EAAS,CAClB,IAAI5rB,EAAkB,YAAI3zB,GAAM,SAAUy/C,GACxC,OAAO1jC,GAAe0jC,MAExB1qB,EAAS54B,KAAKgjD,gBAAgBxhB,iBAAiBr5B,EAAMqvB,OAChD,CACL,IAAI7W,EAAOf,GAAe/b,GAC1B+0B,EAAS54B,KAAKgjD,gBAAgBzhB,qBAAqBp5B,EAAMwY,GAG3D,IAAI8D,EAAetc,EAEfywB,EAAOt2B,OAAS,IAGlBmiB,EAAezkB,KAAKwjD,mBAAmBr7C,IAGzCkgC,GAAoCroC,KAAKkiD,YAAaz9B,EAAcmU,IAItEkpB,EAAK5hD,UAAUujD,qBAAuB,SAAUr5B,GAC9CpqB,KAAKoiD,6BAA+Bh4B,GAGtC03B,EAAK5hD,UAAUs5C,iBAAmB,SAAUkK,GAC1C1jD,KAAK+iD,YAAY,YAAaW,IAER,IAAlBA,GACF1jD,KAAK2jD,0BAIT7B,EAAK5hD,UAAUu5C,oBAAsB,SAAUrc,GAC7C,IAAI/f,EAAQrd,KAEZuF,EAAK63B,GAAS,SAAUh9B,EAAKC,GAC3Bgd,EAAM0lC,YAAY3iD,EAAKC,OAI3ByhD,EAAK5hD,UAAU6iD,YAAc,SAAU/6C,EAAY3H,GACjD,IAAI8H,EAAO,IAAIV,EAAK,UAAYO,GAC5B2L,EAAUiM,GAAevf,GAC7BL,KAAK4iD,UAAU9c,eAAe39B,EAAMwL,GACpC,IAAIilB,EAAS54B,KAAK6iD,cAActhB,qBAAqBp5B,EAAMwL,GAC3D00B,GAAoCroC,KAAKkiD,YAAa/5C,EAAMywB,IAG9DkpB,EAAK5hD,UAAU0jD,gBAAkB,WAC/B,OAAO5jD,KAAKmiD,gBAmBdL,EAAK5hD,UAAUqW,SAAW,SAAU5J,GAClC,IAAI0Q,EAAQrd,KAGR6jD,EAAS7jD,KAAKgjD,gBAAgBjf,eAAep3B,GAEjD,OAAc,MAAVk3C,EACKC,QAAQt4B,QAAQ,IAAI1K,GAAa+iC,EAAQl3C,EAAMgV,SAAUhV,EAAMiW,iBAAiBC,aAGlF7iB,KAAKknC,QAAQzmC,IAAIkM,GAAOwyC,MAAK,SAAUhH,GAC5C,IAAI/kC,EAAOwM,GAAeu4B,GAEtBvf,EAASvb,EAAM2lC,gBAAgBzhB,qBAAqB50B,EAAMxE,KAAMiL,GAGpE,OADA80B,GAA4B7qB,EAAM6kC,YAAav1C,EAAMxE,KAAMywB,GACpDkrB,QAAQt4B,QAAQ,IAAI1K,GAAa1N,EAAMzG,EAAMgV,SAAUhV,EAAMiW,iBAAiBC,gBACpF,SAAU4I,GAGX,OAFApO,EAAM8tB,KAAK,iBAAmB,YAAUx+B,GAAS,YAAc8e,GAExDq4B,QAAQp4B,OAAO,IAAIhoB,MAAM+nB,QAIpCq2B,EAAK5hD,UAAU2R,gBAAkB,SAAU1J,EAAM47C,EAAQ9lC,EAAa1M,GACpE,IAAI8L,EAAQrd,KAEZA,KAAKmrC,KAAK,MAAO,CACfhjC,KAAMA,EAAKrH,WACXT,MAAO0jD,EACPv0C,SAAUyO,IAIZ,IAAIuP,EAAextB,KAAKmjD,uBACpBa,EAAoBpkC,GAAemkC,EAAQ9lC,GAC3C6P,EAAW9tB,KAAKgjD,gBAAgB31B,uBAAuBllB,GACvDwL,EAAUya,GAA6B41B,EAAmBl2B,EAAUN,GACpEgR,EAAUx+B,KAAK4jD,kBACfhrB,EAAS54B,KAAKgjD,gBAAgB/hB,mBAAmB94B,EAAMwL,EAAS6qB,GAAS,GAC7EsJ,GAAsB9nC,KAAKkiD,YAAatpB,GACxC54B,KAAKknC,QAAQ+R,IAAI9wC,EAAKrH,WAAYkjD,EAAkB9vC,KAEpD,IAAO,SAAU6wB,EAAQwY,GACvB,IAAI0G,EAAqB,OAAXlf,EAETkf,GACHtgD,EAAK,UAAYwE,EAAO,YAAc48B,GAGxC,IAAImf,EAAc7mC,EAAM2lC,gBAAgBrtB,aAAa6I,GAAUylB,GAE/D5b,GAAoChrB,EAAM6kC,YAAa/5C,EAAM+7C,GAE7D7mC,EAAM8mC,uBAAuB5yC,EAAYwzB,EAAQwY,MAEnD,IAAI94B,EAAezkB,KAAKokD,mBAAmBj8C,GAC3CnI,KAAKwjD,mBAAmB/+B,GAExB4jB,GAAoCroC,KAAKkiD,YAAaz9B,EAAc,KAGtEq9B,EAAK5hD,UAAU4B,OAAS,SAAUqG,EAAMk8C,EAAiB9yC,GACvD,IAAI8L,EAAQrd,KAEZA,KAAKmrC,KAAK,SAAU,CAClBhjC,KAAMA,EAAKrH,WACXT,MAAOgkD,IAGT,IAAIxnB,GAAQ,EACRrP,EAAextB,KAAKmjD,uBACpB3rB,EAAkB,GAMtB,GALAjyB,EAAK8+C,GAAiB,SAAUC,EAAYC,GAC1C1nB,GAAQ,EACRrF,EAAgB8sB,GAAcp2B,GAAyBnlB,EAAUZ,EAAMm8C,GAAa1kC,GAAe2kC,GAAelnC,EAAM2lC,gBAAiBx1B,MAGtIqP,EA0BHz5B,EAAI,wDACJpD,KAAKmkD,uBAAuB5yC,EAAY,UA3B9B,CACV,IAAIizC,EAAYxkD,KAAK4jD,kBACjBhrB,EAAS54B,KAAKgjD,gBAAgB5hB,eAAej5B,EAAMqvB,EAAiBgtB,GACxE1c,GAAsB9nC,KAAKkiD,YAAatpB,GACxC54B,KAAKknC,QAAQ1R,MAAMrtB,EAAKrH,WAAYujD,GAAiB,SAAUtf,EAAQwY,GACrE,IAAI0G,EAAqB,OAAXlf,EAETkf,GACHtgD,EAAK,aAAewE,EAAO,YAAc48B,GAG3C,IAAImf,EAAc7mC,EAAM2lC,gBAAgBrtB,aAAa6uB,GAAYP,GAE7Dx/B,EAAey/B,EAAY5hD,OAAS,EAAI+a,EAAMmmC,mBAAmBr7C,GAAQA,EAC7EkgC,GAAoChrB,EAAM6kC,YAAaz9B,EAAcy/B,GAErE7mC,EAAM8mC,uBAAuB5yC,EAAYwzB,EAAQwY,MAEnDh4C,EAAK8+C,GAAiB,SAAU/b,GAC9B,IAAI7jB,EAAepH,EAAM+mC,mBAAmBr7C,EAAUZ,EAAMmgC,IAE5DjrB,EAAMmmC,mBAAmB/+B,MAG3B4jB,GAAoCroC,KAAKkiD,YAAa/5C,EAAM,MAWhE25C,EAAK5hD,UAAUyjD,uBAAyB,WACtC,IAAItmC,EAAQrd,KAEZA,KAAKmrC,KAAK,sBACV,IAAI3d,EAAextB,KAAKmjD,uBACpBsB,EAA2B,IAAIj2B,GACnCxuB,KAAK0rC,cAActc,YAAYnnB,KAAgB,SAAUE,EAAMiL,GAC7D,IAAIsxC,EAAWx2B,GAAyB/lB,EAAMiL,EAAMiK,EAAM2lC,gBAAiBx1B,GAC3Ei3B,EAAyB31B,SAAS3mB,EAAMu8C,MAE1C,IAAI9rB,EAAS,GACb6rB,EAAyBr1B,YAAYnnB,KAAgB,SAAUE,EAAMwY,GACnEiY,EAASA,EAAO+B,OAAOtd,EAAM2lC,gBAAgBzhB,qBAAqBp5B,EAAMwY,IAExE,IAAI8D,EAAepH,EAAM+mC,mBAAmBj8C,GAE5CkV,EAAMmmC,mBAAmB/+B,MAE3BzkB,KAAK0rC,cAAgB,IAAIld,GACzB6Z,GAAoCroC,KAAKkiD,YAAaj6C,IAAgB2wB,IAGxEkpB,EAAK5hD,UAAUuR,mBAAqB,SAAUtJ,EAAMoJ,GAClD,IAAI8L,EAAQrd,KAEZA,KAAKknC,QAAQz1B,mBAAmBtJ,EAAKrH,YAAY,SAAUikC,EAAQwY,GAClD,OAAXxY,GACF1nB,EAAMquB,cAAc1c,OAAO7mB,GAG7BkV,EAAM8mC,uBAAuB5yC,EAAYwzB,EAAQwY,OAIrDuE,EAAK5hD,UAAU0R,gBAAkB,SAAUzJ,EAAM9H,EAAOkR,GACtD,IAAI8L,EAAQrd,KAER2T,EAAUiM,GAAevf,GAC7BL,KAAKknC,QAAQkS,gBAAgBjxC,EAAKrH,WAAY6S,EAAQO,KAEtD,IAAO,SAAU6wB,EAAQwY,GACR,OAAXxY,GACF1nB,EAAMquB,cAAc5c,SAAS3mB,EAAMwL,GAGrC0J,EAAM8mC,uBAAuB5yC,EAAYwzB,EAAQwY,OAIrDuE,EAAK5hD,UAAU4R,4BAA8B,SAAU3J,EAAM9H,EAAOmP,EAAU+B,GAC5E,IAAI8L,EAAQrd,KAER2T,EAAUiM,GAAevf,EAAOmP,GACpCxP,KAAKknC,QAAQkS,gBAAgBjxC,EAAKrH,WAAY6S,EAAQO,KAEtD,IAAO,SAAU6wB,EAAQwY,GACR,OAAXxY,GACF1nB,EAAMquB,cAAc5c,SAAS3mB,EAAMwL,GAGrC0J,EAAM8mC,uBAAuB5yC,EAAYwzB,EAAQwY,OAIrDuE,EAAK5hD,UAAU+R,mBAAqB,SAAU9J,EAAMk8C,EAAiB9yC,GACnE,IAAI8L,EAAQrd,KAEZ,GAAI,YAAQqkD,GAGV,OAFAjhD,EAAI,4EACJpD,KAAKmkD,uBAAuB5yC,EAAY,MAI1CvR,KAAKknC,QAAQmS,kBAAkBlxC,EAAKrH,WAAYujD,GAAiB,SAAUtf,EAAQwY,GAClE,OAAXxY,GACFx/B,EAAK8+C,GAAiB,SAAU5uC,EAAWI,GACzC,IAAIE,EAAe6J,GAAe/J,GAElCwH,EAAMquB,cAAc5c,SAAS/lB,EAAUZ,EAAMsN,GAAYM,MAI7DsH,EAAM8mC,uBAAuB5yC,EAAYwzB,EAAQwY,OAIrDuE,EAAK5hD,UAAU4qB,yBAA2B,SAAUne,EAAOkV,GACzD,IAAI+W,EAGFA,EAD+B,UAA7B1wB,EAAayE,EAAMxE,MACZnI,KAAK6iD,cAAczoB,qBAAqBztB,EAAOkV,GAE/C7hB,KAAKgjD,gBAAgB5oB,qBAAqBztB,EAAOkV,GAG5DqmB,GAA4BloC,KAAKkiD,YAAav1C,EAAMxE,KAAMywB,IAG5DkpB,EAAK5hD,UAAU+qB,4BAA8B,SAAUte,EAAOkV,GAG5D,IAAI+W,EAGFA,EAD+B,UAA7B1wB,EAAayE,EAAMxE,MACZnI,KAAK6iD,cAAcxoB,wBAAwB1tB,EAAOkV,GAElD7hB,KAAKgjD,gBAAgB3oB,wBAAwB1tB,EAAOkV,GAG/DqmB,GAA4BloC,KAAKkiD,YAAav1C,EAAMxE,KAAMywB,IAG5DkpB,EAAK5hD,UAAUm/C,UAAY,WACrBr/C,KAAKsiD,uBACPtiD,KAAKsiD,sBAAsBjD,UAreV,mBAyerByC,EAAK5hD,UAAUo/C,OAAS,WAClBt/C,KAAKsiD,uBACPtiD,KAAKsiD,sBAAsBhD,OA3eV,mBA+erBwC,EAAK5hD,UAAUqnC,MAAQ,SAAUod,GAK/B,QAJkB,IAAdA,IACFA,GAAY,GAGS,oBAAZ/E,QAAX,CAIA,IAAIrY,EAEAod,GACG3kD,KAAKonC,iBACRpnC,KAAKonC,eAAiB,IAAIT,GAAc3mC,KAAKorC,SAG/C7D,EAAQvnC,KAAKonC,eAAe3mC,OAE5B8mC,EAAQvnC,KAAKorC,OAAO3qC,MAGtB,IAAImkD,EAAcp6C,OAAO3F,KAAK0iC,GAAOsd,QAAO,SAAUC,EAAeC,GACnE,OAAO/+C,KAAKsE,IAAIy6C,EAAaziD,OAAQwiD,KACpC,GACHv/C,EAAKgiC,GAAO,SAAUR,EAAM1mC,GAG1B,IAFA,IAAI2kD,EAAaje,EAERvkC,EAAIukC,EAAKzkC,OAAQE,EAAIoiD,EAAc,EAAGpiD,IAC7CwiD,GAAc,IAGhBpF,QAAQx8C,IAAI4hD,EAAa3kD,QAI7ByhD,EAAK5hD,UAAU+kD,sBAAwB,SAAUC,GAC/CllD,KAAKorC,OAAOlF,iBAAiBgf,GAC7BllD,KAAK2iD,eAAerb,YAAY4d,IAGlCpD,EAAK5hD,UAAUirC,KAAO,WAGpB,IAFA,IAAIhpC,EAAU,GAELC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACtCD,EAAQC,GAAMC,UAAUD,GAG1B,IAAImB,EAAS,GAETvD,KAAKsiD,wBACP/+C,EAASvD,KAAKsiD,sBAAsBziD,GAAK,KAG3CuD,EAAIR,WAAM,EAAQ,YAAS,CAACW,GAASpB,KAGvC2/C,EAAK5hD,UAAUikD,uBAAyB,SAAU/5B,EAAU2a,EAAQwY,GAC9DnzB,GACFjjB,GAAe,WACb,GAAe,OAAX49B,EACF3a,EAAS,UACJ,CACL,IAAI4a,GAAQD,GAAU,SAASG,cAC3B3iC,EAAUyiC,EAEVuY,IACFh7C,GAAW,KAAOg7C,GAGpB,IAAI/5C,EAAQ,IAAIE,MAAMnB,GAEtBiB,EAAMwhC,KAAOA,EACb5a,EAAS5mB,QAMjBgH,OAAOC,eAAeq3C,EAAK5hD,UAAW,WAAY,CAChDO,IAAK,WACH,OAAOT,KAAKmlD,aAAenlD,KAAKmlD,WAAa,IAAIC,GAASplD,QAE5D0K,YAAY,EACZC,cAAc,IAYhBm3C,EAAK5hD,UAAUmlD,iBAAmB,SAAUl9C,EAAMm9C,EAAmB/zC,EAAYg0C,GAC/EvlD,KAAKmrC,KAAK,kBAAoBhjC,GAE9B,IAAI6iB,EAAgB,aAEhBw6B,EAAW,IAAIC,GAAUzlD,KAAMmI,GACnCq9C,EAASr7B,GAAG,QAASa,GAErB,IAKI06B,EAAc,CAChBv9C,KAAMA,EACNrG,OAAQwjD,EACR/zC,WAAYA,EAEZwzB,OAAQ,KAGR4gB,MAAOjkD,IAEP6jD,aAAcA,EAEdK,WAAY,EAEZC,UAnBc,WACdL,EAASz6B,IAAI,QAASC,IAoBtB86B,YAAa,KACbC,eAAgB,KAChBC,qBAAsB,KACtBC,yBAA0B,KAC1BC,8BAA+B,MAG7BC,EAAenmD,KAAKomD,gBAAgBj+C,GACxCu9C,EAAYM,qBAAuBG,EACnC,IAAIpC,EAAS2B,EAAY5jD,OAAOqkD,EAAajyC,OAE7C,QAAerE,IAAXk0C,GAMF,GAJA2B,EAAYG,YACZH,EAAYO,yBAA2B,KACvCP,EAAYQ,8BAAgC,KAExCR,EAAYn0C,WAAY,CAE1B,IAAIa,EAAW,IAAI0O,GAAa4kC,EAAYM,qBAAsB,IAAIP,GAAUzlD,KAAM0lD,EAAYv9C,MAAOmP,IACzGouC,EAAYn0C,WAAW,MAAM,EAAOa,QAEjC,CACLtC,GAAqB,qCAAsCi0C,EAAQ2B,EAAYv9C,MAE/Eu9C,EAAY3gB,OAASkN,GAAkBoU,IACvC,IAAIC,EAAYtmD,KAAKqiD,sBAAsBpB,QAAQ94C,GAC/Co+C,EAAYD,EAAU/vC,YAAc,GACxCgwC,EAAUxhD,KAAK2gD,GACfY,EAAUnF,SAASoF,GAKnB,IAAIC,OAAkB,EAEtB,GAAsB,iBAAXzC,GAAkC,OAAXA,GAAmB,YAASA,EAAQ,aAEpEyC,EAAkB,YAAQzC,EAAQ,aAClC,YAAOx0C,GAAgBi3C,GAAkB,yHAGzCA,GADkBxmD,KAAKgjD,gBAAgB31B,uBAAuBllB,IAASyV,GAAaxI,YACtDJ,cAAcd,MAG9C,IAAIsZ,EAAextB,KAAKmjD,uBACpBa,EAAoBpkC,GAAemkC,EAAQyC,GAC3C7yC,EAAUya,GAA6B41B,EAAmBmC,EAAc34B,GAC5Ek4B,EAAYO,yBAA2BjC,EACvC0B,EAAYQ,8BAAgCvyC,EAC5C+xC,EAAYK,eAAiB/lD,KAAK4jD,kBAClC,IAAIhrB,EAAS54B,KAAKgjD,gBAAgB/hB,mBAAmB94B,EAAMwL,EAAS+xC,EAAYK,eAAgBL,EAAYH,cAC5Gld,GAAoCroC,KAAKkiD,YAAa/5C,EAAMywB,GAC5D54B,KAAKymD,2BAQT3E,EAAK5hD,UAAUkmD,gBAAkB,SAAUj+C,EAAMu+C,GAC/C,OAAO1mD,KAAKgjD,gBAAgB31B,uBAAuBllB,EAAMu+C,IAAgB9oC,GAAaxI,YAaxF0sC,EAAK5hD,UAAUumD,uBAAyB,SAAUrzC,GAChD,IAAIiK,EAAQrd,KAWZ,QATa,IAAToT,IACFA,EAAOpT,KAAKqiD,uBAITjvC,GACHpT,KAAK2mD,qCAAqCvzC,GAGpB,OAApBA,EAAKmD,WAAqB,CAC5B,IAAIqwC,EAAQ5mD,KAAK6mD,uBAAuBzzC,GACxC,YAAOwzC,EAAMtkD,OAAS,EAAG,yCACZskD,EAAM5iC,OAAM,SAAU0hC,GACjC,OAAOA,EAAY3gB,SAAWkN,GAAkBoU,QAIhDrmD,KAAK8mD,sBAAsB1zC,EAAKjL,OAAQy+C,QAEjCxzC,EAAKqO,eACdrO,EAAK+C,cAAa,SAAUN,GAC1BwH,EAAMopC,uBAAuB5wC,OAanCisC,EAAK5hD,UAAU4mD,sBAAwB,SAAU3+C,EAAMy+C,GAWrD,IAVA,IAAIvpC,EAAQrd,KAGR+mD,EAAeH,EAAMhiB,KAAI,SAAUoiB,GACrC,OAAOA,EAAIjB,kBAETkB,EAAcjnD,KAAKomD,gBAAgBj+C,EAAM4+C,GACzCG,EAAaD,EACbE,EAAaF,EAAYzwC,OAEpBhU,EAAI,EAAGA,EAAIokD,EAAMtkD,OAAQE,IAAK,CACrC,IAAIwkD,EAAMJ,EAAMpkD,GAChB,YAAOwkD,EAAIjiB,SAAWkN,GAAkBoU,IAAK,iEAC7CW,EAAIjiB,OAASkN,GAAkBmV,KAC/BJ,EAAIpB,aACJ,IAAIt1B,EAAennB,EAAgBhB,EAAM6+C,EAAI7+C,MAE7C++C,EAAaA,EAAWlxC,YAAYsa,EAElC02B,EAAIf,0BAGR,IAAIoB,EAAaH,EAAWhzC,KAAI,GAC5BozC,EAAan/C,EAEjBnI,KAAKknC,QAAQ+R,IAAIqO,EAAWxmD,WAAYumD,GAAY,SAAUtiB,GAC5D1nB,EAAM8tB,KAAK,2BAA4B,CACrChjC,KAAMm/C,EAAWxmD,WACjBikC,OAAQA,IAGV,IAAInM,EAAS,GAEb,GAAe,OAAXmM,EAAiB,CAMnB,IAFA,IAAIra,EAAY,GAEPloB,EAAI,EAAGA,EAAIokD,EAAMtkD,OAAQE,IAAK,CAIrC,GAHAokD,EAAMpkD,GAAGuiC,OAASkN,GAAkBsV,UACpC3uB,EAASA,EAAO+B,OAAOtd,EAAM2lC,gBAAgBrtB,aAAaixB,EAAMpkD,GAAGujD,iBAE/Da,EAAMpkD,GAAG+O,WAAY,CAGvB,IAAI6B,EAAOwzC,EAAMpkD,GAAG0jD,8BAChBlkC,EAAM,IAAIyjC,GAAUpoC,EAAOupC,EAAMpkD,GAAG2F,MACpCiK,EAAW,IAAI0O,GAAa1N,EAAM4O,EAAK1K,IAC3CoT,EAAU3lB,KAAK6hD,EAAMpkD,GAAG+O,WAAWlO,KAAK,KAAM,MAAM,EAAM+O,IAG5Dw0C,EAAMpkD,GAAGqjD,YAIXxoC,EAAMspC,qCAAqCtpC,EAAMglC,sBAAsBpB,QAAQ94C,IAG/EkV,EAAMopC,yBAENpe,GAAoChrB,EAAM6kC,YAAa/5C,EAAMywB,GAE7D,IAASp2B,EAAI,EAAGA,EAAIkoB,EAAUpoB,OAAQE,IACpC2E,EAAeujB,EAAUloB,QAEtB,CAEL,GAAe,cAAXuiC,EACF,IAASviC,EAAI,EAAGA,EAAIokD,EAAMtkD,OAAQE,IAC5BokD,EAAMpkD,GAAGuiC,SAAWkN,GAAkBuV,iBACxCZ,EAAMpkD,GAAGuiC,OAASkN,GAAkBwV,YAEpCb,EAAMpkD,GAAGuiC,OAASkN,GAAkBoU,QAGnC,CACL1iD,EAAK,kBAAoB2jD,EAAWxmD,WAAa,YAAcikC,GAE/D,IAASviC,EAAI,EAAGA,EAAIokD,EAAMtkD,OAAQE,IAChCokD,EAAMpkD,GAAGuiC,OAASkN,GAAkBwV,YACpCb,EAAMpkD,GAAGsjD,YAAc/gB,EAI3B1nB,EAAMmmC,mBAAmBr7C,MAE1Bg/C,IAeLrF,EAAK5hD,UAAUsjD,mBAAqB,SAAUlb,GAC5C,IAAIof,EAA0B1nD,KAAK2nD,4BAA4Brf,GAC3DngC,EAAOu/C,EAAwBv/C,OAC/By+C,EAAQ5mD,KAAK6mD,uBAAuBa,GAExC,OADA1nD,KAAK4nD,uBAAuBhB,EAAOz+C,GAC5BA,GAWT25C,EAAK5hD,UAAU0nD,uBAAyB,SAAUhB,EAAOz+C,GACvD,GAAqB,IAAjBy+C,EAAMtkD,OAAV,CAiBA,IAVA,IAqEeujD,EArEXn7B,EAAY,GACZkO,EAAS,GAKTmuB,EAHcH,EAAM5tB,QAAO,SAAUyiB,GACvC,OAAOA,EAAE1W,SAAWkN,GAAkBoU,OAETzhB,KAAI,SAAU6W,GAC3C,OAAOA,EAAEsK,kBAGFvjD,EAAI,EAAGA,EAAIokD,EAAMtkD,OAAQE,IAAK,CACrC,IAAIkjD,EAAckB,EAAMpkD,GACpB8tB,EAAennB,EAAgBhB,EAAMu9C,EAAYv9C,MACjD0/C,GAAmB,EACnB/B,OAAc,EAGlB,GAFA,YAAwB,OAAjBx1B,EAAuB,iEAE1Bo1B,EAAY3gB,SAAWkN,GAAkBwV,YAC3CI,GAAmB,EACnB/B,EAAcJ,EAAYI,YAC1BltB,EAASA,EAAO+B,OAAO36B,KAAKgjD,gBAAgBrtB,aAAa+vB,EAAYK,gBAAgB,SAChF,GAAIL,EAAY3gB,SAAWkN,GAAkBoU,IAClD,GAAIX,EAAYE,YAz2BM,GA02BpBiC,GAAmB,EACnB/B,EAAc,WACdltB,EAASA,EAAO+B,OAAO36B,KAAKgjD,gBAAgBrtB,aAAa+vB,EAAYK,gBAAgB,QAChF,CAEL,IAAI+B,EAAc9nD,KAAKomD,gBAAgBV,EAAYv9C,KAAM4+C,GACzDrB,EAAYM,qBAAuB8B,EACnC,IAAI5mB,EAAU0lB,EAAMpkD,GAAGV,OAAOgmD,EAAY5zC,OAE1C,QAAgBrE,IAAZqxB,EAAuB,CACzBpxB,GAAqB,qCAAsCoxB,EAASwkB,EAAYv9C,MAChF,IAAI4/C,EAAcnoC,GAAeshB,GACY,iBAAZA,GAAmC,MAAXA,GAAmB,YAASA,EAAS,eAI5F6mB,EAAcA,EAAYzyC,eAAewyC,EAAY9yC,gBAGvD,IAAIgzC,EAAatC,EAAYK,eACzBv4B,EAAextB,KAAKmjD,uBACpB8E,EAAkB75B,GAA6B25B,EAAaD,EAAat6B,GAC7Ek4B,EAAYO,yBAA2B8B,EACvCrC,EAAYQ,8BAAgC+B,EAC5CvC,EAAYK,eAAiB/lD,KAAK4jD,kBAElCmD,EAAa/nB,OAAO+nB,EAAan7C,QAAQo8C,GAAa,GAEtDpvB,GADAA,EAASA,EAAO+B,OAAO36B,KAAKgjD,gBAAgB/hB,mBAAmBykB,EAAYv9C,KAAM8/C,EAAiBvC,EAAYK,eAAgBL,EAAYH,gBAC1H5qB,OAAO36B,KAAKgjD,gBAAgBrtB,aAAaqyB,GAAY,SAErEH,GAAmB,EACnB/B,EAAc,SACdltB,EAASA,EAAO+B,OAAO36B,KAAKgjD,gBAAgBrtB,aAAa+vB,EAAYK,gBAAgB,IAQ3F,GAHA1d,GAAoCroC,KAAKkiD,YAAa/5C,EAAMywB,GAC5DA,EAAS,GAELivB,IAEFjB,EAAMpkD,GAAGuiC,OAASkN,GAAkBsV,UAIzB1B,EAERe,EAAMpkD,GAAGqjD,UADVz+C,WAAWy+C,EAAW7/C,KAAKI,MAAM,IAG/BwgD,EAAMpkD,GAAG+O,YACX,GAAoB,WAAhBu0C,EAA0B,CAC5B,IAAI9jC,EAAM,IAAIyjC,GAAUzlD,KAAM4mD,EAAMpkD,GAAG2F,MAEnC+/C,EAEFtB,EAAMpkD,GAAGwjD,qBACP5zC,EAAW,IAAI0O,GAAaonC,EAAWlmC,EAAK1K,IAChDoT,EAAU3lB,KAAK6hD,EAAMpkD,GAAG+O,WAAWlO,KAAK,KAAM,MAAM,EAAO+O,SAE3DsY,EAAU3lB,KAAK6hD,EAAMpkD,GAAG+O,WAAWlO,KAAK,KAAM,IAAIK,MAAMoiD,IAAc,EAAO,OAOrF9lD,KAAK2mD,qCAAqC3mD,KAAKqiD,uBAE/C,IAAS7/C,EAAI,EAAGA,EAAIkoB,EAAUpoB,OAAQE,IACpC2E,EAAeujB,EAAUloB,IAI3BxC,KAAKymD,2BAYP3E,EAAK5hD,UAAUynD,4BAA8B,SAAUx/C,GACrD,IAAI8N,EAGAkyC,EAAkBnoD,KAAKqiD,sBAG3B,IAFApsC,EAAQ/N,EAAaC,GAEJ,OAAV8N,GAAiD,OAA/BkyC,EAAgB5xC,YACvC4xC,EAAkBA,EAAgBlH,QAAQhrC,GAE1CA,EAAQ/N,EADRC,EAAOE,EAAaF,IAItB,OAAOggD,GAWTrG,EAAK5hD,UAAU2mD,uBAAyB,SAAUsB,GAEhD,IAAIC,EAAmB,GAMvB,OALApoD,KAAKqoD,mCAAmCF,EAAiBC,GAEzDA,EAAiBpjD,MAAK,SAAUZ,EAAGC,GACjC,OAAOD,EAAEuhD,MAAQthD,EAAEshD,SAEdyC,GAGTtG,EAAK5hD,UAAUmoD,mCAAqC,SAAUj1C,EAAMwzC,GAClE,IAAIvpC,EAAQrd,KAERumD,EAAYnzC,EAAKmD,WAErB,GAAkB,OAAdgwC,EACF,IAAK,IAAI/jD,EAAI,EAAGA,EAAI+jD,EAAUjkD,OAAQE,IACpCokD,EAAM7hD,KAAKwhD,EAAU/jD,IAIzB4Q,EAAK+C,cAAa,SAAUvL,GAC1ByS,EAAMgrC,mCAAmCz9C,EAAOg8C,OAQpD9E,EAAK5hD,UAAUymD,qCAAuC,SAAUvzC,GAC9D,IAAIiK,EAAQrd,KAER4mD,EAAQxzC,EAAKmD,WAEjB,GAAIqwC,EAAO,CAGT,IAFA,IAAI0B,EAAK,EAEA70B,EAAO,EAAGA,EAAOmzB,EAAMtkD,OAAQmxB,IAClCmzB,EAAMnzB,GAAMsR,SAAWkN,GAAkBsV,YAC3CX,EAAM0B,GAAM1B,EAAMnzB,GAClB60B,KAIJ1B,EAAMtkD,OAASgmD,EACfl1C,EAAK+tC,SAASyF,EAAMtkD,OAAS,EAAIskD,EAAQ,MAG3CxzC,EAAK+C,cAAa,SAAUN,GAC1BwH,EAAMspC,qCAAqC9wC,OAY/CisC,EAAK5hD,UAAUkkD,mBAAqB,SAAUj8C,GAC5C,IAAIkV,EAAQrd,KAERykB,EAAezkB,KAAK2nD,4BAA4Bx/C,GAAMA,OACtDggD,EAAkBnoD,KAAKqiD,sBAAsBpB,QAAQ94C,GAQzD,OAPAggD,EAAgB3G,iBAAgB,SAAUpuC,GACxCiK,EAAMkrC,yBAAyBn1C,MAEjCpT,KAAKuoD,yBAAyBJ,GAC9BA,EAAgB9G,mBAAkB,SAAUjuC,GAC1CiK,EAAMkrC,yBAAyBn1C,MAE1BqR,GASTq9B,EAAK5hD,UAAUqoD,yBAA2B,SAAUn1C,GAClD,IAAIwzC,EAAQxzC,EAAKmD,WAEjB,GAAc,OAAVqwC,EAAgB,CAUlB,IANA,IAAIl8B,EAAY,GAGZkO,EAAS,GACT4vB,GAAY,EAEPhmD,EAAI,EAAGA,EAAIokD,EAAMtkD,OAAQE,IAChC,GAAIokD,EAAMpkD,GAAGuiC,SAAWkN,GAAkBuV,uBAAwB,GAAIZ,EAAMpkD,GAAGuiC,SAAWkN,GAAkBmV,KAC1G,YAAOoB,IAAahmD,EAAI,EAAG,mDAC3BgmD,EAAWhmD,EAEXokD,EAAMpkD,GAAGuiC,OAASkN,GAAkBuV,iBACpCZ,EAAMpkD,GAAGsjD,YAAc,WAOvB,GALA,YAAOc,EAAMpkD,GAAGuiC,SAAWkN,GAAkBoU,IAAK,0CAElDO,EAAMpkD,GAAGqjD,YACTjtB,EAASA,EAAO+B,OAAO36B,KAAKgjD,gBAAgBrtB,aAAaixB,EAAMpkD,GAAGujD,gBAAgB,IAE9Ea,EAAMpkD,GAAG+O,WAAY,CAEvBmZ,EAAU3lB,KAAK6hD,EAAMpkD,GAAG+O,WAAWlO,KAAK,KAAM,IAAIK,MAAM,QAAQ,EADjD,QAMH,IAAd8kD,EAEFp1C,EAAK+tC,SAAS,MAGdyF,EAAMtkD,OAASkmD,EAAW,EAI5BngB,GAAoCroC,KAAKkiD,YAAa9uC,EAAKjL,OAAQywB,GAEnE,IAASp2B,EAAI,EAAGA,EAAIkoB,EAAUpoB,OAAQE,IACpC2E,EAAeujB,EAAUloB,MAKxBs/C,EAnkCT,GAulCI2D,GAEJ,SAAUxxC,GAWR,SAASwxC,EAAUh8B,EAAMthB,GAGvB,KAAMshB,aAAgBq4B,IACpB,MAAM,IAAIp+C,MAAM,6DAKlB,OADQuQ,EAAOlF,KAAK/O,KAAMypB,EAAMthB,EAAM,IAAIsf,IAAe,IAAUznB,KAwOrE,OA1PA,YAAUylD,EAAWxxC,GAwBrBwxC,EAAUvlD,UAAUwhB,OAAS,WAG3B,OAFA,YAAiB,gBAAiB,EAAG,EAAGrf,UAAUC,QAE9C4G,EAAYlJ,KAAKmI,MACZ,KAEAG,EAAYtI,KAAKmI,OAI5Bs9C,EAAUvlD,UAAU0K,MAAQ,SAAU5C,GAapC,OAZA,YAAiB,kBAAmB,EAAG,EAAG3F,UAAUC,QAE1B,iBAAf0F,EACTA,EAAaS,OAAOT,GACTA,aAAsBP,IACD,OAA5BS,EAAalI,KAAKmI,MACpB2I,GAAuB,kBAAmB,EAAG9I,GAAY,GAEzD6I,GAAmB,kBAAmB,EAAG7I,GAAY,IAIlD,IAAIy9C,EAAUzlD,KAAKypB,KAAM1gB,EAAU/I,KAAKmI,KAAMH,KAKvDy9C,EAAUvlD,UAAU+hB,UAAY,WAC9B,YAAiB,mBAAoB,EAAG,EAAG5f,UAAUC,QACrD,IAAImmD,EAAa5/C,EAAW7I,KAAKmI,MACjC,OAAsB,OAAfsgD,EAAsB,KAAO,IAAIhD,EAAUzlD,KAAKypB,KAAMg/B,IAK/DhD,EAAUvlD,UAAUwoD,QAAU,WAC5B,YAAiB,iBAAkB,EAAG,EAAGrmD,UAAUC,QAGnD,IAFA,IAAI0f,EAAMhiB,KAEiB,OAApBgiB,EAAIC,aACTD,EAAMA,EAAIC,YAGZ,OAAOD,GAKTyjC,EAAUvlD,UAAUyoD,aAAe,WACjC,OAAO3oD,KAAKypB,KAAKm/B,UAGnBnD,EAAUvlD,UAAUC,IAAM,SAAU4jD,EAAQxyC,GAC1C,YAAiB,gBAAiB,EAAG,EAAGlP,UAAUC,QAClDyO,GAAqB,gBAAiB/Q,KAAKmI,MAC3CsH,GAAwB,gBAAiB,EAAGs0C,EAAQ/jD,KAAKmI,MAAM,GAC/D,YAAiB,gBAAiB,EAAGoJ,GAAY,GACjD,IAAIC,EAAW,IAAI,IAInB,OAHAxR,KAAKypB,KAAK5X,gBAAgB7R,KAAKmI,KAAM47C,EAErC,KAAMvyC,EAASE,aAAaH,IACrBC,EAASG,SAGlB8zC,EAAUvlD,UAAU4B,OAAS,SAAUiQ,EAAeR,GAIpD,GAHA,YAAiB,mBAAoB,EAAG,EAAGlP,UAAUC,QACrDyO,GAAqB,mBAAoB/Q,KAAKmI,MAE1CzF,MAAMC,QAAQoP,GAAgB,CAGhC,IAFA,IAAIC,EAAmB,GAEdxP,EAAI,EAAGA,EAAIuP,EAAczP,SAAUE,EAC1CwP,EAAiB,GAAKxP,GAAKuP,EAAcvP,GAG3CuP,EAAgBC,EAChBrO,EAAK,wMAGPwM,GAA6B,mBAAoB,EAAG4B,EAAe/R,KAAKmI,MAAM,GAC9E,YAAiB,mBAAoB,EAAGoJ,GAAY,GACpD,IAAIC,EAAW,IAAI,IAEnB,OADAxR,KAAKypB,KAAK3nB,OAAO9B,KAAKmI,KAAM4J,EAAeP,EAASE,aAAaH,IAC1DC,EAASG,SAGlB8zC,EAAUvlD,UAAU2R,gBAAkB,SAAUkyC,EAAQ9lC,EAAa1M,GAOnE,GANA,YAAiB,4BAA6B,EAAG,EAAGlP,UAAUC,QAC9DyO,GAAqB,4BAA6B/Q,KAAKmI,MACvDsH,GAAwB,4BAA6B,EAAGs0C,EAAQ/jD,KAAKmI,MAAM,GAC3EsI,GAAiB,4BAA6B,EAAGwN,GAAa,GAC9D,YAAiB,4BAA6B,EAAG1M,GAAY,GAEvC,YAAlBvR,KAAK0hB,UAA4C,UAAlB1hB,KAAK0hB,SACtC,KAAM,qCAAuC1hB,KAAK0hB,SAAW,0BAG/D,IAAIlQ,EAAW,IAAI,IAEnB,OADAxR,KAAKypB,KAAK5X,gBAAgB7R,KAAKmI,KAAM47C,EAAQ9lC,EAAazM,EAASE,aAAaH,IACzEC,EAASG,SAGlB8zC,EAAUvlD,UAAUU,OAAS,SAAU2Q,GAIrC,OAHA,YAAiB,mBAAoB,EAAG,EAAGlP,UAAUC,QACrDyO,GAAqB,mBAAoB/Q,KAAKmI,MAC9C,YAAiB,mBAAoB,EAAGoJ,GAAY,GAC7CvR,KAAKG,IAAI,KAAMoR,IAGxBk0C,EAAUvlD,UAAUwlD,YAAc,SAAUJ,EAAmB/zC,EAAYg0C,GASzE,GARA,YAAiB,wBAAyB,EAAG,EAAGljD,UAAUC,QAC1DyO,GAAqB,wBAAyB/Q,KAAKmI,MACnD,YAAiB,wBAAyB,EAAGm9C,GAAmB,GAChE,YAAiB,wBAAyB,EAAG/zC,GAAY,GAGzDL,GAAgB,wBAAyB,EAAGq0C,GAAc,GAEpC,YAAlBvlD,KAAK0hB,UAA4C,UAAlB1hB,KAAK0hB,SACtC,KAAM,iCAAmC1hB,KAAK0hB,SAAW,+BAGtC7R,IAAjB01C,IACFA,GAAe,GAGjB,IAAI/zC,EAAW,IAAI,IAEO,mBAAfD,GACTC,EAASG,QAAQ2Z,OAAM,eAGzB,IAAIu9B,EAAkB,SAAyBrlD,EAAO2O,EAAWC,GAC3D5O,EACFgO,EAASka,OAAOloB,GAEhBgO,EAASga,QAAQ,IAAItZ,GAAkBC,EAAWC,IAG1B,mBAAfb,GACTA,EAAW/N,EAAO2O,EAAWC,IAKjC,OADApS,KAAKypB,KAAK47B,iBAAiBrlD,KAAKmI,KAAMm9C,EAAmBuD,EAAiBtD,GACnE/zC,EAASG,SAGlB8zC,EAAUvlD,UAAU4oD,YAAc,SAAUt5C,EAAU+B,GACpD,YAAiB,wBAAyB,EAAG,EAAGlP,UAAUC,QAC1DyO,GAAqB,wBAAyB/Q,KAAKmI,MACnDsI,GAAiB,wBAAyB,EAAGjB,GAAU,GACvD,YAAiB,wBAAyB,EAAG+B,GAAY,GACzD,IAAIC,EAAW,IAAI,IAEnB,OADAxR,KAAKypB,KAAK5X,gBAAgB9I,EAAU/I,KAAKmI,KAAM,aAAcqH,EAAU,KAAMgC,EAASE,aAAaH,IAC5FC,EAASG,SAGlB8zC,EAAUvlD,UAAU6E,KAAO,SAAU1E,EAAOkR,GAC1C,YAAiB,iBAAkB,EAAG,EAAGlP,UAAUC,QACnDyO,GAAqB,iBAAkB/Q,KAAKmI,MAC5CsH,GAAwB,iBAAkB,EAAGpP,EAAOL,KAAKmI,MAAM,GAC/D,YAAiB,iBAAkB,EAAGoJ,GAAY,GAClD,IASII,EATAa,EAAMxS,KAAKypB,KAAKw5B,aAChBpiD,EAAO0R,GAAWC,GAMlBu2C,EAAmB/oD,KAAK4K,MAAM/J,GAC9BmoD,EAAUhpD,KAAK4K,MAAM/J,GAkBzB,OAdE8Q,EADW,MAATtR,EACQ0oD,EAAiB5oD,IAAIE,EAAOkR,GAAY4tC,MAAK,WACrD,OAAO6J,KAGClF,QAAQt4B,QAAQw9B,GAG5BD,EAAiB5J,KAAOxtC,EAAQwtC,KAAK97C,KAAKsO,GAC1Co3C,EAAiBz9B,MAAQ3Z,EAAQwtC,KAAK97C,KAAKsO,OAAS9B,GAE1B,mBAAf0B,GACTI,EAAQ2Z,OAAM,eAGTy9B,GAGTtD,EAAUvlD,UAAUsrC,aAAe,WAEjC,OADAz6B,GAAqB,yBAA0B/Q,KAAKmI,MAC7C,IAAIiJ,GAAapR,KAAKypB,KAAMzpB,KAAKmI,OAG1CqC,OAAOC,eAAeg7C,EAAUvlD,UAAW,WAAY,CACrDO,IAAK,WACH,OAAOT,KAAK2oD,gBAEdj+C,YAAY,EACZC,cAAc,IAEhBH,OAAOC,eAAeg7C,EAAUvlD,UAAW,MAAO,CAChDO,IAAK,WACH,OAAOT,KAAK0hB,UAEdhX,YAAY,EACZC,cAAc,IAEhBH,OAAOC,eAAeg7C,EAAUvlD,UAAW,SAAU,CACnDO,IAAK,WACH,OAAOT,KAAKiiB,aAEdvX,YAAY,EACZC,cAAc,IAEhBH,OAAOC,eAAeg7C,EAAUvlD,UAAW,OAAQ,CACjDO,IAAK,WACH,OAAOT,KAAK0oD,WAEdh+C,YAAY,EACZC,cAAc,IAET86C,EA3PT,CA4PEj8B,IASFA,GAAMlF,uBAAyBmhC,GAC/BvqB,GAAU5W,uBAAyBmhC,GAsBnC,IAkIIwD,GAlIAC,GAEJ,WACE,SAASA,EAA0BC,EAAMC,GACvC,IAAI/rC,EAAQrd,KAEZA,KAAKmpD,KAAOA,EACZnpD,KAAKopD,cAAgBA,EACrBppD,KAAKqpD,MAAQ,KACbrpD,KAAKqpD,MAAQD,EAAcE,aAAa,CACtC15C,UAAU,IAGP5P,KAAKqpD,OACRD,EAAc3oD,MAAM0+C,MAAK,SAAUoK,GACjC,OAAOlsC,EAAMgsC,MAAQE,KAyD3B,OApDAL,EAA0BhpD,UAAUg/C,SAAW,SAAUD,GACvD,OAAKj/C,KAAKqpD,MAIHrpD,KAAKqpD,MAAMnK,SAASD,GAAc3zB,OAAM,SAAU9nB,GAGvD,OAAIA,GAAwB,+BAAfA,EAAMwhC,MACjB5hC,EAAI,kEACG,MAEA0gD,QAAQp4B,OAAOloB,MAVjBsgD,QAAQt4B,QAAQ,OAe3B09B,EAA0BhpD,UAAUwiD,uBAAyB,SAAUrf,GAGjErjC,KAAKqpD,MACPrpD,KAAKqpD,MAAMG,qBAAqBnmB,IAEhCj8B,YAAW,WACT,OAAOi8B,EAAS,QACf,GACHrjC,KAAKopD,cAAc3oD,MAAM0+C,MAAK,SAAUoK,GACtC,OAAOA,EAAKC,qBAAqBnmB,QAKvC6lB,EAA0BhpD,UAAUupD,0BAA4B,SAAUpmB,GACxErjC,KAAKopD,cAAc3oD,MAAM0+C,MAAK,SAAUoK,GACtC,OAAOA,EAAKG,wBAAwBrmB,OAIxC6lB,EAA0BhpD,UAAUy/C,sBAAwB,WAC1D,IAAIgK,EAAe,0DAA4D3pD,KAAKmpD,KAAKtoD,KAAtE,iFAEf,eAAgBb,KAAKmpD,KAAK3W,QAC5BmX,GAAgB,uJACP,mBAAoB3pD,KAAKmpD,KAAK3W,QACvCmX,GAAgB,2JAEhBA,GAAgB,kKAGlBhmD,EAAKgmD,IAGAT,EAtET,GA2EIU,GAEJ,WACE,SAASA,KAmBT,OAjBAA,EAA2B1pD,UAAUg/C,SAAW,SAAUD,GACxD,OAAO6E,QAAQt4B,QAAQ,CACrB4zB,YAAawK,EAA2BC,uBAI5CD,EAA2B1pD,UAAUwiD,uBAAyB,SAAUrf,GAGtEA,EAASumB,EAA2BC,sBAGtCD,EAA2B1pD,UAAUupD,0BAA4B,SAAUpmB,KAE3EumB,EAA2B1pD,UAAUy/C,sBAAwB,aAE7DiK,EAA2BC,oBAAsB,QAC1CD,EApBT,GAyDIE,GAEJ,WACE,SAASA,IACP9pD,KAAK+pD,OAAS,GAKd/pD,KAAKgqD,gBAAiB,EAoMxB,OAjMAF,EAAYrgB,YAAc,WAKxB,OAJKwf,KACHA,GAAkB,IAAIa,GAGjBb,IAITa,EAAY5pD,UAAUm/C,UAAY,WAChC,IAAIlxC,EAAKC,EAAIqtB,EAAKltB,EAElB,IACE,IAAK,IAAIC,EAAK,YAAShE,OAAO3F,KAAK7E,KAAK+pD,SAAUjuB,EAAKttB,EAAGC,QAASqtB,EAAGptB,KAAMotB,EAAKttB,EAAGC,OAAQ,CAC1F,IAAIw7C,EAAUnuB,EAAGz7B,MAEjB,IACE,IAAK,IAAIw/C,GAAMpkB,OAAM,EAAQ,YAASjxB,OAAO3F,KAAK7E,KAAK+pD,OAAOE,MAAanK,EAAKD,EAAGpxC,QAASqxC,EAAGpxC,KAAMoxC,EAAKD,EAAGpxC,OAAQ,CACnH,IAAIy7C,EAAQpK,EAAGz/C,MACfL,KAAK+pD,OAAOE,GAASC,GAAO7K,aAE9B,MAAOrjB,GACPP,EAAM,CACJj4B,MAAOw4B,GAET,QACA,IACM8jB,IAAOA,EAAGpxC,OAASH,EAAKsxC,EAAG/wC,SAASP,EAAGQ,KAAK8wC,GAChD,QACA,GAAIpkB,EAAK,MAAMA,EAAIj4B,SAIzB,MAAOqL,GACPV,EAAM,CACJ3K,MAAOqL,GAET,QACA,IACMitB,IAAOA,EAAGptB,OAASN,EAAKI,EAAGM,SAASV,EAAGW,KAAKP,GAChD,QACA,GAAIL,EAAK,MAAMA,EAAI3K,SAKzBsmD,EAAY5pD,UAAUo/C,OAAS,WAC7B,IAAIpjB,EAAK9tB,EAAIguB,EAAK7tB,EAElB,IACE,IAAK,IAAIC,EAAK,YAAShE,OAAO3F,KAAK7E,KAAK+pD,SAAUjuB,EAAKttB,EAAGC,QAASqtB,EAAGptB,KAAMotB,EAAKttB,EAAGC,OAAQ,CAC1F,IAAIw7C,EAAUnuB,EAAGz7B,MAEjB,IACE,IAAK,IAAIw/C,GAAMzjB,OAAM,EAAQ,YAAS5xB,OAAO3F,KAAK7E,KAAK+pD,OAAOE,MAAanK,EAAKD,EAAGpxC,QAASqxC,EAAGpxC,KAAMoxC,EAAKD,EAAGpxC,OAAQ,CACnH,IAAIy7C,EAAQpK,EAAGz/C,MACfL,KAAK+pD,OAAOE,GAASC,GAAO5K,UAE9B,MAAOjjB,GACPD,EAAM,CACJ54B,MAAO64B,GAET,QACA,IACMyjB,IAAOA,EAAGpxC,OAASH,EAAKsxC,EAAG/wC,SAASP,EAAGQ,KAAK8wC,GAChD,QACA,GAAIzjB,EAAK,MAAMA,EAAI54B,SAIzB,MAAO24B,GACPD,EAAM,CACJ14B,MAAO24B,GAET,QACA,IACML,IAAOA,EAAGptB,OAASN,EAAKI,EAAGM,SAASV,EAAGW,KAAKP,GAChD,QACA,GAAI0tB,EAAK,MAAMA,EAAI14B,SASzBsmD,EAAY5pD,UAAUiqD,sBAAwB,SAAU1gC,EAAMre,EAAMoC,GAClEic,EAAK6rB,UAAY,IAAInqC,GAASC,EAAO,IAAMoC,GAE3C,EAAOic,EAAK6rB,UAAUhqC,UAAWme,EAAK6rB,UAAU/pC,cAAeke,EAAK6rB,UAAU9pC,UAAWie,EAAK6rB,UAAU7pC,eAAgBge,EAAK6rB,UAAU5pC,+BAEnI+d,EAAK6rB,UAAU9pC,YACjBie,EAAKiwB,mBAAqB,IAAIkQ,KAQlCE,EAAY5pD,UAAUkqD,gBAAkB,SAAUpI,EAAKqI,EAAcxZ,EAAKrlC,GACxE,IAAI0+C,EAAQrZ,GAAOmR,EAAIxP,QAAQ8X,iBAEjBz6C,IAAVq6C,IACGlI,EAAIxP,QAAQ+X,WACf9mD,EAAM,kHAGRL,EAAI,kCAAmC4+C,EAAIxP,QAAQ+X,WACnDL,EAAQlI,EAAIxP,QAAQ+X,UAAY,gCAGlC,IAEIC,EAFAt9C,EAAYF,GAAck9C,EAAO1+C,GACjC8B,EAAWJ,EAAUI,SAErBm9C,OAAiB56C,OAEE,IAAZ6iC,IACT+X,EAAiB,GAA+C,iCAG9DA,GACFD,GAAa,EACbN,EAAQ,UAAYO,EAAiB,OAASn9C,EAAShC,UAEvDgC,GADAJ,EAAYF,GAAck9C,EAAO1+C,IACZ8B,UAErBk9C,GAAct9C,EAAUI,SAASjC,OAGnC,IAAIq/C,EAAoBl/C,GAAag/C,EAAa,IAAIZ,GAA+B,IAAIV,GAA0BlH,EAAKqI,GAQxH,OAPAr5C,GAAY,gCAAiC,EAAG9D,GAE3ChE,EAAYgE,EAAU/E,OACzB1E,EAAM,4FAGGzD,KAAK2qD,WAAWr9C,EAAU00C,EAAK0I,GAC9B9B,UAQdkB,EAAY5pD,UAAU0qD,WAAa,SAAUnhC,GAC3C,IAAIohC,EAAW,YAAQ7qD,KAAK+pD,OAAQtgC,EAAKu4B,IAAInhD,MAExCgqD,GAAY,YAAQA,EAAUphC,EAAKrpB,OAASqpB,GAC/ChmB,EAAM,YAAcgmB,EAAKu4B,IAAInhD,KAAO,IAAM4oB,EAAK6rB,UAAY,+BAG7D7rB,EAAK41B,mBACEwL,EAASphC,EAAKrpB,MAWvB0pD,EAAY5pD,UAAUyqD,WAAa,SAAUr9C,EAAU00C,EAAK0I,GAC1D,IAAIG,EAAW,YAAQ7qD,KAAK+pD,OAAQ/H,EAAInhD,MAEnCgqD,IACHA,EAAW,GACX7qD,KAAK+pD,OAAO/H,EAAInhD,MAAQgqD,GAG1B,IAAIphC,EAAO,YAAQohC,EAAUv9C,EAASb,eAQtC,OANIgd,GACFhmB,EAAM,2HAGRgmB,EAAO,IAAIq4B,GAAKx0C,EAAUtN,KAAKgqD,eAAgBhI,EAAK0I,GACpDG,EAASv9C,EAASb,eAAiBgd,EAC5BA,GAOTqgC,EAAY5pD,UAAU4qD,gBAAkB,SAAUA,GAChD9qD,KAAKgqD,eAAiBc,GAGjBhB,EA3MT,GAmOI1E,GAEJ,WAIE,SAASA,EAAS2F,GAChB,IAAI1tC,EAAQrd,KAEZA,KAAK+qD,cAAgBA,EAGrB/qD,KAAKgrD,kBAAmB,EACxBhrD,KAAKirD,SAAW,CACd97B,OAAQ,WACN,OAAO,YAAU9R,OAAO,OAAQ,GAAQ,WACtC,OAAO,YAAYrd,MAAM,SAAUoO,GAKjC,OAJApO,KAAKkrD,cAAc,UACnBpB,GAAYrgB,cAAcmhB,WAAW5qD,KAAKqR,OAC1CrR,KAAK+qD,cAAgB,KACrB/qD,KAAKmrD,cAAgB,KACd,CAAC,WAQVJ,aAAyBjJ,IAC7Br+C,EAAM,wEAwHV,OApHA+G,OAAOC,eAAe26C,EAASllD,UAAW,QAAS,CACjDO,IAAK,WAMH,OALKT,KAAKgrD,mBACRhrD,KAAK+qD,cAAc1d,QACnBrtC,KAAKgrD,kBAAmB,GAGnBhrD,KAAK+qD,eAEdrgD,YAAY,EACZC,cAAc,IAEhBH,OAAOC,eAAe26C,EAASllD,UAAW,QAAS,CACjDO,IAAK,WAKH,OAJKT,KAAKmrD,gBACRnrD,KAAKmrD,cAAgB,IAAI1F,GAAUzlD,KAAKqR,MAAOpJ,MAG1CjI,KAAKmrD,eAEdzgD,YAAY,EACZC,cAAc,IAEhBH,OAAOC,eAAe26C,EAASllD,UAAW,MAAO,CAC/CO,IAAK,WACH,OAAOT,KAAKqR,MAAM2wC,KAEpBt3C,YAAY,EACZC,cAAc,IAWhBy6C,EAASllD,UAAUkrD,YAAc,SAAUhgD,EAAMoC,GAC/CxN,KAAKkrD,cAAc,eAEflrD,KAAKgrD,iBACPvnD,EAAM,0EAKRqmD,GAAYrgB,cAAc0gB,sBAAsBnqD,KAAK+qD,cAAe3/C,EAAMoC,IAG5E43C,EAASllD,UAAU8hB,IAAM,SAAU7Z,GAIjC,OAHAnI,KAAKkrD,cAAc,OACnB,YAAiB,eAAgB,EAAG,EAAG7oD,UAAUC,QAE7C6F,aAAgBs9C,GACXzlD,KAAKqrD,WAAWljD,EAAKrH,iBAGd+O,IAAT1H,EAAqBnI,KAAKma,MAAMvP,MAAMzC,GAAQnI,KAAKma,OAU5DirC,EAASllD,UAAUmrD,WAAa,SAAUxa,GAExC,IAAIya,EAAU,sBACdtrD,KAAKkrD,cAAcI,GACnB,YAAiBA,EAAS,EAAG,EAAGjpD,UAAUC,QAC1C,IAAIipD,EAAYv+C,GAAc6jC,EAAK7wC,KAAKqR,MAAMikC,UAAU9pC,WACxDwF,GAAYs6C,EAAS,EAAGC,GACxB,IAAIj+C,EAAWi+C,EAAUj+C,SAMzB,OAJKtN,KAAKqR,MAAMikC,UAAUvpC,gBAAkBuB,EAASlC,OAASpL,KAAKqR,MAAMikC,UAAUlqC,MACjF3H,EAAM6nD,6DAA4Eh+C,EAASlC,KAAO,iBAAmBpL,KAAKqR,MAAMikC,UAAUlqC,KAAO,KAG5IpL,KAAKgiB,IAAIupC,EAAUpjD,KAAKrH,aAGjCskD,EAASllD,UAAUgrD,cAAgB,SAAUI,GAChB,OAAvBtrD,KAAK+qD,eACPtnD,EAAM,eAAiB6nD,EAAU,4BAKrClG,EAASllD,UAAUsrD,UAAY,WAC7B,YAAiB,qBAAsB,EAAG,EAAGnpD,UAAUC,QACvDtC,KAAKkrD,cAAc,aACnBlrD,KAAKqR,MAAMguC,aAGb+F,EAASllD,UAAUurD,SAAW,WAC5B,YAAiB,oBAAqB,EAAG,EAAGppD,UAAUC,QACtDtC,KAAKkrD,cAAc,YACnBlrD,KAAKqR,MAAMiuC,UAGb8F,EAASsG,YAAc,CACrBC,UAAW,CACT,MAAO,aAETC,UAAW,SAAmB59B,GAC5B,MAAO,CACL,MAAO,CACL,UAAaA,MAKdo3B,EApJT,GAsPA,IAAI6F,GAAwBzgD,OAAOqhD,OAAO,CACxCC,UAAW,KACXC,iBA1EqB,WACrB7Z,GAAoBxE,gBACpB/C,GAAsB6C,cAyEtBwe,gBAtEoB,WACpBrhB,GAAsB+C,iBAsEtBmH,sBAjE0B,WAC1B,OAAO3C,GAAiC,eAiExC+Z,yBA9D6B,SAAkCjqC,EAAKoI,GAEpEpI,EAAIyH,KAAK64B,sBAAsB/H,uBAAyBnwB,GA6DxDmd,MA1DU,SAAevlB,EAAK2iC,GAC9B3iC,EAAIyH,KAAK8d,MAAMod,IA0DfM,sBAvD0B,SAA+BjjC,EAAKkjC,GAC9DljC,EAAIyH,KAAKw7B,sBAAsBC,IAuD/BjD,gBApDoB,SAAyBjgC,GAC7C,OAAOA,EAAIyH,KAAKw4B,iBAoDhBiK,oBAjDwB,SAA6BlqC,EAAKoI,GAC1D,OAAOpI,EAAIyH,KAAKg6B,qBAAqBr5B,IAiDrC+hC,eApCF,SAAwB/9C,GACtB,IAAI4zC,EAAM5zC,EAAG4zC,IACTnR,EAAMziC,EAAGyiC,IACTgB,EAAUzjC,EAAGyjC,QACbua,EAAiBh+C,EAAGg+C,eACpB9gD,EAAY8C,EAAG9C,UACfiD,EAAKH,EAAG5C,UACRA,OAAmB,IAAP+C,GAAwBA,EACxCqjC,GAAcC,GAMd,IAAIwY,EAAe,IAAI,IAAS,gBAAiB,IAAI,IAAmB,wBAMxE,OALAA,EAAagC,aAAa,IAAI,IAAU,iBAAiB,WACvD,OAAOD,IACN,YAGI,CACLE,SAAUxC,GAAYrgB,cAAc2gB,gBAAgBpI,EAAKqI,EAAcxZ,EAAKrlC,GAC5EF,UAAWA,MAiCXihD,GAAiBjT,GAErBA,GAAqBp5C,UAAUssD,aAAe,SAAUxkD,EAAYuJ,GAClEvR,KAAKk3C,YAAY,IAAK,CACpBsE,EAAGxzC,GACFuJ,IAIL+nC,GAAqBp5C,UAAUusD,KAAO,SAAU5oD,EAAM6oD,GACpD1sD,KAAKk3C,YAAY,OAAQ,CACvB7G,EAAGxsC,GACF6oD,IAIL,IAAIC,GAAqBtX,GAkBrBuX,GAAmBzhD,GAcnB0hD,GAA2BriD,OAAOqhD,OAAO,CAC3CC,UAAW,KACXS,eAAgBA,GAChBI,mBAAoBA,GACpBG,WAlCe,SAAoBC,GACnC,IAAIC,EAAS1T,GAAqBp5C,UAAU+4C,IAU5C,OARAK,GAAqBp5C,UAAU+4C,IAAM,SAAUjxC,EAAYnE,EAAM0N,EAAYiF,QAC9D3G,IAAT2G,IACFA,EAAOu2C,KAGTC,EAAOj+C,KAAK/O,KAAMgI,EAAYnE,EAAM0N,EAAYiF,IAG3C,WACL8iC,GAAqBp5C,UAAU+4C,IAAM+T,IAuBvCJ,iBAAkBA,GAClBjgC,gBAlBoB,SAAyBhgB,GAC7C,OAAOA,EAAMggB,mBAkBbm+B,gBAXoB,SAAyBmC,GAC7CnD,GAAYrgB,cAAcqhB,gBAAgBmC,MA+BxCvB,GAActG,GAASsG,aAE3B,SAA0BY,GAExB1a,GAAc0a,EAAS3a,aAEvB,IAAIrmC,EAAYghD,EAASrB,SAASiC,kBAAkB,IAAI,IAAU,YAAY,SAAUriC,EAAWgmB,GAGjG,IAAImR,EAAMn3B,EAAUsiC,YAAY,OAAO7D,eACnCe,EAAex/B,EAAUsiC,YAAY,iBACzC,OAAOrD,GAAYrgB,cAAc2gB,gBAAgBpI,EAAKqI,EAAcxZ,KACnE,UAEDuc,gBACF,CACE3H,UAAWA,GACXj8B,MAAOA,GACP47B,SAAUA,GACVtkC,aAAcA,GACd/d,cAAeA,EACfkoD,SAAUA,GACVS,YAAaA,GACbmB,YAAaA,KACZQ,sBAAqB,IACxBf,EAASgB,gBA5CA,qBACG,SA6CR,gBACFC,EAAOC,QAAUliD,GAIrBmiD,CAAiB,O","file":"d91e9ae9-50cdfff18aeccf516a64.js","sourcesContent":["import \"core-js/modules/es.array.reduce\";\nimport firebase from '@firebase/app';\nimport { __spread, __values, __extends, __assign, __read, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, validateArgCount, validateCallback, Deferred, assertionError, safeGet, map, validateContextObject, deepCopy, isMobileCordova, base64Encode, isAdmin, isValidFormat, isEmpty, isReactNative, querystring } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key The key to save the value under\r\n   * @param value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @return The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ A flag to turn on logging, or a custom logger\r\n * @param persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spread([prefix], varArgs));\n  };\n};\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.error(message);\n};\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.error(message);\n  throw new Error(message);\n};\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str The string\r\n * @param segsize The maximum number of chars in the string.\r\n * @return The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v A double\r\n *\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn Function to run.\r\n * @param time Milliseconds to wait before running.\r\n * @return The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param pathOrString Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  return Path;\n}();\n\nfunction newEmptyPath() {\n  return new Path('');\n}\n\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @return The number of segments in this path\r\n */\n\n\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n\n  return new Path(path.pieces_, pieceNum);\n}\n\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\n\n\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n/**\r\n * @return True if there are no segments in this path\r\n */\n\n\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @return The path from outerPath to innerPath\r\n */\n\n\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n      inner = pathGetFront(innerPath);\n\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @return -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\n\n\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @return true if paths are the same.\r\n */\n\n\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @return True if this path is a parent (or the same as) other\r\n */\n\n\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n\n    ++i;\n    ++j;\n  }\n\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param path Initial Path.\r\n   * @param errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function get() {\n      return 32;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function get() {\n      return 768;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @param child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host Hostname portion of the url for the repo\r\n   * @param secure Whether or not this repo is accessed over ssl\r\n   * @param namespace The namespace represented by the repo\r\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost() || this.includeNamespaceInQueryParams;\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param type of connection\r\n   * @param params list\r\n   * @return The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    assert(typeof type === 'string', 'typeof type must == string');\n    assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    each(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @return key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function successor(key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function predecessor(key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @return True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param value_ The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @param node Node to iterate.\r\n   * @param isReverse_ Whether or not to iterate in reverse\r\n   * @param resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param key Key associated with this node.\r\n   * @param value Value associated with this node.\r\n   * @param color Whether this node is red.\r\n   * @param left Left child.\r\n   * @param right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key New key for the node, or null.\r\n   * @param value New value for the node, or null.\r\n   * @param color New color for the node, or null.\r\n   * @param left New left child for the node, or null.\r\n   * @param right New right child for the node, or null.\r\n   * @return The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return The minimum node in the tree.\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key Key to insert.\r\n   * @param value Value to insert.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @return New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key The key of the item to remove.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @return Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @return New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @return New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @return Newt ree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @return True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key Key to be added.\r\n   * @param value Value to be added.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key The key to remove.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @return Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @param comparator_ Key comparator.\r\n   * @param root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key Key to be added.\r\n   * @param value Value to be added.\r\n   * @return New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key The key to remove.\r\n   * @return New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key The key to look up.\r\n   * @return The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key The key to find the predecessor of\r\n   * @return The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @return The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n\nvar Base12Num =\n/** @class */\nfunction () {\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList Unsorted list of children\r\n * @param cmp The comparison method to be used\r\n * @param keyFn An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn An optional override for comparator used by the generated sorted map\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param children_ List of children of this node..\r\n   * @param priorityNode_ The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json JSON to create a node for.\r\n * @param priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param node_ A SnapshotNode to wrap.\r\n   * @param ref_ The ref of the location this snapshot came from.\r\n   * @param index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param childPathString Path to a child.\r\n   * @return DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param childPathString Path to a child.\r\n   * @return Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each child.\r\n   * @return True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration The function to call to with the event data. User provided\r\n   * @param snapshot The data backing the event\r\n   * @param prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\"\n    /* VALUE */\n    ,\n    snapshotNode: snapshotNode\n  };\n}\n\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\"\n    /* CHILD_ADDED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\"\n    /* CHILD_REMOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\"\n    /* CHILD_CHANGED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\n\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\"\n    /* CHILD_MOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @return True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\"\n      /* VIEW_FROM_LEFT */\n      ;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n\n  return QueryParams;\n}();\n\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\"\n  /* VIEW_FROM_LEFT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\"\n  /* VIEW_FROM_RIGHT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexStartValue_ = indexValue;\n\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n\n  params.startAfterSet_ = true;\n  return params;\n}\n\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexEndValue_ = indexValue;\n\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @return query string parameters\r\n */\n\n\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  var orderBy;\n\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\"\n    /* PRIORITY_INDEX */\n    ;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\"\n    /* VALUE_INDEX */\n    ;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\"\n    /* KEY_INDEX */\n    ;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n\n  qs[\"orderBy\"\n  /* ORDER_BY */\n  ] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[\"startAt\"\n    /* START_AT */\n    ] = stringify(queryParams.indexStartValue_);\n\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\"\n      /* START_AT */\n      ] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[\"endAt\"\n    /* END_AT */\n    ] = stringify(queryParams.indexEndValue_);\n\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\"\n      /* END_AT */\n      ] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\"\n      /* LIMIT_TO_FIRST */\n      ] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\"\n      /* LIMIT_TO_LAST */\n      ] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n\n  if (queryParams.startSet_) {\n    obj[\"sp\"\n    /* INDEX_START_VALUE */\n    ] = queryParams.indexStartValue_;\n\n    if (queryParams.startNameSet_) {\n      obj[\"sn\"\n      /* INDEX_START_NAME */\n      ] = queryParams.indexStartName_;\n    }\n  }\n\n  if (queryParams.endSet_) {\n    obj[\"ep\"\n    /* INDEX_END_VALUE */\n    ] = queryParams.indexEndValue_;\n\n    if (queryParams.endNameSet_) {\n      obj[\"en\"\n      /* INDEX_END_NAME */\n      ] = queryParams.indexEndName_;\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    obj[\"l\"\n    /* LIMIT */\n    ] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\"\n        /* VIEW_FROM_LEFT */\n        ;\n      } else {\n        viewFrom = \"r\"\n        /* VIEW_FROM_RIGHT */\n        ;\n      }\n    }\n\n    obj[\"vf\"\n    /* VIEW_FROM */\n    ] = viewFrom;\n  } // For now, priority index is the default, so we only specify if it's some other index\n\n\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\"\n    /* INDEX */\n    ] = queryParams.index_.toString();\n  }\n\n  return obj;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n      }\n    } else {\n      assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n\n  Query.prototype.getRef = function () {\n    validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    return this.repo.getValue(this);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise.catch(function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) {\n        ret.cancel.bind(ret.context)(err);\n      }\n\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, queryParamsLimitToFirst(this.queryParams_, limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, queryParamsLimitToLast(this.queryParams_, limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(this.queryParams_, index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = queryParamsOrderBy(this.queryParams_, KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = queryParamsOrderBy(this.queryParams_, PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = queryParamsOrderBy(this.queryParams_, VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = queryParamsStartAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAfter', 1, value, this.path, false);\n    validateKey('Query.startAfter', 2, name, true);\n    var newParams = queryParamsStartAfter(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAfter: Starting point was already set (by another call to startAt, startAfter ' + 'or equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = queryParamsEndAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt, endBefore, or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endBefore', 1, value, this.path, false);\n    validateKey('Query.endBefore', 2, name, true);\n    var newParams = queryParamsEndBefore(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + pathToUrlEncodedString(this.path);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return queryParamsGetQueryObject(this.queryParams_);\n  };\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = pathEquals(this.path, other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName The function name (on or once)\r\n   *\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path path to which write is relative\r\n * @param node new data written at path\r\n * @param syncTree current data\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    this.value = null;\n    this.children = new Map();\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!pathIsEmpty(path) && this.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n\n      if (this.children.has(childKey)) {\n        var childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @param data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (pathIsEmpty(path)) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      var childKey = pathGetFront(path);\n\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children.get(childKey);\n      path = pathPopFront(path);\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (pathIsEmpty(path)) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value;\n          this.value = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        var childKey = pathGetFront(path);\n        path = pathPopFront(path);\n\n        if (this.children.has(childKey)) {\n          var safeToRemove = this.children.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children.delete(childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param prefixPath Path to look up node for.\r\n   * @param func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    this.children.forEach(function (tree, key) {\n      func(key, tree);\n    });\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   * @param affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = newOperationSourceUser();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath The remainder of the path\r\n   * @param predicate The predicate to satisfy to return a node\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @return The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath Path to set value at.\r\n   * @param toSet Value to set.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath Path to value to remove.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath Path to get value for.\r\n   * @return Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath Path to replace subtree for.\r\n   * @param newTree New tree.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\"\n    /* CHILD_ADDED */\n    || type === \"child_changed\"\n    /* CHILD_CHANGED */\n    || type === \"child_removed\"\n    /* CHILD_REMOVED */\n    , 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === \"child_added\"\n      /* CHILD_ADDED */\n      && oldType === \"child_removed\"\n      /* CHILD_REMOVED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.delete(childKey);\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n        } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !pathIsEmpty(overwrite.path);\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(changeValue(newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (pathIsEmpty(changePath)) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = pathGetFront(changePath);\n\n        if (childKey === '.priority') {\n          assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = pathPopFront(changePath); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), this.filter_.filtersNodes());\n    }\n  };\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (pathIsEmpty(changePath)) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = pathPopFront(changePath);\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (pathIsEmpty(changePath)) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = pathPopFront(changePath);\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (pathIsEmpty(childChangePath)) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = pathChild(path, relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = pathChild(path, relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (pathIsEmpty(path)) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (pathIsEmpty(ackPath)) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = new ImmutableTree(null);\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = new ImmutableTree(null);\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = pathChild(ackPath, mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = pathGetFront(path);\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(newEmptyPath()) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\"\n    /* CHILD_CHANGED */\n    && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\"\n  /* CHILD_REMOVED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\"\n  /* CHILD_ADDED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\"\n  /* CHILD_MOVED */\n  , moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\"\n  /* CHILD_CHANGED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\"\n  /* VALUE */\n  , changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n\n  View.prototype.getCompleteNode = function () {\n    return this.viewCache_.getCompleteEventSnap();\n  };\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param eventRegistration If null, remove all callbacks.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(changeChildAdded(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(changeValue(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return eventGeneratorGenerateEventsForChanges(this.eventGenerator_, changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function get() {\n      assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function set(val) {\n      assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SyncPoint.prototype.isEmpty = function () {\n    return this.views.size === 0;\n  };\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var e_1, _a;\n\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = this.views.get(queryId);\n      assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events = [];\n\n      try {\n        for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var view = _c.value;\n          events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Get a view for the specified query.\r\n   *\r\n   * @param query The query to return a view for\r\n   * @param writesCache\r\n   * @param serverCache\r\n   * @param serverCacheComplete\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.getView = function (query, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = this.views.get(queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n      return new View(query, viewCache);\n    }\n\n    return view;\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param query\r\n   * @param eventRegistration\r\n   * @param writesCache\r\n   * @param serverCache Complete server cache, if we have it.\r\n   * @param serverCacheComplete\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var view = this.getView(query, writesCache, serverCache, serverCacheComplete);\n\n    if (!this.views.has(query.queryIdentifier())) {\n      this.views.set(query.queryIdentifier(), view);\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param eventRegistration If null, remove all callbacks.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var e_2, _a;\n\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      try {\n        // When you do ref.off(...), we search all views for the registration to remove.\n        for (var _b = __values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = __read(_c.value, 2),\n              viewQueryId = _d[0],\n              view = _d[1];\n\n          cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n          if (view.isEmpty()) {\n            this.views.delete(viewQueryId); // We'll deal with complete views later.\n\n            if (!view.getQuery().getQueryParams().loadsAllData()) {\n              removed.push(view.getQuery());\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      var view = this.views.get(queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          this.views.delete(queryId); // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var e_3, _a;\n\n    var result = [];\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (!view.getQuery().getQueryParams().loadsAllData()) {\n          result.push(view);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n  /**\r\n   * @param path The path to the desired complete snapshot\r\n   * @return A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var e_4, _a;\n\n    var serverCache = null;\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        serverCache = serverCache || view.getCompleteServerCache(path);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return serverCache;\n  };\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  };\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var e_5, _a;\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (view.getQuery().getQueryParams().loadsAllData()) {\n          return view;\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n\n  return CompoundWrite;\n}();\n\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite The CompoundWrite to remove.\r\n * @param path The path at which a write and all deeper writes should be removed\r\n * @return The new CompoundWrite with the removed path\r\n */\n\n\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite The CompoundWrite to check.\r\n * @param path The path to check for\r\n * @return Whether there is a complete write at that path\r\n */\n\n\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite The CompoundWrite to get the node from.\r\n * @param path The path to get a complete write\r\n * @return The node if complete at that path, or null otherwise.\r\n */\n\n\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite The CompoundWrite to get children from.\r\n * @return A list of all complete children.\r\n */\n\n\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n\n  return children;\n}\n\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @return Whether this CompoundWrite is empty\r\n */\n\n\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node The node to apply this CompoundWrite to\r\n * @return The node with all writes applied\r\n */\n\n\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     */\n    this.visibleWrites_ = CompoundWrite.empty();\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = compoundWriteAddWrite(this.visibleWrites_, path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = compoundWriteAddWrites(this.visibleWrites_, path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @return true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = compoundWriteRemoveWrite(this.visibleWrites_, writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        each(children, function (childName) {\n          _this.visibleWrites_ = compoundWriteRemoveWrite(_this.visibleWrites_, pathChild(writeToRemove.path, childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return compoundWriteGetCompleteNode(this.visibleWrites_, path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param writeIdsToExclude An optional set to be excluded\r\n   * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = compoundWriteGetCompleteNode(this.visibleWrites_, treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n\n        if (compoundWriteIsEmpty(subMerge)) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return compoundWriteApply(subMerge, layeredCache);\n        }\n      }\n    } else {\n      var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n\n      if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n          return null;\n        } else {\n          var filter = function filter(write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return compoundWriteApply(mergeAtPath, layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = compoundWriteGetCompleteNode(this.visibleWrites_, treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n      compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = pathChild(treePath, childPath);\n\n    if (compoundWriteHasCompleteWrite(this.visibleWrites_, path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, path);\n\n      if (compoundWriteIsEmpty(childMerge)) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = pathChild(treePath, childKey);\n    var shadowingNode = compoundWriteGetCompleteNode(this.visibleWrites_, path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, path);\n        return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return compoundWriteGetCompleteNode(this.visibleWrites_, path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = compoundWriteApply(merge, completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return pathContains(writeRecord.path, path);\n    } else {\n      for (var childName in writeRecord.children) {\n        if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, newEmptyPath());\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.empty();\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (pathContains(treeRoot, writePath)) {\n            relativePath = newRelativePath(treeRoot, writePath);\n            compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n          } else if (pathContains(writePath, treeRoot)) {\n            relativePath = newRelativePath(writePath, treeRoot);\n            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n          } else ;\n        } else if (write.children) {\n          if (pathContains(treeRoot, writePath)) {\n            relativePath = newRelativePath(treeRoot, writePath);\n            compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n          } else if (pathContains(writePath, treeRoot)) {\n            relativePath = newRelativePath(writePath, treeRoot);\n\n            if (pathIsEmpty(relativePath)) {\n              compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n            } else {\n              var child = safeGet(write.children, pathGetFront(relativePath));\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(pathPopFront(relativePath));\n                compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n              }\n            }\n          } else ;\n        } else {\n          throw assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param writeIdsToExclude Optional writes to exclude.\r\n   * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   *\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(pathChild(this.treePath_, path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(pathChild(this.treePath_, childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(newOperationSourceUser(), path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(newOperationSourceUser(), path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param revert True if the given write failed and needs to be reverted\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = new ImmutableTree(null);\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n      } else {\n        each(write.children, function (pathString) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(newOperationSourceServer(), path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(newOperationSourceServer(), path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(newOperationSourceServer(), path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = newRelativePath(queryPath, path);\n      var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = newRelativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = newRelativePath(queryPath, path);\n      var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = newRelativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(newEmptyPath());\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param eventRegistration If null, all callbacks are removed.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   *\r\n   * @param path The path to the data we want\r\n   * @param writeIdsToExclude A specific set to be excluded\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = newRelativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n\n  SyncTree.prototype.getServerValue = function (query) {\n    var path = query.path;\n    var serverCache = null; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = newRelativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      serverCache = serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n\n    var serverCacheComplete = serverCache != null;\n    var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n    var writesCache = this.pendingWriteTree_.childWrites(query.path);\n    var view = syncPoint.getView(query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n    return view.getCompleteNode();\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        each(childMap, function (_key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap.delete(removedQueryKey);\n        this.tagToQueryMap.delete(removedQueryTag);\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   *\r\n   * @return The normalized query\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef();\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @return This method can return events to support synchronous data sources\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          each(childMap, function (_key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function hashFn() {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function onComplete(status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap.get(tag);\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n   *\r\n   * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n   *\r\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(newEmptyPath()));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (pathIsEmpty(operation.path)) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\n      }\n\n      var events = [];\n      var childName = pathGetFront(operation.path);\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList The new events to queue.\r\n */\n\n\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n\n    currList.events.push(data);\n  }\n\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path The path to raise events for.\r\n * @param eventDataList The new events to raise.\r\n */\n\n\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath The path to raise events for.\r\n * @param eventDataList The events to raise\r\n */\n\n\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n\n    if (eventList) {\n      var eventPath = eventList.path;\n\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\n\n\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n\n      exceptionGuard(eventFn);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spread(this.listeners_[eventType]);\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return connection url\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount The number of frames we are expecting from the server\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @return Any remaining data to be process, or null if there is none\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str String to send.\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return The constructor for the initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return The constructor for the next transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   * @param dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake The handshake data returned from the server\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param applicationId_ The Firebase App ID for this project\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    var deferred = new Deferred();\n    var request = {\n      p: query.path.toString(),\n      q: query.queryObject()\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function onComplete(message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\n    var pathString = query.path.toString();\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @param name_ Optional name of the node.\r\n   * @param parent_ Optional parent node.\r\n   * @param node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param pathObj Path to look up.\r\n   * @return Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next = pathGetFront(path);\n\n    while (next !== null) {\n      var childNode = safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = pathPopFront(path);\n      next = pathGetFront(path);\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return Whethe rthe tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    each(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param action Action to be called for each child.\r\n   * @param includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param includeSelf Whether to call action on this node as well.\r\n   * @return true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  };\n  /**\r\n   * @return The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param childName The name of the child to update.\r\n   * @param child The child to update.\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * A connection to a single data repository.\r\n */\n\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.app = app;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = new SparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  Repo.prototype.start = function () {\n    var _this = this;\n\n    this.stats_ = StatsManager.getCollection(this.repoInfo_);\n\n    if (this.forceRestClient_ || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), this.authTokenProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = this.app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), this.authTokenProvider_, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    this.authTokenProvider_.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(this.repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    }); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function stopListening() {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n          eventQueueRaiseEventsForChangedPath(_this.eventQueue_, query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function stopListening(query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  };\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, events);\n  }; // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (key, value) {\n      _this.updateInfo_(key, value);\n    });\n  };\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n  };\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n  /**\r\n   * The purpose of `getValue` is to return the latest known value\r\n   * satisfying `query`.\r\n   *\r\n   * This method will first check for in-memory cached values\r\n   * belonging to active listeners. If they are found, such values\r\n   * are considered to be the most up-to-date.\r\n   *\r\n   * If the client is not connected, this method will try to\r\n   * establish a connection and request the value for `query`. If\r\n   * the client is not able to retrieve the query result, it reports\r\n   * an error.\r\n   *\r\n   * @param query - The query to surface a value for.\r\n   */\n\n\n  Repo.prototype.getValue = function (query) {\n    var _this = this; // Only active queries are cached. There is no persisted cache.\n\n\n    var cached = this.serverSyncTree_.getServerValue(query);\n\n    if (cached != null) {\n      return Promise.resolve(new DataSnapshot(cached, query.getRef(), query.getQueryParams().getIndex()));\n    }\n\n    return this.server_.get(query).then(function (payload) {\n      var node = nodeFromJSON$1(payload);\n\n      var events = _this.serverSyncTree_.applyServerOverwrite(query.path, node);\n\n      eventQueueRaiseEventsAtPath(_this.eventQueue_, query.path, events);\n      return Promise.resolve(new DataSnapshot(node, query.getRef(), query.getQueryParams().getIndex()));\n    }, function (err) {\n      _this.log_('get for query ' + stringify(query) + ' failed: ' + err);\n\n      return Promise.reject(new Error(err));\n    });\n  };\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    eventQueueQueueEvents(this.eventQueue_, events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      eventQueueRaiseEventsForChangedPath(_this.eventQueue_, path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, []);\n  };\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    each(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      eventQueueQueueEvents(this.eventQueue_, events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n        eventQueueRaiseEventsForChangedPath(_this.eventQueue_, affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      each(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(pathChild(path, changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(newEmptyPath(), function (path, node) {\n      var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(newEmptyPath(), function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, newEmptyPath(), events);\n  };\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        each(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(pathChild(path, childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (pathGetFront(query.path) === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\n  };\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (pathGetFront(query.path) === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    each(stats, function (stat, value) {\n      var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n      for (var i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n\n      console.log(paddedStat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n\n  Repo.prototype.log_ = function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, __spread([prefix], varArgs));\n  };\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function get() {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Creates a new transaction, adds it to the transactions we're tracking, and\r\n   * sends it to the server if possible.\r\n   *\r\n   * @param path Path at which to do transaction.\r\n   * @param transactionUpdate Update callback.\r\n   * @param onComplete Completion callback.\r\n   * @param applyLocally Whether or not to make intermediate results visible\r\n   */\n\n  Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n    this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n    var valueCallback = function valueCallback() {};\n\n    var watchRef = new Reference(this, path);\n    watchRef.on('value', valueCallback);\n\n    var unwatcher = function unwatcher() {\n      watchRef.off('value', valueCallback);\n    }; // Initialize transaction.\n\n\n    var transaction = {\n      path: path,\n      update: transactionUpdate,\n      onComplete: onComplete,\n      // One of TransactionStatus enums.\n      status: null,\n      // Used when combining transactions at different locations to figure out\n      // which one goes first.\n      order: LUIDGenerator(),\n      // Whether to raise local events for this transaction.\n      applyLocally: applyLocally,\n      // Count of how many times we've retried the transaction.\n      retryCount: 0,\n      // Function to call to clean up our .on() listener.\n      unwatcher: unwatcher,\n      // Stores why a transaction was aborted.\n      abortReason: null,\n      currentWriteId: null,\n      currentInputSnapshot: null,\n      currentOutputSnapshotRaw: null,\n      currentOutputSnapshotResolved: null\n    }; // Run transaction initially.\n\n    var currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    var newVal = transaction.update(currentState.val());\n\n    if (newVal === undefined) {\n      // Abort transaction.\n      transaction.unwatcher();\n      transaction.currentOutputSnapshotRaw = null;\n      transaction.currentOutputSnapshotResolved = null;\n\n      if (transaction.onComplete) {\n        // We just set the input snapshot, so this cast should be safe\n        var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n        transaction.onComplete(null, false, snapshot);\n      }\n    } else {\n      validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n      transaction.status = TransactionStatus.RUN;\n      var queueNode = this.transactionQueueTree_.subTree(path);\n      var nodeQueue = queueNode.getValue() || [];\n      nodeQueue.push(transaction);\n      queueNode.setValue(nodeQueue); // Update visibleData and raise events\n      // Note: We intentionally raise events after updating all of our\n      // transaction state, since the user could start new transactions from the\n      // event callbacks.\n\n      var priorityForNode = void 0;\n\n      if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        priorityForNode = safeGet(newVal, '.priority');\n        assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n      } else {\n        var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n        priorityForNode = currentNode.getPriority().val();\n      }\n\n      var serverValues = this.generateServerValues();\n      var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n      var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n      transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n      transaction.currentOutputSnapshotResolved = newNode;\n      transaction.currentWriteId = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n      this.sendReadyTransactions_();\n    }\n  };\n  /**\r\n   * @param excludeSets A specific set to exclude\r\n   */\n\n\n  Repo.prototype.getLatestState_ = function (path, excludeSets) {\n    return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n  };\n  /**\r\n   * Sends any already-run transactions that aren't waiting for outstanding\r\n   * transactions to complete.\r\n   *\r\n   * Externally it's called with no arguments, but it calls itself recursively\r\n   * with a particular transactionQueueTree node to recurse through the tree.\r\n   *\r\n   * @param node transactionQueueTree node to start at.\r\n   */\n\n\n  Repo.prototype.sendReadyTransactions_ = function (node) {\n    var _this = this;\n\n    if (node === void 0) {\n      node = this.transactionQueueTree_;\n    } // Before recursing, make sure any completed transactions are removed.\n\n\n    if (!node) {\n      this.pruneCompletedTransactionsBelowNode_(node);\n    }\n\n    if (node.getValue() !== null) {\n      var queue = this.buildTransactionQueue_(node);\n      assert(queue.length > 0, 'Sending zero length transaction queue');\n      var allRun = queue.every(function (transaction) {\n        return transaction.status === TransactionStatus.RUN;\n      }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n      if (allRun) {\n        this.sendTransactionQueue_(node.path(), queue);\n      }\n    } else if (node.hasChildren()) {\n      node.forEachChild(function (childNode) {\n        _this.sendReadyTransactions_(childNode);\n      });\n    }\n  };\n  /**\r\n   * Given a list of run transactions, send them to the server and then handle\r\n   * the result (success or failure).\r\n   *\r\n   * @param path The location of the queue.\r\n   * @param queue Queue of transactions under the specified location.\r\n   */\n\n\n  Repo.prototype.sendTransactionQueue_ = function (path, queue) {\n    var _this = this; // Mark transactions as sent and increment retry count!\n\n\n    var setsToIgnore = queue.map(function (txn) {\n      return txn.currentWriteId;\n    });\n    var latestState = this.getLatestState_(path, setsToIgnore);\n    var snapToSend = latestState;\n    var latestHash = latestState.hash();\n\n    for (var i = 0; i < queue.length; i++) {\n      var txn = queue[i];\n      assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n      txn.status = TransactionStatus.SENT;\n      txn.retryCount++;\n      var relativePath = newRelativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n      snapToSend = snapToSend.updateChild(relativePath\n      /** @type {!Node} */\n      , txn.currentOutputSnapshotRaw);\n    }\n\n    var dataToSend = snapToSend.val(true);\n    var pathToSend = path; // Send the put.\n\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n      _this.log_('transaction put response', {\n        path: pathToSend.toString(),\n        status: status\n      });\n\n      var events = [];\n\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        var callbacks = [];\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            var node = queue[i].currentOutputSnapshotResolved;\n            var ref = new Reference(_this, queue[i].path);\n            var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n            callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n          }\n\n          queue[i].unwatcher();\n        } // Now remove the completed transactions.\n\n\n        _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n        _this.sendReadyTransactions_();\n\n        eventQueueRaiseEventsForChangedPath(_this.eventQueue_, path, events); // Finally, trigger onComplete callbacks.\n\n        for (var i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (var i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n          for (var i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        _this.rerunTransactions_(path);\n      }\n    }, latestHash);\n  };\n  /**\r\n   * Finds all transactions dependent on the data at changedPath and reruns them.\r\n   *\r\n   * Should be called any time cached data changes.\r\n   *\r\n   * Return the highest path that was affected by rerunning transactions. This\r\n   * is the path at which events need to be raised for.\r\n   *\r\n   * @param changedPath The path in mergedData that changed.\r\n   * @return The rootmost path that was affected by rerunning transactions.\r\n   */\n\n\n  Repo.prototype.rerunTransactions_ = function (changedPath) {\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n    var path = rootMostTransactionNode.path();\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n    return path;\n  };\n  /**\r\n   * Does all the work of rerunning transactions (as well as cleans up aborted\r\n   * transactions and whatnot).\r\n   *\r\n   * @param queue The queue of transactions to run.\r\n   * @param path The path the queue is for.\r\n   */\n\n\n  Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\n    if (queue.length === 0) {\n      return; // Nothing to do!\n    } // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions or\n    // sets.\n\n\n    var callbacks = [];\n    var events = []; // Ignore all of the sets we're going to re-run.\n\n    var txnsToRerun = queue.filter(function (q) {\n      return q.status === TransactionStatus.RUN;\n    });\n    var setsToIgnore = txnsToRerun.map(function (q) {\n      return q.currentWriteId;\n    });\n\n    for (var i = 0; i < queue.length; i++) {\n      var transaction = queue[i];\n      var relativePath = newRelativePath(path, transaction.path);\n      var abortTransaction = false,\n          abortReason = void 0;\n      assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n      if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n        abortTransaction = true;\n        abortReason = transaction.abortReason;\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else if (transaction.status === TransactionStatus.RUN) {\n        if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n          abortTransaction = true;\n          abortReason = 'maxretry';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        } else {\n          // This code reruns a transaction\n          var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n          transaction.currentInputSnapshot = currentNode;\n          var newData = queue[i].update(currentNode.val());\n\n          if (newData !== undefined) {\n            validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n            var newDataNode = nodeFromJSON$1(newData);\n            var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n            if (!hasExplicitPriority) {\n              // Keep the old priority if there wasn't a priority explicitly specified.\n              newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n            }\n\n            var oldWriteId = transaction.currentWriteId;\n            var serverValues = this.generateServerValues();\n            var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n            transaction.currentOutputSnapshotRaw = newDataNode;\n            transaction.currentOutputSnapshotResolved = newNodeResolved;\n            transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n            setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n            events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n            events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n          } else {\n            abortTransaction = true;\n            abortReason = 'nodata';\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n          }\n        }\n      }\n\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n      events = [];\n\n      if (abortTransaction) {\n        // Abort.\n        queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with\n        // mergedData/visibleData (as it prunes data). So defer the unwatcher\n        // until we're done.\n\n        (function (unwatcher) {\n          setTimeout(unwatcher, Math.floor(0));\n        })(queue[i].unwatcher);\n\n        if (queue[i].onComplete) {\n          if (abortReason === 'nodata') {\n            var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n            var lastInput\n            /** @type {!Node} */\n            = queue[i].currentInputSnapshot;\n            var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n            callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n          } else {\n            callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n          }\n        }\n      }\n    } // Clean up completed transactions.\n\n\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    } // Try to send the transaction result to the server.\n\n\n    this.sendReadyTransactions_();\n  };\n  /**\r\n   * Returns the rootmost ancestor node of the specified path that has a pending\r\n   * transaction on it, or just returns the node for the given path if there are\r\n   * no pending transactions on any ancestor.\r\n   *\r\n   * @param path The location to start at.\r\n   * @return The rootmost node with a transaction.\r\n   */\n\n\n  Repo.prototype.getAncestorTransactionNode_ = function (path) {\n    var front; // Start at the root and walk deeper into the tree towards path until we\n    // find a node with pending transactions.\n\n    var transactionNode = this.transactionQueueTree_;\n    front = pathGetFront(path);\n\n    while (front !== null && transactionNode.getValue() === null) {\n      transactionNode = transactionNode.subTree(front);\n      path = pathPopFront(path);\n      front = pathGetFront(path);\n    }\n\n    return transactionNode;\n  };\n  /**\r\n   * Builds the queue of all transactions at or below the specified\r\n   * transactionNode.\r\n   *\r\n   * @param transactionNode\r\n   * @return The generated queue.\r\n   */\n\n\n  Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    var transactionQueue = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n    transactionQueue.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    return transactionQueue;\n  };\n\n  Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n    var _this = this;\n\n    var nodeQueue = node.getValue();\n\n    if (nodeQueue !== null) {\n      for (var i = 0; i < nodeQueue.length; i++) {\n        queue.push(nodeQueue[i]);\n      }\n    }\n\n    node.forEachChild(function (child) {\n      _this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n  };\n  /**\r\n   * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n   */\n\n\n  Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n    var _this = this;\n\n    var queue = node.getValue();\n\n    if (queue) {\n      var to = 0;\n\n      for (var from = 0; from < queue.length; from++) {\n        if (queue[from].status !== TransactionStatus.COMPLETED) {\n          queue[to] = queue[from];\n          to++;\n        }\n      }\n\n      queue.length = to;\n      node.setValue(queue.length > 0 ? queue : null);\n    }\n\n    node.forEachChild(function (childNode) {\n      _this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n  };\n  /**\r\n   * Aborts all transactions on ancestors or descendants of the specified path.\r\n   * Called when doing a set() or update() since we consider them incompatible\r\n   * with transactions.\r\n   *\r\n   * @param path Path for which we want to abort related transactions.\r\n   */\n\n\n  Repo.prototype.abortTransactions_ = function (path) {\n    var _this = this;\n\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\n    var transactionNode = this.transactionQueueTree_.subTree(path);\n    transactionNode.forEachAncestor(function (node) {\n      _this.abortTransactionsOnNode_(node);\n    });\n    this.abortTransactionsOnNode_(transactionNode);\n    transactionNode.forEachDescendant(function (node) {\n      _this.abortTransactionsOnNode_(node);\n    });\n    return affectedPath;\n  };\n  /**\r\n   * Abort transactions stored in this transaction queue node.\r\n   *\r\n   * @param node Node to abort transactions for.\r\n   */\n\n\n  Repo.prototype.abortTransactionsOnNode_ = function (node) {\n    var queue = node.getValue();\n\n    if (queue !== null) {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more transactions\n      // or sets.\n      var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n      // abort, while the unsent ones can be immediately aborted and removed.\n\n      var events = [];\n      var lastSent = -1;\n\n      for (var i = 0; i < queue.length; i++) {\n        if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n          assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n          lastSent = i; // Mark transaction for abort when it comes back.\n\n          queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n          queue[i].abortReason = 'set';\n        } else {\n          assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n          queue[i].unwatcher();\n          events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n          if (queue[i].onComplete) {\n            var snapshot = null;\n            callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n          }\n        }\n      }\n\n      if (lastSent === -1) {\n        // We're not waiting for any sent transactions.  We can clear the queue.\n        node.setValue(null);\n      } else {\n        // Remove the transactions we aborted.\n        queue.length = lastSent + 1;\n      } // Now fire the callbacks.\n\n\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, node.path(), events);\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    }\n  };\n\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, new QueryParams(), false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (pathIsEmpty(this.path)) {\n      return null;\n    } else {\n      return pathGetBack(this.path);\n    }\n  };\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (pathGetFront(this.path) === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, pathChild(this.path, pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = pathParent(this.path);\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    var deferred = new Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.setWithPriority(pathChild(this.path, '.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.push = function (value, onComplete) {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(function () {});\n    }\n\n    return thennablePushRef;\n  };\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(app_, authProvider_) {\n    var _this = this;\n\n    this.app_ = app_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].interrupt();\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    var e_3, _a, e_4, _b;\n\n    try {\n      for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_4 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].resume();\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  /**\r\n   * Update an existing repo in place to point to a new host/port.\r\n   */\n\n\n  RepoManager.prototype.applyEmulatorSettings = function (repo, host, port) {\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n    /* secure= */\n    false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n    if (repo.repoInfo_.nodeAdmin) {\n      repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\n    var dbUrl = url || app.options.databaseURL;\n\n    if (dbUrl === undefined) {\n      if (!app.options.projectId) {\n        fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n      }\n\n      log('Using default host for project ', app.options.projectId);\n      dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    var repoInfo = parsedUrl.repoInfo;\n    var isEmulator;\n    var dbEmulatorHost = undefined;\n\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n      parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app, authProvider);\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!pathIsEmpty(parsedUrl.path)) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app, authTokenProvider);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.key];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param repoInfo The metadata about the Repo\r\n   * @return The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\n    var appRepos = safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(repoInternal_) {\n    var _this = this;\n\n    this.repoInternal_ = repoInternal_;\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this.instanceStarted_ = false;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            this.checkDeleted_('delete');\n            RepoManager.getInstance().deleteRepo(this.repo_);\n            this.repoInternal_ = null;\n            this.rootInternal_ = null;\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      }\n    };\n\n    if (!(repoInternal_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n  }\n\n  Object.defineProperty(Database.prototype, \"repo_\", {\n    get: function get() {\n      if (!this.instanceStarted_) {\n        this.repoInternal_.start();\n        this.instanceStarted_ = true;\n      }\n\n      return this.repoInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"root_\", {\n    get: function get() {\n      if (!this.rootInternal_) {\n        this.rootInternal_ = new Reference(this.repo_, newEmptyPath());\n      }\n\n      return this.rootInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host the emulator host (ex: localhost)\r\n   * @param port the emulator port (ex: 8080)\r\n   */\n\n  Database.prototype.useEmulator = function (host, port) {\n    this.checkDeleted_('useEmulator');\n\n    if (this.instanceStarted_) {\n      fatal('Cannot call useEmulator() after instance has already been initialized.');\n      return;\n    } // Modify the repo to apply emulator settings\n\n\n    RepoManager.getInstance().applyEmulatorSettings(this.repoInternal_, host, port);\n  };\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @return Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (!this.repo_.repoInfo_.isCustomHost() && repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repoInternal_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: function increment(delta) {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: RepoManager.getInstance().databaseFromApp(app, authProvider, url, nodeAdmin),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nvar ConnectionTarget = RepoInfo;\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\nvar name = \"@firebase/database\";\nvar version = \"0.9.4\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, url) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };"],"sourceRoot":""}